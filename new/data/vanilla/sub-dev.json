[
    {
        "input": "[struct _ sep0] Show name , country , age for all singers from France ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country ( France ), song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name , singer.Country , singer.Age from stadium  where  singer.Country = \"France\" "
    },
    {
        "input": "[struct _ sep0] Show name , country , age for all singers above age 20 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name , singer.Country , singer.Age from stadium  where  singer.Age > 20 "
    },
    {
        "input": "[struct _ sep0] Show name , country , age for all singers above the average age . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name , singer.Country , singer.Age from stadium  where  @.@ > avg ( singer.Age )  "
    },
    {
        "input": "[struct _ sep0] Show name , country , age for all singers who are older than average ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name , singer.Country , singer.Age from stadium  where  @.@ > avg ( singer.Age )  "
    },
    {
        "input": "[struct _ sep0] Show name , country , age for all singers who performed in a concert in 2014 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name , singer.Country , singer.Age from stadium  where  concert.Year = 2014 "
    },
    {
        "input": "[struct _ sep0] Show name , country , age for all singers who have a song having ' Hey ' in its name ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name , singer.Country , singer.Age from stadium  where  singer.Song_Name like \"%Hey%\" "
    },
    {
        "input": "[struct _ sep0] Show name , country , age for all singers who has a song with the word ' Hey ' in its title ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name , singer.Country , singer.Age from stadium  where  singer.Song_Name like \"%Hey%\" "
    },
    {
        "input": "[struct _ sep0] What are the names , countries , and ages for every singer from France ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country ( France ), song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name , singer.Country , singer.Age from stadium  where  singer.Country = \"France\" "
    },
    {
        "input": "[struct _ sep0] What are the names , countries , and ages for every singer above age 20 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name , singer.Country , singer.Age from stadium  where  singer.Age > 20 "
    },
    {
        "input": "[struct _ sep0] What are the names , countries , and ages for every singer above the average age . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name , singer.Country , singer.Age from stadium  where  @.@ > avg ( singer.Age )  "
    },
    {
        "input": "[struct _ sep0] What are the names , countries , and ages for every singer who are older than average ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name , singer.Country , singer.Age from stadium  where  @.@ > avg ( singer.Age )  "
    },
    {
        "input": "[struct _ sep0] What are the names , countries , and ages for every singer who performed in a concert in 2014 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name , singer.Country , singer.Age from stadium  where  concert.Year = 2014 "
    },
    {
        "input": "[struct _ sep0] What are the names , countries , and ages for every singer who have a song having ' Hey ' in its name ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name , singer.Country , singer.Age from stadium  where  singer.Song_Name like \"%Hey%\" "
    },
    {
        "input": "[struct _ sep0] What are the names , countries , and ages for every singer who has a song with the word ' Hey ' in its title ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name , singer.Country , singer.Age from stadium  where  singer.Song_Name like \"%Hey%\" "
    },
    {
        "input": "[struct _ sep0] What is the average , minimum , and maximum age of all singers above age 20 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select avg ( singer.Age )  , min ( singer.Age )  , max ( singer.Age )  from stadium  where  singer.Age > 20 "
    },
    {
        "input": "[struct _ sep0] What is the average , minimum , and maximum age of all singers above the average age . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select avg ( singer.Age )  , min ( singer.Age )  , max ( singer.Age )  from stadium  where  @.@ > avg ( singer.Age )  "
    },
    {
        "input": "[struct _ sep0] What is the average , minimum , and maximum age of all singers who are older than average ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select avg ( singer.Age )  , min ( singer.Age )  , max ( singer.Age )  from stadium  where  @.@ > avg ( singer.Age )  "
    },
    {
        "input": "[struct _ sep0] What is the average , minimum , and maximum age of all singers who performed in a concert in 2014 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select avg ( singer.Age )  , min ( singer.Age )  , max ( singer.Age )  from stadium  where  concert.Year = 2014 "
    },
    {
        "input": "[struct _ sep0] What is the average , minimum , and maximum age of all singers who have a song having ' Hey ' in its name ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select avg ( singer.Age )  , min ( singer.Age )  , max ( singer.Age )  from stadium  where  singer.Song_Name like \"%Hey%\" "
    },
    {
        "input": "[struct _ sep0] What is the average , minimum , and maximum age of all singers who has a song with the word ' Hey ' in its title ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select avg ( singer.Age )  , min ( singer.Age )  , max ( singer.Age )  from stadium  where  singer.Song_Name like \"%Hey%\" "
    },
    {
        "input": "[struct _ sep0] What are all distinct countries in descending order of age ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select  distinct singer.Country from stadium  order by singer.Age desc"
    },
    {
        "input": "[struct _ sep0] What are the different countries with singers ordered by age from the oldest to the youngest . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select  distinct singer.Country from stadium  order by singer.Age desc"
    },
    {
        "input": "[struct _ sep0] What are the different countries with singers in descending order of age ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select  distinct singer.Country from stadium  order by singer.Age desc"
    },
    {
        "input": "[struct _ sep0] What are the different countries with singers from France ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country ( France ), song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select  distinct singer.Country from stadium  where  singer.Country = \"France\" "
    },
    {
        "input": "[struct _ sep0] What are the different countries with singers above the average age . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select  distinct singer.Country from stadium  where  @.@ > avg ( singer.Age )  "
    },
    {
        "input": "[struct _ sep0] What are the different countries with singers who are older than average ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select  distinct singer.Country from stadium  where  @.@ > avg ( singer.Age )  "
    },
    {
        "input": "[struct _ sep0] What are the different countries with singers who performed in a concert in 2014 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select  distinct singer.Country from stadium  where  concert.Year = 2014 "
    },
    {
        "input": "[struct _ sep0] What are the different countries with singers who have a song having ' Hey ' in its name ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select  distinct singer.Country from stadium  where  singer.Song_Name like \"%Hey%\" "
    },
    {
        "input": "[struct _ sep0] What are the different countries with singers who has a song with the word ' Hey ' in its title ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select  distinct singer.Country from stadium  where  singer.Song_Name like \"%Hey%\" "
    },
    {
        "input": "[struct _ sep0] List all song names by singers ordered by age from the oldest to the youngest . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Song_Name from stadium  order by singer.Age desc"
    },
    {
        "input": "[struct _ sep0] List all song names by singers in descending order of age ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Song_Name from stadium  order by singer.Age desc"
    },
    {
        "input": "[struct _ sep0] List all song names by singers from France ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country ( France ), song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Song_Name from stadium  where  singer.Country = \"France\" "
    },
    {
        "input": "[struct _ sep0] List all song names by singers above age 20 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Song_Name from stadium  where  singer.Age > 20 "
    },
    {
        "input": "[struct _ sep0] List all song names by singers who performed in a concert in 2014 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Song_Name from stadium  where  concert.Year = 2014 "
    },
    {
        "input": "[struct _ sep0] List all song names by singers who have a song having ' Hey ' in its name ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Song_Name from stadium  where  singer.Song_Name like \"%Hey%\" "
    },
    {
        "input": "[struct _ sep0] List all song names by singers who has a song with the word ' Hey ' in its title ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Song_Name from stadium  where  singer.Song_Name like \"%Hey%\" "
    },
    {
        "input": "[struct _ sep0] What are all the song names by singers ordered by age from the oldest to the youngest . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Song_Name from stadium  order by singer.Age desc"
    },
    {
        "input": "[struct _ sep0] What are all the song names by singers in descending order of age ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Song_Name from stadium  order by singer.Age desc"
    },
    {
        "input": "[struct _ sep0] What are all the song names by singers from France ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country ( France ), song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Song_Name from stadium  where  singer.Country = \"France\" "
    },
    {
        "input": "[struct _ sep0] What are all the song names by singers above age 20 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Song_Name from stadium  where  singer.Age > 20 "
    },
    {
        "input": "[struct _ sep0] What are all the song names by singers who performed in a concert in 2014 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Song_Name from stadium  where  concert.Year = 2014 "
    },
    {
        "input": "[struct _ sep0] What are all the song names by singers who have a song having ' Hey ' in its name ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Song_Name from stadium  where  singer.Song_Name like \"%Hey%\" "
    },
    {
        "input": "[struct _ sep0] What are all the song names by singers who has a song with the word ' Hey ' in its title ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Song_Name from stadium  where  singer.Song_Name like \"%Hey%\" "
    },
    {
        "input": "[struct _ sep0] Show location and name for all stadiums with highest average attendance ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Location , stadium.Name from stadium  order by stadium.Average desc limit 1"
    },
    {
        "input": "[struct _ sep0] Show location and name for all stadiums with the highest average attendance ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Location , stadium.Name from stadium  order by stadium.Average desc limit 1"
    },
    {
        "input": "[struct _ sep0] Show location and name for all stadiums without any concerts ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Location , stadium.Name from stadium  where  @.@ not in concert.* "
    },
    {
        "input": "[struct _ sep0] Show location and name for all stadiums which some concerts happened in the years of both 2014 and 2015 . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Location , stadium.Name from stadium  where  concert.Year = 2014  and  concert.Year = 2015 "
    },
    {
        "input": "[struct _ sep0] Show location and name for all stadiums that had concerts that occurred in both 2014 and 2015 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Location , stadium.Name from stadium  where  concert.Year = 2014  and  concert.Year = 2015 "
    },
    {
        "input": "[struct _ sep0] What are the locations and names of all stations with highest average attendance ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Location , stadium.Name from stadium  order by stadium.Average desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the locations and names of all stations with the highest average attendance ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Location , stadium.Name from stadium  order by stadium.Average desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the name and capacity for the stadium with a capacity between 5000 and 10000 . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name , stadium.Capacity from stadium  where  stadium.Capacity between 5000 and 10000 "
    },
    {
        "input": "[struct _ sep0] What is the name and capacity for the stadium with capacity between 5000 and 10000 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name , stadium.Capacity from stadium  where  stadium.Capacity between 5000 and 10000 "
    },
    {
        "input": "[struct _ sep0] What is the name and capacity for the stadium without any concerts ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name , stadium.Capacity from stadium  where  @.@ not in concert.* "
    },
    {
        "input": "[struct _ sep0] What is the name and capacity for the stadium which some concerts happened in the years of both 2014 and 2015 . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name , stadium.Capacity from stadium  where  concert.Year = 2014  and  concert.Year = 2015 "
    },
    {
        "input": "[struct _ sep0] What is the name and capacity for the stadium that had concerts that occurred in both 2014 and 2015 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name , stadium.Capacity from stadium  where  concert.Year = 2014  and  concert.Year = 2015 "
    },
    {
        "input": "[struct _ sep0] What is the name and capacity for the stadium with a capacity between 5000 and 10000 . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name , stadium.Capacity from stadium  where  stadium.Capacity between 5000 and 10000 "
    },
    {
        "input": "[struct _ sep0] What is the name and capacity for the stadium with capacity between 5000 and 10000 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name , stadium.Capacity from stadium  where  stadium.Capacity between 5000 and 10000 "
    },
    {
        "input": "[struct _ sep0] What is the name and capacity for the stadium without any concerts ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name , stadium.Capacity from stadium  where  @.@ not in concert.* "
    },
    {
        "input": "[struct _ sep0] What is the name and capacity for the stadium which some concerts happened in the years of both 2014 and 2015 . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name , stadium.Capacity from stadium  where  concert.Year = 2014  and  concert.Year = 2015 "
    },
    {
        "input": "[struct _ sep0] What is the name and capacity for the stadium that had concerts that occurred in both 2014 and 2015 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name , stadium.Capacity from stadium  where  concert.Year = 2014  and  concert.Year = 2015 "
    },
    {
        "input": "[struct _ sep0] Show the stadium name and capacity with most number of concerts after 2013 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name , stadium.Capacity from stadium  where  concert.Year > 2013  group by stadium.Stadium_ID  order by count ( concert.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Show the stadium name and capacity with most number of concerts in 2014 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name , stadium.Capacity from stadium  where  concert.Year = 2014  group by stadium.Stadium_ID  order by count ( concert.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the name and capacity of the stadium with the most concerts in year 2014 . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name , stadium.Capacity from stadium  where  concert.Year = 2014  group by stadium.Stadium_ID  order by count ( concert.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the name and capacity of the stadium with the most concerts in 2014 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name , stadium.Capacity from stadium  where  concert.Year = 2014  group by stadium.Stadium_ID  order by count ( concert.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Which year in year 2014 or 2015 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select concert.Year from stadium  where  concert.Year = 2014  or  concert.Year = 2015 "
    },
    {
        "input": "[struct _ sep0] What is the year in year 2014 or 2015 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select concert.Year from stadium  where  concert.Year = 2014  or  concert.Year = 2015 "
    },
    {
        "input": "[struct _ sep0] Show the stadium names with a capacity between 5000 and 10000 . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name from stadium  where  stadium.Capacity between 5000 and 10000 "
    },
    {
        "input": "[struct _ sep0] Show the stadium names with capacity between 5000 and 10000 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name from stadium  where  stadium.Capacity between 5000 and 10000 "
    },
    {
        "input": "[struct _ sep0] Show the stadium names with highest average attendance ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name from stadium  order by stadium.Average desc limit 1"
    },
    {
        "input": "[struct _ sep0] Show the stadium names with the highest average attendance ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name from stadium  order by stadium.Average desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names of the stadiums with a capacity between 5000 and 10000 . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name from stadium  where  stadium.Capacity between 5000 and 10000 "
    },
    {
        "input": "[struct _ sep0] What are the names of the stadiums with capacity between 5000 and 10000 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name from stadium  where  stadium.Capacity between 5000 and 10000 "
    },
    {
        "input": "[struct _ sep0] What are the names of the stadiums with highest average attendance ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name from stadium  order by stadium.Average desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names of the stadiums with the highest average attendance ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name from stadium  order by stadium.Average desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names of the stadiums which some concerts happened in the years of both 2014 and 2015 . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name from stadium  where  concert.Year = 2014  and  concert.Year = 2015 "
    },
    {
        "input": "[struct _ sep0] What are the names of the stadiums that had concerts that occurred in both 2014 and 2015 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name from stadium  where  concert.Year = 2014  and  concert.Year = 2015 "
    },
    {
        "input": "[struct _ sep0] Show countries where a singer above age 40 and in descending order of age ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Country from stadium  where  singer.Age > 40  order by singer.Age desc"
    },
    {
        "input": "[struct _ sep0] Show names for all stadiums except for stadiums having a concert in year 2014 or after . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name from stadium  where  except_  @.@ is concert.*  and  concert.Year >= 2014 "
    },
    {
        "input": "[struct _ sep0] What are the names of all stadiums that did not have a concert in year 2014 or after . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name from stadium  where  except_  @.@ is concert.*  and  concert.Year >= 2014 "
    },
    {
        "input": "[struct _ sep0] What are the names of the singers ordered by age from the oldest to the youngest . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name from stadium  order by singer.Age desc"
    },
    {
        "input": "[struct _ sep0] What are the names of the singers in descending order of age ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name from stadium  order by singer.Age desc"
    },
    {
        "input": "[struct _ sep0] What are the names of the singers from France ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country ( France ), song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name from stadium  where  singer.Country = \"France\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the singers above age 20 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name from stadium  where  singer.Age > 20 "
    },
    {
        "input": "[struct _ sep0] What are the names of the singers above the average age . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name from stadium  where  @.@ > avg ( singer.Age )  "
    },
    {
        "input": "[struct _ sep0] What are the names of the singers who are older than average ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name from stadium  where  @.@ > avg ( singer.Age )  "
    },
    {
        "input": "[struct _ sep0] What are the names of the singers who have a song having ' Hey ' in its name ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name from stadium  where  singer.Song_Name like \"%Hey%\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the singers who has a song with the word ' Hey ' in its title ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name from stadium  where  singer.Song_Name like \"%Hey%\" "
    },
    {
        "input": "[struct _ sep0] what is the name and nation of the singer ordered by age from the oldest to the youngest . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name , singer.Country from stadium  order by singer.Age desc"
    },
    {
        "input": "[struct _ sep0] what is the name and nation of the singer in descending order of age ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name , singer.Country from stadium  order by singer.Age desc"
    },
    {
        "input": "[struct _ sep0] what is the name and nation of the singer from France ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country ( France ), song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name , singer.Country from stadium  where  singer.Country = \"France\" "
    },
    {
        "input": "[struct _ sep0] what is the name and nation of the singer above age 20 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name , singer.Country from stadium  where  singer.Age > 20 "
    },
    {
        "input": "[struct _ sep0] what is the name and nation of the singer above the average age . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name , singer.Country from stadium  where  @.@ > avg ( singer.Age )  "
    },
    {
        "input": "[struct _ sep0] what is the name and nation of the singer who are older than average ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name , singer.Country from stadium  where  @.@ > avg ( singer.Age )  "
    },
    {
        "input": "[struct _ sep0] what is the name and nation of the singer who performed in a concert in 2014 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name , singer.Country from stadium  where  concert.Year = 2014 "
    },
    {
        "input": "[struct _ sep0] What is the name and country of origin of every singer ordered by age from the oldest to the youngest . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name , singer.Country from stadium  order by singer.Age desc"
    },
    {
        "input": "[struct _ sep0] What is the name and country of origin of every singer in descending order of age ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name , singer.Country from stadium  order by singer.Age desc"
    },
    {
        "input": "[struct _ sep0] What is the name and country of origin of every singer from France ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country ( France ), song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name , singer.Country from stadium  where  singer.Country = \"France\" "
    },
    {
        "input": "[struct _ sep0] What is the name and country of origin of every singer above age 20 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name , singer.Country from stadium  where  singer.Age > 20 "
    },
    {
        "input": "[struct _ sep0] What is the name and country of origin of every singer above the average age . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name , singer.Country from stadium  where  @.@ > avg ( singer.Age )  "
    },
    {
        "input": "[struct _ sep0] What is the name and country of origin of every singer who are older than average ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name , singer.Country from stadium  where  @.@ > avg ( singer.Age )  "
    },
    {
        "input": "[struct _ sep0] What is the name and country of origin of every singer who performed in a concert in 2014 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name , singer.Country from stadium  where  concert.Year = 2014 "
    },
    {
        "input": "[struct _ sep0] Find the name and location of the stadiums with a capacity between 5000 and 10000 . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name , stadium.Location from stadium  where  stadium.Capacity between 5000 and 10000 "
    },
    {
        "input": "[struct _ sep0] Find the name and location of the stadiums with highest average attendance ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name , stadium.Location from stadium  order by stadium.Average desc limit 1"
    },
    {
        "input": "[struct _ sep0] Find the name and location of the stadiums with the highest average attendance ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name , stadium.Location from stadium  order by stadium.Average desc limit 1"
    },
    {
        "input": "[struct _ sep0] Find the name and location of the stadiums without any concerts ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name , stadium.Location from stadium  where  @.@ not in concert.* "
    },
    {
        "input": "[struct _ sep0] What are the names and locations of the stadiums with a capacity between 5000 and 10000 . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name , stadium.Location from stadium  where  stadium.Capacity between 5000 and 10000 "
    },
    {
        "input": "[struct _ sep0] What are the names and locations of the stadiums with highest average attendance ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name , stadium.Location from stadium  order by stadium.Average desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names and locations of the stadiums with the highest average attendance ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name , stadium.Location from stadium  order by stadium.Average desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names and locations of the stadiums without any concerts ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name , stadium.Location from stadium  where  @.@ not in concert.* "
    },
    {
        "input": "[struct _ sep0] What are the number of concerts occurred in 2014 or 2015 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select count ( concert.* )  from stadium  where  concert.Year = 2014  or  concert.Year = 2015 "
    },
    {
        "input": "[struct _ sep0] Find the number of pets that are raised by female students ( with sex F ) . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select count ( pets.* )  from student  where  student.Sex = \"F\" "
    },
    {
        "input": "[struct _ sep0] Find the number of pets are raised by female students ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select count ( pets.* )  from student  where  student.Sex = \"F\" "
    },
    {
        "input": "[struct _ sep0] Find the number of pets whose age is older than 1 . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select count ( pets.* )  from student  where  pets.pet_age > 1 "
    },
    {
        "input": "[struct _ sep0] Find the number of pets who is older than 1 ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select count ( pets.* )  from student  where  pets.pet_age > 1 "
    },
    {
        "input": "[struct _ sep0] How many pets that are raised by female students ( with sex F ) . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select count ( pets.* )  from student  where  student.Sex = \"F\" "
    },
    {
        "input": "[struct _ sep0] How many pets are raised by female students ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select count ( pets.* )  from student  where  student.Sex = \"F\" "
    },
    {
        "input": "[struct _ sep0] How many pets whose age is older than 1 . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select count ( pets.* )  from student  where  pets.pet_age > 1 "
    },
    {
        "input": "[struct _ sep0] How many pets who is older than 1 ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select count ( pets.* )  from student  where  pets.pet_age > 1 "
    },
    {
        "input": "[struct _ sep0] How many pets are owned by students whose last name is ' Smith ' . [/struct _ sep0]| pets _ 1 | student : stuid, lname ( Smith ), fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select count ( has_pet.* )  from student  where  student.LName = \"Smith\" "
    },
    {
        "input": "[struct _ sep0] How many pets are owned by students whose last name is ' Smith ' ? [/struct _ sep0]| pets _ 1 | student : stuid, lname ( Smith ), fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select count ( has_pet.* )  from student  where  student.LName = \"Smith\" "
    },
    {
        "input": "[struct _ sep0] Find the number of dog pets whose weight is heavier than 10 . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( dog ), pet _ age, weight",
        "gold_natsql": "select count ( pets.* )  from student  where  pets.PetType = \"dog\"  and  pets.weight > 10 "
    },
    {
        "input": "[struct _ sep0] Find the number of dog pets have a greater weight than 10 ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( dog ), pet _ age, weight",
        "gold_natsql": "select count ( pets.* )  from student  where  pets.PetType = \"dog\"  and  pets.weight > 10 "
    },
    {
        "input": "[struct _ sep0] Find the number of dog pets whose age is older than 1 . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( dog ), pet _ age, weight",
        "gold_natsql": "select count ( pets.* )  from student  where  pets.PetType = \"dog\"  and  pets.pet_age > 1 "
    },
    {
        "input": "[struct _ sep0] Find the number of dog pets who is older than 1 ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( dog ), pet _ age, weight",
        "gold_natsql": "select count ( pets.* )  from student  where  pets.PetType = \"dog\"  and  pets.pet_age > 1 "
    },
    {
        "input": "[struct _ sep0] How many dog pets whose weight is heavier than 10 . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( dog ), pet _ age, weight",
        "gold_natsql": "select count ( pets.* )  from student  where  pets.PetType = \"dog\"  and  pets.weight > 10 "
    },
    {
        "input": "[struct _ sep0] How many dog pets have a greater weight than 10 ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( dog ), pet _ age, weight",
        "gold_natsql": "select count ( pets.* )  from student  where  pets.PetType = \"dog\"  and  pets.weight > 10 "
    },
    {
        "input": "[struct _ sep0] How many dog pets whose age is older than 1 . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( dog ), pet _ age, weight",
        "gold_natsql": "select count ( pets.* )  from student  where  pets.PetType = \"dog\"  and  pets.pet_age > 1 "
    },
    {
        "input": "[struct _ sep0] How many dog pets who is older than 1 ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( dog ), pet _ age, weight",
        "gold_natsql": "select count ( pets.* )  from student  where  pets.PetType = \"dog\"  and  pets.pet_age > 1 "
    },
    {
        "input": "[struct _ sep0] Find the first name of students who do not have any pet . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select  distinct student.Fname from student  where  @.@ not in student.*  and  @.@ join has_pet.* "
    },
    {
        "input": "[struct _ sep0] Find the first name of students who do not own any pets ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select  distinct student.Fname from student  where  @.@ not in student.*  and  @.@ join has_pet.* "
    },
    {
        "input": "[struct _ sep0] What are the first names of every student who do not have any pet . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select  distinct student.Fname from student  where  @.@ not in student.*  and  @.@ join has_pet.* "
    },
    {
        "input": "[struct _ sep0] What are the first names of every student who do not own any pets ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select  distinct student.Fname from student  where  @.@ not in student.*  and  @.@ join has_pet.* "
    },
    {
        "input": "[struct _ sep0] Find the first name of students who do not have any pet . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select student.Fname from student  where  @.@ not in student.*  and  @.@ join has_pet.* "
    },
    {
        "input": "[struct _ sep0] Find the first name of students who do not own any pets ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select student.Fname from student  where  @.@ not in student.*  and  @.@ join has_pet.* "
    },
    {
        "input": "[struct _ sep0] Find the id of students who do not have any pet . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select student.StuID from student  where  @.@ not in student.*  and  @.@ join has_pet.* "
    },
    {
        "input": "[struct _ sep0] Find the id of students who do not own any pets ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select student.StuID from student  where  @.@ not in student.*  and  @.@ join has_pet.* "
    },
    {
        "input": "[struct _ sep0] What are the ids of the students who do not have any pet . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select student.StuID from student  where  @.@ not in student.*  and  @.@ join has_pet.* "
    },
    {
        "input": "[struct _ sep0] What are the ids of the students who do not own any pets ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select student.StuID from student  where  @.@ not in student.*  and  @.@ join has_pet.* "
    },
    {
        "input": "[struct _ sep0] Find the id and weight of all pets whose weight is heavier than 10 . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select pets.PetID , pets.weight from student  where  pets.weight > 10 "
    },
    {
        "input": "[struct _ sep0] Find the id and weight of all pets have a greater weight than 10 ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select pets.PetID , pets.weight from student  where  pets.weight > 10 "
    },
    {
        "input": "[struct _ sep0] Find the id and weight of all pets that are raised by female students ( with sex F ) . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select pets.PetID , pets.weight from student  where  student.Sex = \"F\" "
    },
    {
        "input": "[struct _ sep0] Find the id and weight of all pets are raised by female students ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select pets.PetID , pets.weight from student  where  student.Sex = \"F\" "
    },
    {
        "input": "[struct _ sep0] What is the id and weight of every pet whose weight is heavier than 10 . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select pets.PetID , pets.weight from student  where  pets.weight > 10 "
    },
    {
        "input": "[struct _ sep0] What is the id and weight of every pet have a greater weight than 10 ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select pets.PetID , pets.weight from student  where  pets.weight > 10 "
    },
    {
        "input": "[struct _ sep0] What is the id and weight of every pet that are raised by female students ( with sex F ) . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select pets.PetID , pets.weight from student  where  student.Sex = \"F\" "
    },
    {
        "input": "[struct _ sep0] What is the id and weight of every pet are raised by female students ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select pets.PetID , pets.weight from student  where  student.Sex = \"F\" "
    },
    {
        "input": "[struct _ sep0] Find the id of the pet owned by student that have an age greater than 20 ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select has_pet.PetID from student  where  student.Age > 20 "
    },
    {
        "input": "[struct _ sep0] What is the id of the pet owned by the student that have an age greater than 20 ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select has_pet.PetID from student  where  student.Age > 20 "
    },
    {
        "input": "[struct _ sep0] Find the first name and gender of student who have cat or dog pet . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( cat, dog ), pet _ age, weight",
        "gold_natsql": "select student.Fname , student.Sex from student  where  pets.PetType = \"cat\"  or  pets.PetType = \"dog\" "
    },
    {
        "input": "[struct _ sep0] Find the first name and gender of student who has a cat or dog as a pet ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( cat, dog ), pet _ age, weight",
        "gold_natsql": "select student.Fname , student.Sex from student  where  pets.PetType = \"cat\"  or  pets.PetType = \"dog\" "
    },
    {
        "input": "[struct _ sep0] Find the first name and gender of student who have both cat and dog pets . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( cat, dog ), pet _ age, weight",
        "gold_natsql": "select student.Fname , student.Sex from student  where  pets.PetType = \"cat\"  and  pets.PetType = \"dog\" "
    },
    {
        "input": "[struct _ sep0] Find the first name and gender of student who do not have a cat pet . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( cat ), pet _ age, weight",
        "gold_natsql": "select student.Fname , student.Sex from student  where  @.@ not in student.*  and  pets.PetType = \"cat\" "
    },
    {
        "input": "[struct _ sep0] Find the first name and gender of student who do not have a cat pet . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( cat ), pet _ age, weight",
        "gold_natsql": "select student.Fname , student.Sex from student  where  except_  @.@ is pets.*  and  pets.PetType = \"cat\" "
    },
    {
        "input": "[struct _ sep0] Find the first name and gender of student who do not own cat as pets ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( cat ), pet _ age, weight",
        "gold_natsql": "select student.Fname , student.Sex from student  where  except_  @.@ is pets.*  and  pets.PetType = \"cat\" "
    },
    {
        "input": "[struct _ sep0] Find the first name and gender of student who do not have any pet . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select student.Fname , student.Sex from student  where  @.@ not in student.*  and  @.@ join has_pet.* "
    },
    {
        "input": "[struct _ sep0] Find the first name and gender of student who do not own any pets ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select student.Fname , student.Sex from student  where  @.@ not in student.*  and  @.@ join has_pet.* "
    },
    {
        "input": "[struct _ sep0] What is the first name and gender of the all the students who have cat or dog pet . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( cat, dog ), pet _ age, weight",
        "gold_natsql": "select student.Fname , student.Sex from student  where  pets.PetType = \"cat\"  or  pets.PetType = \"dog\" "
    },
    {
        "input": "[struct _ sep0] What is the first name and gender of the all the students who has a cat or dog as a pet ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( cat, dog ), pet _ age, weight",
        "gold_natsql": "select student.Fname , student.Sex from student  where  pets.PetType = \"cat\"  or  pets.PetType = \"dog\" "
    },
    {
        "input": "[struct _ sep0] What is the first name and gender of the all the students who have both cat and dog pets . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( cat, dog ), pet _ age, weight",
        "gold_natsql": "select student.Fname , student.Sex from student  where  pets.PetType = \"cat\"  and  pets.PetType = \"dog\" "
    },
    {
        "input": "[struct _ sep0] What is the first name and gender of the all the students who do not have a cat pet . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( cat ), pet _ age, weight",
        "gold_natsql": "select student.Fname , student.Sex from student  where  @.@ not in student.*  and  pets.PetType = \"cat\" "
    },
    {
        "input": "[struct _ sep0] What is the first name and gender of the all the students who do not have a cat pet . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( cat ), pet _ age, weight",
        "gold_natsql": "select student.Fname , student.Sex from student  where  except_  @.@ is pets.*  and  pets.PetType = \"cat\" "
    },
    {
        "input": "[struct _ sep0] What is the first name and gender of the all the students who do not own cat as pets ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( cat ), pet _ age, weight",
        "gold_natsql": "select student.Fname , student.Sex from student  where  except_  @.@ is pets.*  and  pets.PetType = \"cat\" "
    },
    {
        "input": "[struct _ sep0] What is the first name and gender of the all the students who do not have any pet . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select student.Fname , student.Sex from student  where  @.@ not in student.*  and  @.@ join has_pet.* "
    },
    {
        "input": "[struct _ sep0] What is the first name and gender of the all the students who do not own any pets ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select student.Fname , student.Sex from student  where  @.@ not in student.*  and  @.@ join has_pet.* "
    },
    {
        "input": "[struct _ sep0] Find the average age of students who have cat or dog pet . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( cat, dog ), pet _ age, weight",
        "gold_natsql": "select avg ( student.Age )  from student  where  pets.PetType = \"cat\"  or  pets.PetType = \"dog\" "
    },
    {
        "input": "[struct _ sep0] Find the average age of students who has a cat or dog as a pet ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( cat, dog ), pet _ age, weight",
        "gold_natsql": "select avg ( student.Age )  from student  where  pets.PetType = \"cat\"  or  pets.PetType = \"dog\" "
    },
    {
        "input": "[struct _ sep0] Find the average age of students who have both cat and dog pets . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( cat, dog ), pet _ age, weight",
        "gold_natsql": "select avg ( student.Age )  from student  where  pets.PetType = \"cat\"  and  pets.PetType = \"dog\" "
    },
    {
        "input": "[struct _ sep0] What is the average age for all students who have cat or dog pet . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( cat, dog ), pet _ age, weight",
        "gold_natsql": "select avg ( student.Age )  from student  where  pets.PetType = \"cat\"  or  pets.PetType = \"dog\" "
    },
    {
        "input": "[struct _ sep0] What is the average age for all students who has a cat or dog as a pet ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( cat, dog ), pet _ age, weight",
        "gold_natsql": "select avg ( student.Age )  from student  where  pets.PetType = \"cat\"  or  pets.PetType = \"dog\" "
    },
    {
        "input": "[struct _ sep0] What is the average age for all students who have both cat and dog pets . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( cat, dog ), pet _ age, weight",
        "gold_natsql": "select avg ( student.Age )  from student  where  pets.PetType = \"cat\"  and  pets.PetType = \"dog\" "
    },
    {
        "input": "[struct _ sep0] Which model of the car whose weight is below the average weight . [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select car_names.Model from continents  where  @.@ < avg ( cars_data.Weight )  "
    },
    {
        "input": "[struct _ sep0] Which model of the car with a weight smaller than the average ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select car_names.Model from continents  where  @.@ < avg ( cars_data.Weight )  "
    },
    {
        "input": "[struct _ sep0] What is the model of the car whose weight is below the average weight . [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select car_names.Model from continents  where  @.@ < avg ( cars_data.Weight )  "
    },
    {
        "input": "[struct _ sep0] What is the model of the car with a weight smaller than the average ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select car_names.Model from continents  where  @.@ < avg ( cars_data.Weight )  "
    },
    {
        "input": "[struct _ sep0] Find the name of the makers are there in france ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( france ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct car_makers.Maker from continents  where  countries.CountryName = \"france\" "
    },
    {
        "input": "[struct _ sep0] What is the name of the different car makers are there in france ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( france ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct car_makers.Maker from continents  where  countries.CountryName = \"france\" "
    },
    {
        "input": "[struct _ sep0] Which distinct car models are produced in the usa ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  countries.CountryName = \"usa\" "
    },
    {
        "input": "[struct _ sep0] Which distinct car models produced in the usa ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  countries.CountryName = \"usa\" "
    },
    {
        "input": "[struct _ sep0] Which distinct car models were produced by the maker with full name American Motor Company ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  car_makers.FullName = \"American Motor Company\" "
    },
    {
        "input": "[struct _ sep0] Which distinct car models created by the car maker American Motor Company ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  car_makers.FullName = \"American Motor Company\" "
    },
    {
        "input": "[struct _ sep0] What is the name of the country with at least 3 manufacturers ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select countries.CountryName from continents  where  count ( car_makers.* )  >= 3  group by countries.CountryName "
    },
    {
        "input": "[struct _ sep0] What is the name of the country where there is not a single car maker ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select countries.CountryName from continents  where  except_  @.@ is car_makers.* "
    },
    {
        "input": "[struct _ sep0] What is the name of the country with no car makers ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select countries.CountryName from continents  where  except_  @.@ is car_makers.* "
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  where  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  where  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car with horsepower more than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  where  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car with a horsepower greater than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  where  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  where  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car produced before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  where  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car have more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  where  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car with more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  where  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car were produced in 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  where  cars_data.Year = 1980 "
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car with the largest accelerate ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  order by cars_data.Accelerate desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car with the greatest accelerate ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  order by cars_data.Accelerate desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car with the least accelerate have ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  order by cars_data.Accelerate asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car with the largest horsepower ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  order by cars_data.Horsepower desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car has over 6 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  where  cars_data.Cylinders > 6 "
    },
    {
        "input": "[struct _ sep0] How many car makers that produced some cars in the year of 1970 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( car_makers.* )  from continents  where  cars_data.Year = \"1970\" "
    },
    {
        "input": "[struct _ sep0] How many car makers who produced a car in 1970 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( car_makers.* )  from continents  where  cars_data.Year = \"1970\" "
    },
    {
        "input": "[struct _ sep0] How many car models are the produced after 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  cars_data.Year > 1980 "
    },
    {
        "input": "[struct _ sep0] How many car models were produced by the maker with full name American Motor Company ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  car_makers.FullName = \"American Motor Company\" "
    },
    {
        "input": "[struct _ sep0] How many car models created by the car maker American Motor Company ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  car_makers.FullName = \"American Motor Company\" "
    },
    {
        "input": "[struct _ sep0] What is the count of the car models are the produced after 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  cars_data.Year > 1980 "
    },
    {
        "input": "[struct _ sep0] What is the count of the car models were produced by the maker with full name American Motor Company ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  car_makers.FullName = \"American Motor Company\" "
    },
    {
        "input": "[struct _ sep0] What is the count of the car models created by the car maker American Motor Company ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  car_makers.FullName = \"American Motor Company\" "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon ( mpg ) of the cars make amc hornet sportabout (sw) ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  car_names.Make = \"amc hornet sportabout (sw)\" "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon ( mpg ) of the cars on 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon ( mpg ) of the cars in 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon ( mpg ) of the cars with horsepower more than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon ( mpg ) of the cars with a horsepower greater than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon ( mpg ) of the cars before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon ( mpg ) of the cars produced before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon ( mpg ) of the cars have more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon ( mpg ) of the cars with more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon ( mpg ) of the cars were produced in 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Year = 1980 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon ( mpg ) of the cars has over 6 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Cylinders > 6 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon of all the cars make amc hornet sportabout (sw) ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  car_names.Make = \"amc hornet sportabout (sw)\" "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon of all the cars on 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon of all the cars in 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon of all the cars with horsepower more than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon of all the cars with a horsepower greater than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon of all the cars before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon of all the cars produced before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon of all the cars have more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon of all the cars with more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon of all the cars were produced in 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Year = 1980 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon of all the cars has over 6 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Cylinders > 6 "
    },
    {
        "input": "[struct _ sep0] What is the smallest weight of the car produced with 8 cylinders with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Weight from continents  where  cars_data.Cylinders = 8  and  cars_data.Cylinders = 4  order by cars_data.Weight asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the smallest weight of the car produced with 8 cylinders with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Weight from continents  where  cars_data.Cylinders = 8  and  cars_data.Cylinders = 4  order by cars_data.Weight asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the smallest weight of the car produced with 8 cylinders with horsepower more than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Weight from continents  where  cars_data.Cylinders = 8  and  cars_data.Horsepower > 150  order by cars_data.Weight asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the smallest weight of the car produced with 8 cylinders with a horsepower greater than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Weight from continents  where  cars_data.Cylinders = 8  and  cars_data.Horsepower > 150  order by cars_data.Weight asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the smallest weight of the car produced with 8 cylinders produced before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Weight from continents  where  cars_data.Cylinders = 8  and  cars_data.Year < 1980  order by cars_data.Weight asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the smallest weight of the car produced with 8 cylinders have more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Weight from continents  where  cars_data.Cylinders = 8  and  cars_data.Cylinders > 4  order by cars_data.Weight asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the smallest weight of the car produced with 8 cylinders with more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Weight from continents  where  cars_data.Cylinders = 8  and  cars_data.Cylinders > 4  order by cars_data.Weight asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the smallest weight of the car produced with 8 cylinders were produced in 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Weight from continents  where  cars_data.Cylinders = 8  and  cars_data.Year = 1980  order by cars_data.Weight asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the smallest weight of the car produced with 8 cylinders weighing no less than 3000 and no more than 4000 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Weight from continents  where  cars_data.Cylinders = 8  and  cars_data.Weight > 3000  and  cars_data.Weight < 4000  order by cars_data.Weight asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the smallest weight of the car produced with 8 cylinders with the largest accelerate ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Weight from continents  where  cars_data.Cylinders = 8  order by cars_data.Accelerate desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the smallest weight of the car produced with 8 cylinders with the greatest accelerate ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Weight from continents  where  cars_data.Cylinders = 8  order by cars_data.Accelerate desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the smallest weight of the car produced with 8 cylinders does the version with least accelerate have ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Weight from continents  where  cars_data.Cylinders = 8  order by cars_data.Accelerate asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the smallest weight of the car produced with 8 cylinders with the largest horsepower ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Weight from continents  where  cars_data.Cylinders = 8  order by cars_data.Horsepower desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the smallest weight of the car produced with 8 cylinders with the most horsepower ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Weight from continents  where  cars_data.Cylinders = 8  order by cars_data.Horsepower desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the smallest weight of the car produced with 8 cylinders has over 6 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Weight from continents  where  cars_data.Cylinders = 8  and  cars_data.Cylinders > 6  order by cars_data.Weight asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the smallest weight of the car produced with 8 cylinders or produced before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Weight from continents  where  cars_data.Cylinders = 8  or  cars_data.Year < 1980  order by cars_data.Weight asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the minimum weight of the car with 8 cylinders produced with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Weight from continents  where  cars_data.Cylinders = 8  and  cars_data.Cylinders = 4  order by cars_data.Weight asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the minimum weight of the car with 8 cylinders produced with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Weight from continents  where  cars_data.Cylinders = 8  and  cars_data.Cylinders = 4  order by cars_data.Weight asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the minimum weight of the car with 8 cylinders produced with horsepower more than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Weight from continents  where  cars_data.Cylinders = 8  and  cars_data.Horsepower > 150  order by cars_data.Weight asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the minimum weight of the car with 8 cylinders produced with a horsepower greater than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Weight from continents  where  cars_data.Cylinders = 8  and  cars_data.Horsepower > 150  order by cars_data.Weight asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the minimum weight of the car with 8 cylinders produced before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Weight from continents  where  cars_data.Cylinders = 8  and  cars_data.Year < 1980  order by cars_data.Weight asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the minimum weight of the car with 8 cylinders produced with more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Weight from continents  where  cars_data.Cylinders = 8  and  cars_data.Cylinders > 4  order by cars_data.Weight asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the minimum weight of the car with 8 cylinders produced weighing no less than 3000 and no more than 4000 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Weight from continents  where  cars_data.Cylinders = 8  and  cars_data.Weight > 3000  and  cars_data.Weight < 4000  order by cars_data.Weight asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the minimum weight of the car with 8 cylinders produced with the largest accelerate ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Weight from continents  where  cars_data.Cylinders = 8  order by cars_data.Accelerate desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the minimum weight of the car with 8 cylinders produced with the greatest accelerate ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Weight from continents  where  cars_data.Cylinders = 8  order by cars_data.Accelerate desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the minimum weight of the car with 8 cylinders produced with the largest horsepower ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Weight from continents  where  cars_data.Cylinders = 8  order by cars_data.Horsepower desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the minimum weight of the car with 8 cylinders produced with the most horsepower ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Weight from continents  where  cars_data.Cylinders = 8  order by cars_data.Horsepower desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names and ids of all countries has more than 2 car makers ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select countries.CountryName , countries.CountryId from continents  where  count ( car_makers.* )  > 2  group by countries.CountryId "
    },
    {
        "input": "[struct _ sep0] What are the names and ids of all countries with more than 2 car makers ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select countries.CountryName , countries.CountryId from continents  where  count ( car_makers.* )  > 2  group by countries.CountryId "
    },
    {
        "input": "[struct _ sep0] What are the names and ids of all countries where there is not a single car maker ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select countries.CountryName , countries.CountryId from continents  where  except_  @.@ is car_makers.* "
    },
    {
        "input": "[struct _ sep0] What are the names and ids of all countries with no car makers ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select countries.CountryName , countries.CountryId from continents  where  except_  @.@ is car_makers.* "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars make amc hornet sportabout (sw) ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  car_names.Make = \"amc hornet sportabout (sw)\" "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars on 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars in 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars produced before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars have more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars with more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars were produced in 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1980 "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars has over 6 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 6 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars make amc hornet sportabout (sw) ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  car_names.Make = \"amc hornet sportabout (sw)\" "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars on 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars in 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars produced before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars have more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars were produced in 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1980 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars has over 6 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 6 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower of the cars make amc hornet sportabout (sw) ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  car_names.Make = \"amc hornet sportabout (sw)\" "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower of the cars with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower of the cars with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower of the cars on 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower of the cars in 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower of the cars with horsepower more than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower of the cars with a horsepower greater than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower of the cars have more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower of the cars with more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower of the cars were produced in 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year = 1980 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower of the cars has over 6 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Cylinders > 6 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower for all cars make amc hornet sportabout (sw) ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  car_names.Make = \"amc hornet sportabout (sw)\" "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower for all cars with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower for all cars with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower for all cars on 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower for all cars in 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower for all cars with horsepower more than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower for all cars with a horsepower greater than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower for all cars have more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower for all cars with more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower for all cars were produced in 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year = 1980 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower for all cars has over 6 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Cylinders > 6 "
    },
    {
        "input": "[struct _ sep0] Which model with a weight smaller than the average ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select car_names.Model from continents  where  @.@ < avg ( cars_data.Weight )  "
    },
    {
        "input": "[struct _ sep0] What model with a weight smaller than the average ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select car_names.Model from continents  where  @.@ < avg ( cars_data.Weight )  "
    },
    {
        "input": "[struct _ sep0] How many cars make amc hornet sportabout (sw) ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  car_names.Make = \"amc hornet sportabout (sw)\" "
    },
    {
        "input": "[struct _ sep0] How many cars with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] How many cars with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] How many cars on 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] How many cars in 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] How many cars with horsepower more than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] How many cars with a horsepower greater than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] How many cars before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] How many cars produced before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] How many cars were produced in 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1980 "
    },
    {
        "input": "[struct _ sep0] How many cars has over 6 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 6 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars make amc hornet sportabout (sw) ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  car_names.Make = \"amc hornet sportabout (sw)\" "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars on 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars in 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with horsepower more than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with a horsepower greater than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars produced before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars were produced in 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1980 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars has over 6 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 6 "
    },
    {
        "input": "[struct _ sep0] how many cars make amc hornet sportabout (sw) ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  car_names.Make = \"amc hornet sportabout (sw)\" "
    },
    {
        "input": "[struct _ sep0] how many cars with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] how many cars with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] how many cars on 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] how many cars in 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] how many cars with horsepower more than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] how many cars with a horsepower greater than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] how many cars before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] how many cars produced before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] how many cars have more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] how many cars with more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] how many cars has over 6 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 6 "
    },
    {
        "input": "[struct _ sep0] How many car models are the produced after 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  cars_data.Year > 1980 "
    },
    {
        "input": "[struct _ sep0] How many car models are produced in the usa ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  countries.CountryName = \"usa\" "
    },
    {
        "input": "[struct _ sep0] How many car models produced in the usa ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  countries.CountryName = \"usa\" "
    },
    {
        "input": "[struct _ sep0] What is the number of car models are the produced after 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  cars_data.Year > 1980 "
    },
    {
        "input": "[struct _ sep0] What is the number of car models are produced in the usa ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  countries.CountryName = \"usa\" "
    },
    {
        "input": "[struct _ sep0] What is the number of car models produced in the usa ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  countries.CountryName = \"usa\" "
    },
    {
        "input": "[struct _ sep0] What are the names and ids of all makers that produced some cars in the year of 1970 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select car_makers.FullName , car_makers.Id from continents  where  cars_data.Year = \"1970\" "
    },
    {
        "input": "[struct _ sep0] What are the names and ids of all makers who produced a car in 1970 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select car_makers.FullName , car_makers.Id from continents  where  cars_data.Year = \"1970\" "
    },
    {
        "input": "[struct _ sep0] What are the names and ids of all makers are there in france ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( france ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select car_makers.FullName , car_makers.Id from continents  where  countries.CountryName = \"france\" "
    },
    {
        "input": "[struct _ sep0] In which years cars were produced with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct cars_data.Year from continents  where  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] In which years cars were produced with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct cars_data.Year from continents  where  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] In which years cars were produced on 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct cars_data.Year from continents  where  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] In which years cars were produced in 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct cars_data.Year from continents  where  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] In which years cars were produced with horsepower more than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct cars_data.Year from continents  where  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] In which years cars were produced with a horsepower greater than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct cars_data.Year from continents  where  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] In which years cars were produced with more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct cars_data.Year from continents  where  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] In which years cars were produced with the largest accelerate ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct cars_data.Year from continents  order by cars_data.Accelerate desc limit 1"
    },
    {
        "input": "[struct _ sep0] In which years cars were produced with the greatest accelerate ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct cars_data.Year from continents  order by cars_data.Accelerate desc limit 1"
    },
    {
        "input": "[struct _ sep0] In which years cars were produced with the largest horsepower ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct cars_data.Year from continents  order by cars_data.Horsepower desc limit 1"
    },
    {
        "input": "[struct _ sep0] In which years cars were produced with the most horsepower ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct cars_data.Year from continents  order by cars_data.Horsepower desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the different years in which there were cars produced that weighed less than 4000 and with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct cars_data.Year from continents  where  cars_data.Weight < 4000  and  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] What are the different years in which there were cars produced that weighed less than 4000 and with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct cars_data.Year from continents  where  cars_data.Weight < 4000  and  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] What are the different years in which there were cars produced that weighed less than 4000 and on 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct cars_data.Year from continents  where  cars_data.Weight < 4000  and  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] What are the different years in which there were cars produced that weighed less than 4000 and in 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct cars_data.Year from continents  where  cars_data.Weight < 4000  and  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] What are the different years in which there were cars produced that weighed less than 4000 and with horsepower more than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct cars_data.Year from continents  where  cars_data.Weight < 4000  and  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What are the different years in which there were cars produced that weighed less than 4000 and with a horsepower greater than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct cars_data.Year from continents  where  cars_data.Weight < 4000  and  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What are the different years in which there were cars produced that weighed less than 4000 and with more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct cars_data.Year from continents  where  cars_data.Weight < 4000  and  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] What are the different years in which there were cars produced that weighed less than 4000 and with the largest accelerate ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct cars_data.Year from continents  where  cars_data.Weight < 4000  order by cars_data.Accelerate desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the different years in which there were cars produced that weighed less than 4000 and with the greatest accelerate ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct cars_data.Year from continents  where  cars_data.Weight < 4000  order by cars_data.Accelerate desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the different years in which there were cars produced that weighed less than 4000 and with the largest horsepower ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct cars_data.Year from continents  where  cars_data.Weight < 4000  order by cars_data.Horsepower desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the different years in which there were cars produced that weighed less than 4000 and with the most horsepower ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct cars_data.Year from continents  where  cars_data.Weight < 4000  order by cars_data.Horsepower desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car make amc hornet sportabout (sw) ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  car_names.Make = \"amc hornet sportabout (sw)\" "
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car on 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car in 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car with horsepower more than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car with a horsepower greater than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car produced before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car have more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car with more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car were produced in 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Year = 1980 "
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car with the least accelerate have ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  order by cars_data.Accelerate asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car with the largest horsepower ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  order by cars_data.Horsepower desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car with the most horsepower ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  order by cars_data.Horsepower desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car has over 6 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Cylinders > 6 "
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car make amc hornet sportabout (sw) ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  car_names.Make = \"amc hornet sportabout (sw)\" "
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car on 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car in 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car with horsepower more than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car with a horsepower greater than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car produced before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car have more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car with more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car were produced in 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Year = 1980 "
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car with the least accelerate have ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  order by cars_data.Accelerate asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car with the largest horsepower ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  order by cars_data.Horsepower desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car with the most horsepower ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  order by cars_data.Horsepower desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car has over 6 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Cylinders > 6 "
    },
    {
        "input": "[struct _ sep0] For model volvo , how many cylinders does the car make amc hornet sportabout (sw) ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( volvo, amc ), fullname ( Volvo ), country | model _ list : modelid, maker, model ( volvo, amc ) | car _ names : makeid, model ( volvo, amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Cylinders from continents  where  car_names.Model = \"volvo\"  and  car_names.Make = \"amc hornet sportabout (sw)\" "
    },
    {
        "input": "[struct _ sep0] For model volvo , how many cylinders does the car with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( volvo ), fullname ( Volvo ), country | model _ list : modelid, maker, model ( volvo ) | car _ names : makeid, model ( volvo ), make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Cylinders from continents  where  car_names.Model = \"volvo\"  and  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] For model volvo , how many cylinders does the car with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( volvo ), fullname ( Volvo ), country | model _ list : modelid, maker, model ( volvo ) | car _ names : makeid, model ( volvo ), make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Cylinders from continents  where  car_names.Model = \"volvo\"  and  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] For model volvo , how many cylinders does the car with horsepower more than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( volvo ), fullname ( Volvo ), country | model _ list : modelid, maker, model ( volvo ) | car _ names : makeid, model ( volvo ), make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Cylinders from continents  where  car_names.Model = \"volvo\"  and  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] For model volvo , how many cylinders does the car with a horsepower greater than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( volvo ), fullname ( Volvo ), country | model _ list : modelid, maker, model ( volvo ) | car _ names : makeid, model ( volvo ), make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Cylinders from continents  where  car_names.Model = \"volvo\"  and  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] For model volvo , how many cylinders does the car before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( volvo ), fullname ( Volvo ), country | model _ list : modelid, maker, model ( volvo ) | car _ names : makeid, model ( volvo ), make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Cylinders from continents  where  car_names.Model = \"volvo\"  and  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] For model volvo , how many cylinders does the car produced before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( volvo ), fullname ( Volvo ), country | model _ list : modelid, maker, model ( volvo ) | car _ names : makeid, model ( volvo ), make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Cylinders from continents  where  car_names.Model = \"volvo\"  and  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] For model volvo , how many cylinders does the car have more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( volvo ), fullname ( Volvo ), country | model _ list : modelid, maker, model ( volvo ) | car _ names : makeid, model ( volvo ), make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Cylinders from continents  where  car_names.Model = \"volvo\"  and  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] For model volvo , how many cylinders does the car with more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( volvo ), fullname ( Volvo ), country | model _ list : modelid, maker, model ( volvo ) | car _ names : makeid, model ( volvo ), make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Cylinders from continents  where  car_names.Model = \"volvo\"  and  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] For model volvo , how many cylinders does the car were produced in 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( volvo ), fullname ( Volvo ), country | model _ list : modelid, maker, model ( volvo ) | car _ names : makeid, model ( volvo ), make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Cylinders from continents  where  car_names.Model = \"volvo\"  and  cars_data.Year = 1980 "
    },
    {
        "input": "[struct _ sep0] For model volvo , how many cylinders does the car with the largest accelerate ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( volvo ), fullname ( Volvo ), country | model _ list : modelid, maker, model ( volvo ) | car _ names : makeid, model ( volvo ), make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Cylinders from continents  where  car_names.Model = \"volvo\"  order by cars_data.Accelerate desc limit 1"
    },
    {
        "input": "[struct _ sep0] For model volvo , how many cylinders does the car with the greatest accelerate ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( volvo ), fullname ( Volvo ), country | model _ list : modelid, maker, model ( volvo ) | car _ names : makeid, model ( volvo ), make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Cylinders from continents  where  car_names.Model = \"volvo\"  order by cars_data.Accelerate desc limit 1"
    },
    {
        "input": "[struct _ sep0] For model volvo , how many cylinders does the car with the largest horsepower ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( volvo ), fullname ( Volvo ), country | model _ list : modelid, maker, model ( volvo ) | car _ names : makeid, model ( volvo ), make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Cylinders from continents  where  car_names.Model = \"volvo\"  order by cars_data.Horsepower desc limit 1"
    },
    {
        "input": "[struct _ sep0] For model volvo , how many cylinders does the car has over 6 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( volvo ), fullname ( Volvo ), country | model _ list : modelid, maker, model ( volvo ) | car _ names : makeid, model ( volvo ), make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Cylinders from continents  where  car_names.Model = \"volvo\"  and  cars_data.Cylinders > 6 "
    },
    {
        "input": "[struct _ sep0] For a volvo model , how many cylinders on 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( volvo ), fullname ( Volvo ), country | model _ list : modelid, maker, model ( volvo ) | car _ names : makeid, model ( volvo ), make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Cylinders from continents  where  car_names.Model = \"volvo\"  and  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] For a volvo model , how many cylinders or produced before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( volvo ), fullname ( Volvo ), country | model _ list : modelid, maker, model ( volvo ) | car _ names : makeid, model ( volvo ), make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Cylinders from continents  where  car_names.Model = \"volvo\"  or  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] How many cars have a larger accelerate than the car with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  @.@ > cars_data.Accelerate  and  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] How many cars have a larger accelerate than the car with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  @.@ > cars_data.Accelerate  and  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] How many cars have a larger accelerate than the car with horsepower more than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  @.@ > cars_data.Accelerate  and  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] How many cars have a larger accelerate than the car with a horsepower greater than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  @.@ > cars_data.Accelerate  and  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] How many cars have a larger accelerate than the car with more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  @.@ > cars_data.Accelerate  and  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with a greater accelerate than the one with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  @.@ > cars_data.Accelerate  and  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with a greater accelerate than the one with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  @.@ > cars_data.Accelerate  and  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with a greater accelerate than the one with horsepower more than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  @.@ > cars_data.Accelerate  and  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with a greater accelerate than the one with a horsepower greater than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  @.@ > cars_data.Accelerate  and  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with a greater accelerate than the one with more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  @.@ > cars_data.Accelerate  and  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] How many countries with at least one car maker ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( countries.* )  from continents  where  count ( car_makers.* )  >= 1  group by countries.CountryId "
    },
    {
        "input": "[struct _ sep0] What is the number of countries with at least one car maker ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( countries.* )  from continents  where  count ( car_makers.* )  >= 1  group by countries.CountryId "
    },
    {
        "input": "[struct _ sep0] How many cars make amc hornet sportabout (sw) ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  car_names.Make = \"amc hornet sportabout (sw)\" "
    },
    {
        "input": "[struct _ sep0] How many cars with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] How many cars with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] How many cars on 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] How many cars in 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] How many cars with horsepower more than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] How many cars with a horsepower greater than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] How many cars before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] How many cars produced before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] How many cars have more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] How many cars with more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] How many cars were produced in 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1980 "
    },
    {
        "input": "[struct _ sep0] What is the maximum miles per gallon of the car with 8 cylinders with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.MPG from continents  where  cars_data.Cylinders = 8  and  cars_data.Cylinders = 4  order by cars_data.MPG desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the maximum miles per gallon of the car with 8 cylinders with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.MPG from continents  where  cars_data.Cylinders = 8  and  cars_data.Cylinders = 4  order by cars_data.MPG desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the maximum miles per gallon of the car with 8 cylinders on 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.MPG from continents  where  cars_data.Cylinders = 8  and  cars_data.Year = 1974  order by cars_data.MPG desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the maximum miles per gallon of the car with 8 cylinders in 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.MPG from continents  where  cars_data.Cylinders = 8  and  cars_data.Year = 1974  order by cars_data.MPG desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the maximum miles per gallon of the car with 8 cylinders with horsepower more than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.MPG from continents  where  cars_data.Cylinders = 8  and  cars_data.Horsepower > 150  order by cars_data.MPG desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the maximum miles per gallon of the car with 8 cylinders with a horsepower greater than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.MPG from continents  where  cars_data.Cylinders = 8  and  cars_data.Horsepower > 150  order by cars_data.MPG desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the maximum miles per gallon of the car with 8 cylinders with more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.MPG from continents  where  cars_data.Cylinders = 8  and  cars_data.Cylinders > 4  order by cars_data.MPG desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the maximum mpg of the cars that had 8 cylinders or with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.MPG from continents  where  cars_data.Cylinders = 8  or  cars_data.Cylinders = 4  order by cars_data.MPG desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the maximum mpg of the cars that had 8 cylinders or with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.MPG from continents  where  cars_data.Cylinders = 8  or  cars_data.Cylinders = 4  order by cars_data.MPG desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the maximum mpg of the cars that had 8 cylinders or on 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.MPG from continents  where  cars_data.Cylinders = 8  or  cars_data.Year = 1974  order by cars_data.MPG desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the maximum mpg of the cars that had 8 cylinders or in 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.MPG from continents  where  cars_data.Cylinders = 8  or  cars_data.Year = 1974  order by cars_data.MPG desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the maximum mpg of the cars that had 8 cylinders or with horsepower more than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.MPG from continents  where  cars_data.Cylinders = 8  or  cars_data.Horsepower > 150  order by cars_data.MPG desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the maximum mpg of the cars that had 8 cylinders or with a horsepower greater than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.MPG from continents  where  cars_data.Cylinders = 8  or  cars_data.Horsepower > 150  order by cars_data.MPG desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the maximum mpg of the cars that had 8 cylinders or with more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.MPG from continents  where  cars_data.Cylinders = 8  or  cars_data.Cylinders > 4  order by cars_data.MPG desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the name of the countries with at least 3 manufacturers ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select countries.CountryName from continents  where  count ( car_makers.* )  >= 3  group by countries.CountryName "
    },
    {
        "input": "[struct _ sep0] What are the names of the countries with at least 3 manufacturers ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select countries.CountryName from continents  where  count ( car_makers.* )  >= 3  group by countries.CountryName "
    },
    {
        "input": "[struct _ sep0] Which country in ' USA ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Country from airlines  where  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Which country in the USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Country from airlines  where  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Which country with abbreviation ' UAL ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Country from airlines  where  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] Which country in the USA . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Country from airlines  where  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Which abbreviation in ' USA ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Abbreviation from airlines  where  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Which abbreviation in the USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Abbreviation from airlines  where  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Which abbreviation with abbreviation ' UAL ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Abbreviation from airlines  where  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] Which abbreviation in the USA . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Abbreviation from airlines  where  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] List all airline names and their abbreviations does Airline ' JetBlue Airways ' belong to ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline , airlines.Abbreviation from airlines  where  airlines.Airline = \"JetBlue Airways\" "
    },
    {
        "input": "[struct _ sep0] List all airline names and their abbreviations corresponds to JetBlue Airways ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline , airlines.Abbreviation from airlines  where  airlines.Airline = \"JetBlue Airways\" "
    },
    {
        "input": "[struct _ sep0] List all airline names and their abbreviations has abbreviation ' UAL ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline , airlines.Abbreviation from airlines  where  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] List all airline names and their abbreviations with abbreviation ' UAL ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline , airlines.Abbreviation from airlines  where  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] What are the airline names and abbreviations for airlines has abbreviation ' UAL ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline , airlines.Abbreviation from airlines  where  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] What are the airline names and abbreviations for airlines with abbreviation ' UAL ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline , airlines.Abbreviation from airlines  where  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] What are the airline names and abbreviations for airlines that have flights from both airports ' APG ' and ' CVO ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG, CVO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG, CVO ), destairport ( APG, CVO )",
        "gold_natsql": "select airlines.Airline , airlines.Abbreviation from airlines  where  flights.SourceAirport = \"APG\"  and  flights.SourceAirport = \"CVO\" "
    },
    {
        "input": "[struct _ sep0] List the airport code and name is the Alton airport at ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city ( Alton ), airportcode, airportname ( Alton ), country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airports.AirportCode , airports.AirportName from airlines  where  airports.AirportName = \"Alton\" "
    },
    {
        "input": "[struct _ sep0] List the airport code and name with code ' AKO ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AKO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AKO ), destairport ( AKO )",
        "gold_natsql": "select airports.AirportCode , airports.AirportName from airlines  where  airports.AirportCode = \"AKO\" "
    },
    {
        "input": "[struct _ sep0] List the airport code and name at City ' Aberdeen ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city ( Aberdeen ), airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airports.AirportCode , airports.AirportName from airlines  where  airports.City = \"Aberdeen\" "
    },
    {
        "input": "[struct _ sep0] List the airport code and name in Aberdeen ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city ( Aberdeen ), airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airports.AirportCode , airports.AirportName from airlines  where  airports.City = \"Aberdeen\" "
    },
    {
        "input": "[struct _ sep0] Give the airport code and airport name corresonding is the Alton airport at ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city ( Alton ), airportcode, airportname ( Alton ), country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airports.AirportCode , airports.AirportName from airlines  where  airports.AirportName = \"Alton\" "
    },
    {
        "input": "[struct _ sep0] Give the airport code and airport name corresonding with code ' AKO ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AKO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AKO ), destairport ( AKO )",
        "gold_natsql": "select airports.AirportCode , airports.AirportName from airlines  where  airports.AirportCode = \"AKO\" "
    },
    {
        "input": "[struct _ sep0] Give the airport code and airport name corresonding in Aberdeen ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city ( Aberdeen ), airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airports.AirportCode , airports.AirportName from airlines  where  airports.City = \"Aberdeen\" "
    },
    {
        "input": "[struct _ sep0] Which airline in ' USA ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Which airline in the USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Which airline are from USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Which airline in the USA . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Which airline that have flights from both airports ' APG ' and ' CVO ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG, CVO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG, CVO ), destairport ( APG, CVO )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.SourceAirport = \"APG\"  and  flights.SourceAirport = \"CVO\" "
    },
    {
        "input": "[struct _ sep0] Which airline that have at least 10 flights . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  > 10  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airline have at least 10 flights ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  > 10  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airline that have fewer than 200 flights . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  < 200  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airline have less than 200 flights ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  < 200  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Give the airline does Airline ' JetBlue Airways ' belong to ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Airline = \"JetBlue Airways\" "
    },
    {
        "input": "[struct _ sep0] Give the airline in ' USA ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Give the airline in the USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Give the airline are from USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Give the airline in the USA . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Give the airline that have flights from both airports ' APG ' and ' CVO ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG, CVO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG, CVO ), destairport ( APG, CVO )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.SourceAirport = \"APG\"  and  flights.SourceAirport = \"CVO\" "
    },
    {
        "input": "[struct _ sep0] Give the airline that have at least 10 flights . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  > 10  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Give the airline have at least 10 flights ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  > 10  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Give the airline that have fewer than 200 flights . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  < 200  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Give the airline have less than 200 flights ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  < 200  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] How many airlines has abbreviation ' UAL ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( airlines.* )  from airlines  where  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] How many airlines with abbreviation ' UAL ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( airlines.* )  from airlines  where  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] How many airlines that have flights from both airports ' APG ' and ' CVO ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG, CVO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG, CVO ), destairport ( APG, CVO )",
        "gold_natsql": "select count ( airlines.* )  from airlines  where  flights.SourceAirport = \"APG\"  and  flights.SourceAirport = \"CVO\" "
    },
    {
        "input": "[struct _ sep0] Return the number of airlines does Airline ' JetBlue Airways ' belong to ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( airlines.* )  from airlines  where  airlines.Airline = \"JetBlue Airways\" "
    },
    {
        "input": "[struct _ sep0] Return the number of airlines has abbreviation ' UAL ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( airlines.* )  from airlines  where  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] Return the number of airlines with abbreviation ' UAL ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( airlines.* )  from airlines  where  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] Return the number of airlines that have flights from both airports ' APG ' and ' CVO ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG, CVO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG, CVO ), destairport ( APG, CVO )",
        "gold_natsql": "select count ( airlines.* )  from airlines  where  flights.SourceAirport = \"APG\"  and  flights.SourceAirport = \"CVO\" "
    },
    {
        "input": "[struct _ sep0] Which city and country in the city of Anthony . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city ( Anthony ), airportcode, airportname ( Anthony ), country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airports.City , airports.Country from airlines  where  airports.City = \"Anthony\" "
    },
    {
        "input": "[struct _ sep0] Which city and country with code ' AKO ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AKO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AKO ), destairport ( AKO )",
        "gold_natsql": "select airports.City , airports.Country from airlines  where  airports.AirportCode = \"AKO\" "
    },
    {
        "input": "[struct _ sep0] Which city and country in Aberdeen ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city ( Aberdeen ), airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airports.City , airports.Country from airlines  where  airports.City = \"Aberdeen\" "
    },
    {
        "input": "[struct _ sep0] Return the name of the airport in the city of Anthony . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city ( Anthony ), airportcode, airportname ( Anthony ), country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airports.AirportName from airlines  where  airports.City = \"Anthony\" "
    },
    {
        "input": "[struct _ sep0] Return the name of the airport is the Alton airport at ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city ( Alton ), airportcode, airportname ( Alton ), country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airports.AirportName from airlines  where  airports.AirportName = \"Alton\" "
    },
    {
        "input": "[struct _ sep0] Return the name of the airport in Aberdeen ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city ( Aberdeen ), airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airports.AirportName from airlines  where  airports.City = \"Aberdeen\" "
    },
    {
        "input": "[struct _ sep0] Return the name of the airport which do not have any flight in and out . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airports.AirportName from airlines  where  @.@ not in flights.SourceAirport  and  @.@ not in flights.DestAirport "
    },
    {
        "input": "[struct _ sep0] Return the name of the airport do not have departing or arriving flights ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airports.AirportName from airlines  where  @.@ not in flights.SourceAirport  and  @.@ not in flights.DestAirport "
    },
    {
        "input": "[struct _ sep0] What are airport names in the city of Anthony . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city ( Anthony ), airportcode, airportname ( Anthony ), country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airports.AirportName from airlines  where  airports.City = \"Anthony\" "
    },
    {
        "input": "[struct _ sep0] What are airport names with code ' AKO ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AKO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AKO ), destairport ( AKO )",
        "gold_natsql": "select airports.AirportName from airlines  where  airports.AirportCode = \"AKO\" "
    },
    {
        "input": "[struct _ sep0] What are the names of airports in the city of Anthony . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city ( Anthony ), airportcode, airportname ( Anthony ), country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airports.AirportName from airlines  where  airports.City = \"Anthony\" "
    },
    {
        "input": "[struct _ sep0] What are the names of airports with code ' AKO ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AKO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AKO ), destairport ( AKO )",
        "gold_natsql": "select airports.AirportName from airlines  where  airports.AirportCode = \"AKO\" "
    },
    {
        "input": "[struct _ sep0] What are the names of airports which do not have any flight in and out . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airports.AirportName from airlines  where  @.@ not in flights.SourceAirport  and  @.@ not in flights.DestAirport "
    },
    {
        "input": "[struct _ sep0] What are the names of airports do not have departing or arriving flights ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airports.AirportName from airlines  where  @.@ not in flights.SourceAirport  and  @.@ not in flights.DestAirport "
    },
    {
        "input": "[struct _ sep0] Count the number of flights have destination ATO ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ATO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.DestAirport = \"ATO\" "
    },
    {
        "input": "[struct _ sep0] Count the number of flights into ATO . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ATO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.DestAirport = \"ATO\" "
    },
    {
        "input": "[struct _ sep0] Count the number of flights does airline ' JetBlue Airways ' have ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( flights.* )  from airlines  where  airlines.Airline = \"JetBlue Airways\" "
    },
    {
        "input": "[struct _ sep0] Count the number of flights arriving at Airport ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.DestAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Count the number of flights landing at APG . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.DestAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] How many flights departing from ' APG ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] How many flights does airline ' JetBlue Airways ' have ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( flights.* )  from airlines  where  airlines.Airline = \"JetBlue Airways\" "
    },
    {
        "input": "[struct _ sep0] How many flights departing from Airport ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] How many flights leaving from APG . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] How many flights arriving at Airport ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.DestAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] How many flights landing at APG . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.DestAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Count the number of flights departing from ' APG ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Count the number of flights does airline ' JetBlue Airways ' have ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( flights.* )  from airlines  where  airlines.Airline = \"JetBlue Airways\" "
    },
    {
        "input": "[struct _ sep0] Count the number of flights departing from Airport ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Count the number of flights leaving from APG . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Count the number of flights arriving at Airport ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.DestAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Count the number of flights landing at APG . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.DestAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] How many flights departing from ' APG ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] How many flights have destination ATO ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ATO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.DestAirport = \"ATO\" "
    },
    {
        "input": "[struct _ sep0] How many flights into ATO . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ATO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.DestAirport = \"ATO\" "
    },
    {
        "input": "[struct _ sep0] How many flights departing from Airport ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] How many flights leaving from APG . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] How many flights arriving at Airport ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.DestAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] How many flights landing at APG . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.DestAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] How many ' United Airlines ' flights leaving from AHD Airport . [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( United Airlines ), abbreviation, country | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select count ( airlines.* )  from airlines  where  airlines.Airline = \"United Airlines\"  and  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] How many ' United Airlines ' flights with source airport AHD ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( United Airlines ), abbreviation, country | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select count ( airlines.* )  from airlines  where  airlines.Airline = \"United Airlines\"  and  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] How many ' United Airlines ' flights with destination airport AHD ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( United Airlines ), abbreviation, country | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select count ( airlines.* )  from airlines  where  airlines.Airline = \"United Airlines\"  and  flights.DestAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Count the number of United Airlines flights leaving from AHD Airport . [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( United Airlines ), abbreviation, country | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select count ( airlines.* )  from airlines  where  airlines.Airline = \"United Airlines\"  and  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Count the number of United Airlines flights with source airport AHD ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( United Airlines ), abbreviation, country | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select count ( airlines.* )  from airlines  where  airlines.Airline = \"United Airlines\"  and  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Count the number of United Airlines flights with destination airport AHD ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( United Airlines ), abbreviation, country | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select count ( airlines.* )  from airlines  where  airlines.Airline = \"United Airlines\"  and  flights.DestAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Return the number of United Airlines flights go to Airport ' ASY ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( United Airlines ), abbreviation, country | airports : city, airportcode ( ASY ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( airlines.* )  from airlines  where  airlines.Airline = \"United Airlines\"  and  flights.DestAirport = \"ASY\" "
    },
    {
        "input": "[struct _ sep0] Return the number of United Airlines flights arriving in ASY Airport . [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( United Airlines ), abbreviation, country | airports : city, airportcode ( ASY ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( airlines.* )  from airlines  where  airlines.Airline = \"United Airlines\"  and  flights.DestAirport = \"ASY\" "
    },
    {
        "input": "[struct _ sep0] Return the number of United Airlines flights with destination airport AHD ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( United Airlines ), abbreviation, country | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select count ( airlines.* )  from airlines  where  airlines.Airline = \"United Airlines\"  and  flights.DestAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Which airline in the USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Which airline has abbreviation ' UAL ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] Which airline with abbreviation ' UAL ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] Which airline are from USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Which airline in the USA . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Which airline that have flights from both airports ' APG ' and ' CVO ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG, CVO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG, CVO ), destairport ( APG, CVO )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.SourceAirport = \"APG\"  and  flights.SourceAirport = \"CVO\" "
    },
    {
        "input": "[struct _ sep0] Which airline that have at least 10 flights . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  > 10  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airline have at least 10 flights ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  > 10  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airline that have fewer than 200 flights . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  < 200  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airline have less than 200 flights ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  < 200  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] What airline in the USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] What airline has abbreviation ' UAL ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] What airline with abbreviation ' UAL ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] What airline are from USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] What airline in the USA . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] What airline that have flights from both airports ' APG ' and ' CVO ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG, CVO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG, CVO ), destairport ( APG, CVO )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.SourceAirport = \"APG\"  and  flights.SourceAirport = \"CVO\" "
    },
    {
        "input": "[struct _ sep0] What airline that have at least 10 flights . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  > 10  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] What airline have at least 10 flights ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  > 10  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] What airline that have fewer than 200 flights . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  < 200  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] What airline have less than 200 flights ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  < 200  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Find the abbreviation and country of the airline in the USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Abbreviation , airlines.Country from airlines  where  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Find the abbreviation and country of the airline has abbreviation ' UAL ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Abbreviation , airlines.Country from airlines  where  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] Find the abbreviation and country of the airline with abbreviation ' UAL ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Abbreviation , airlines.Country from airlines  where  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] Find the abbreviation and country of the airline are from USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Abbreviation , airlines.Country from airlines  where  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Find the abbreviation and country of the airline in the USA . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Abbreviation , airlines.Country from airlines  where  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Find the abbreviation and country of the airline that have flights from both airports ' APG ' and ' CVO ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG, CVO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG, CVO ), destairport ( APG, CVO )",
        "gold_natsql": "select airlines.Abbreviation , airlines.Country from airlines  where  flights.SourceAirport = \"APG\"  and  flights.SourceAirport = \"CVO\" "
    },
    {
        "input": "[struct _ sep0] Find the abbreviation and country of the airline that have at least 10 flights . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Abbreviation , airlines.Country from airlines  where  count ( flights.* )  > 10  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Find the abbreviation and country of the airline have at least 10 flights ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Abbreviation , airlines.Country from airlines  where  count ( flights.* )  > 10  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Find the abbreviation and country of the airline that have fewer than 200 flights . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Abbreviation , airlines.Country from airlines  where  count ( flights.* )  < 200  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Find the abbreviation and country of the airline have less than 200 flights ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Abbreviation , airlines.Country from airlines  where  count ( flights.* )  < 200  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight go to Airport ' ASY ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ASY ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.DestAirport = \"ASY\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight arriving in ASY Airport . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ASY ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.DestAirport = \"ASY\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with destination airport AHD ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.DestAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight from both APG and CVO airports ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG, CVO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG, CVO ), destairport ( APG, CVO )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.SourceAirport = \"APG\"  and  flights.SourceAirport = \"CVO\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight go to Airport ' ASY ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ASY ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.DestAirport = \"ASY\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight arriving in ASY Airport . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ASY ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.DestAirport = \"ASY\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight leaving from AHD Airport . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with source airport AHD ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight from both APG and CVO airports ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG, CVO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG, CVO ), destairport ( APG, CVO )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.SourceAirport = \"APG\"  and  flights.SourceAirport = \"CVO\" "
    },
    {
        "input": "[struct _ sep0] Find all airlines in the USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Find all airlines has abbreviation ' UAL ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] Find all airlines with abbreviation ' UAL ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] Find all airlines are from USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Find all airlines in the USA . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Find all airlines that have at least 10 flights . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  > 10  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Find all airlines have at least 10 flights ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  > 10  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Find all airlines that have fewer than 200 flights . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  < 200  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Find all airlines have less than 200 flights ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  < 200  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airlines have departing flights go to Airport ' ASY ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ASY ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.DestAirport = \"ASY\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have departing flights arriving in ASY Airport . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ASY ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.DestAirport = \"ASY\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have departing flights leaving from AHD Airport . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have departing flights with source airport AHD ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have departing flights with destination airport AHD ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.DestAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Find all airlines in the USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Find all airlines has abbreviation ' UAL ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] Find all airlines with abbreviation ' UAL ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] Find all airlines are from USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Find all airlines in the USA . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Find all airlines that have flights from both airports ' APG ' and ' CVO ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG, CVO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG, CVO ), destairport ( APG, CVO )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.SourceAirport = \"APG\"  and  flights.SourceAirport = \"CVO\" "
    },
    {
        "input": "[struct _ sep0] Find all airlines that have fewer than 200 flights . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  < 200  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Find all airlines have less than 200 flights ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  < 200  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airlines in the USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Which airlines has abbreviation ' UAL ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] Which airlines with abbreviation ' UAL ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] Which airlines are from USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Which airlines in the USA . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Which airlines that have flights from both airports ' APG ' and ' CVO ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG, CVO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG, CVO ), destairport ( APG, CVO )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.SourceAirport = \"APG\"  and  flights.SourceAirport = \"CVO\" "
    },
    {
        "input": "[struct _ sep0] Which airlines that have fewer than 200 flights . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  < 200  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airlines have less than 200 flights ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  < 200  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Find all airlines in the USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Find all airlines has abbreviation ' UAL ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] Find all airlines with abbreviation ' UAL ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] Find all airlines are from USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Find all airlines in the USA . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Find all airlines that have flights from both airports ' APG ' and ' CVO ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG, CVO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG, CVO ), destairport ( APG, CVO )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.SourceAirport = \"APG\"  and  flights.SourceAirport = \"CVO\" "
    },
    {
        "input": "[struct _ sep0] Find all airlines that have at least 10 flights . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  > 10  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Find all airlines have at least 10 flights ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  > 10  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airlines in the USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Which airlines has abbreviation ' UAL ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] Which airlines with abbreviation ' UAL ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] Which airlines are from USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Which airlines in the USA . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Which airlines that have flights from both airports ' APG ' and ' CVO ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG, CVO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG, CVO ), destairport ( APG, CVO )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.SourceAirport = \"APG\"  and  flights.SourceAirport = \"CVO\" "
    },
    {
        "input": "[struct _ sep0] Which airlines that have at least 10 flights . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  > 10  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airlines have at least 10 flights ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  > 10  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] What are flight numbers of flights have destination ATO ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ATO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.DestAirport = \"ATO\" "
    },
    {
        "input": "[struct _ sep0] What are flight numbers of flights into ATO . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ATO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.DestAirport = \"ATO\" "
    },
    {
        "input": "[struct _ sep0] What are flight numbers of flights does airline ' JetBlue Airways ' have ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select flights.FlightNo from airlines  where  airlines.Airline = \"JetBlue Airways\" "
    },
    {
        "input": "[struct _ sep0] What are flight numbers of flights arriving at Airport ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.DestAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] What are flight numbers of flights landing at APG . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.DestAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Give the flight numbers of flights have destination ATO ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ATO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.DestAirport = \"ATO\" "
    },
    {
        "input": "[struct _ sep0] Give the flight numbers of flights into ATO . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ATO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.DestAirport = \"ATO\" "
    },
    {
        "input": "[struct _ sep0] Give the flight numbers of flights does airline ' JetBlue Airways ' have ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select flights.FlightNo from airlines  where  airlines.Airline = \"JetBlue Airways\" "
    },
    {
        "input": "[struct _ sep0] Give the flight numbers of flights arriving at Airport ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.DestAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Give the flight numbers of flights landing at APG . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.DestAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] What are flight numbers of flights departing from ' APG ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] What are flight numbers of flights have destination ATO ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ATO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.DestAirport = \"ATO\" "
    },
    {
        "input": "[struct _ sep0] What are flight numbers of flights into ATO . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ATO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.DestAirport = \"ATO\" "
    },
    {
        "input": "[struct _ sep0] What are flight numbers of flights does airline ' JetBlue Airways ' have ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select flights.FlightNo from airlines  where  airlines.Airline = \"JetBlue Airways\" "
    },
    {
        "input": "[struct _ sep0] What are flight numbers of flights departing from Airport ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] What are flight numbers of flights leaving from APG . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Give the flight numbers of flights departing from ' APG ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Give the flight numbers of flights have destination ATO ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ATO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.DestAirport = \"ATO\" "
    },
    {
        "input": "[struct _ sep0] Give the flight numbers of flights into ATO . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ATO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.DestAirport = \"ATO\" "
    },
    {
        "input": "[struct _ sep0] Give the flight numbers of flights does airline ' JetBlue Airways ' have ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select flights.FlightNo from airlines  where  airlines.Airline = \"JetBlue Airways\" "
    },
    {
        "input": "[struct _ sep0] Give the flight numbers of flights departing from Airport ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Give the flight numbers of flights leaving from APG . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Find the name of airports in the city of Anthony . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city ( Anthony ), airportcode, airportname ( Anthony ), country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airports.AirportName from airlines  where  airports.City = \"Anthony\" "
    },
    {
        "input": "[struct _ sep0] Find the name of airports is the Alton airport at ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city ( Alton ), airportcode, airportname ( Alton ), country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airports.AirportName from airlines  where  airports.AirportName = \"Alton\" "
    },
    {
        "input": "[struct _ sep0] Find the name of airports with code ' AKO ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AKO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AKO ), destairport ( AKO )",
        "gold_natsql": "select airports.AirportName from airlines  where  airports.AirportCode = \"AKO\" "
    },
    {
        "input": "[struct _ sep0] Find the name of airports in Aberdeen ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city ( Aberdeen ), airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airports.AirportName from airlines  where  airports.City = \"Aberdeen\" "
    },
    {
        "input": "[struct _ sep0] Which airports in the city of Anthony . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city ( Anthony ), airportcode, airportname ( Anthony ), country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airports.AirportName from airlines  where  airports.City = \"Anthony\" "
    },
    {
        "input": "[struct _ sep0] Which airports with code ' AKO ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AKO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AKO ), destairport ( AKO )",
        "gold_natsql": "select airports.AirportName from airlines  where  airports.AirportCode = \"AKO\" "
    },
    {
        "input": "[struct _ sep0] Which airports in Aberdeen ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city ( Aberdeen ), airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airports.AirportName from airlines  where  airports.City = \"Aberdeen\" "
    },
    {
        "input": "[struct _ sep0] List the names of employees under age 30 come from ? [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select employee.Name from employee  where  employee.Age < 30 "
    },
    {
        "input": "[struct _ sep0] List the names of employees who never won any award in the evaluation . [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select employee.Name from employee  where  @.@ not in evaluation.* "
    },
    {
        "input": "[struct _ sep0] List the names of employees who never received any evaluation ? [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select employee.Name from employee  where  @.@ not in evaluation.* "
    },
    {
        "input": "[struct _ sep0] Which cities do more than one employee and sort in ascending order of age . [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select employee.City from employee  where  count ( employee.* )  > 1  group by employee.City  order by employee.Age asc"
    },
    {
        "input": "[struct _ sep0] Which cities do more than one employee who never won any award in the evaluation . [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select employee.City from employee  where  count ( employee.* )  > 1  and  @.@ not in evaluation.*  group by employee.City "
    },
    {
        "input": "[struct _ sep0] Which cities do more than one employee who never received any evaluation ? [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select employee.City from employee  where  count ( employee.* )  > 1  and  @.@ not in evaluation.*  group by employee.City "
    },
    {
        "input": "[struct _ sep0] Find the manager name and district of the shop in descending order of number of products . [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select shop.Manager_name , shop.District from employee  order by shop.Number_products desc"
    },
    {
        "input": "[struct _ sep0] Find the manager name and district of the shop that do not hire any employee . [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select shop.Manager_name , shop.District from employee  where  @.@ not in hiring.* "
    },
    {
        "input": "[struct _ sep0] What are the manager name and district of the shop in descending order of number of products . [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select shop.Manager_name , shop.District from employee  order by shop.Number_products desc"
    },
    {
        "input": "[struct _ sep0] What are the manager name and district of the shop that do not hire any employee . [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select shop.Manager_name , shop.District from employee  where  @.@ not in hiring.* "
    },
    {
        "input": "[struct _ sep0] Return the name , location and district of all shops whose number of products is the largest . [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select shop.Name , shop.Location , shop.District from employee  order by shop.Number_products desc limit 1"
    },
    {
        "input": "[struct _ sep0] Return the name , location and district of all shops that sells the largest number of products ? [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select shop.Name , shop.Location , shop.District from employee  order by shop.Number_products desc limit 1"
    },
    {
        "input": "[struct _ sep0] Return the name , location and district of all shops that do not hire any employee . [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select shop.Name , shop.Location , shop.District from employee  where  @.@ not in hiring.* "
    },
    {
        "input": "[struct _ sep0] Find the names of stores in descending order of number of products . [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select shop.Name from employee  order by shop.Number_products desc"
    },
    {
        "input": "[struct _ sep0] find the name of employee and sort in ascending order of age . [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select employee.Name from employee  order by employee.Age asc"
    },
    {
        "input": "[struct _ sep0] find the name of employee under age 30 come from ? [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select employee.Name from employee  where  employee.Age < 30 "
    },
    {
        "input": "[struct _ sep0] find the name of employee who never won any award in the evaluation . [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select employee.Name from employee  where  @.@ not in evaluation.* "
    },
    {
        "input": "[struct _ sep0] find the name of employee who never received any evaluation ? [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select employee.Name from employee  where  @.@ not in evaluation.* "
    },
    {
        "input": "[struct _ sep0] Find the name of the employee and sort in ascending order of age . [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select employee.Name from employee  order by employee.Age asc"
    },
    {
        "input": "[struct _ sep0] Find the name of the employee under age 30 come from ? [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select employee.Name from employee  where  employee.Age < 30 "
    },
    {
        "input": "[struct _ sep0] Find the name of the employee who never won any award in the evaluation . [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select employee.Name from employee  where  @.@ not in evaluation.* "
    },
    {
        "input": "[struct _ sep0] Find the name of the employee who never received any evaluation ? [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select employee.Name from employee  where  @.@ not in evaluation.* "
    },
    {
        "input": "[struct _ sep0] Find the names of employees and sort in ascending order of age . [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select employee.Name from employee  order by employee.Age asc"
    },
    {
        "input": "[struct _ sep0] Find the names of employees under age 30 come from ? [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select employee.Name from employee  where  employee.Age < 30 "
    },
    {
        "input": "[struct _ sep0] What are the names of the employees and sort in ascending order of age . [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select employee.Name from employee  order by employee.Age asc"
    },
    {
        "input": "[struct _ sep0] What are the names of the employees under age 30 come from ? [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select employee.Name from employee  where  employee.Age < 30 "
    },
    {
        "input": "[struct _ sep0] What is the name of the shop whose number of products is the largest . [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select shop.Name from employee  order by shop.Number_products desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the name of the shop that sells the largest number of products ? [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select shop.Name from employee  order by shop.Number_products desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the name of the shop in descending order of number of products . [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select shop.Name from employee  order by shop.Number_products desc"
    },
    {
        "input": "[struct _ sep0] What is the name of the shop that do not hire any employee . [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select shop.Name from employee  where  @.@ not in hiring.* "
    },
    {
        "input": "[struct _ sep0] Find the name of the shops whose number of products is the largest . [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select shop.Name from employee  order by shop.Number_products desc limit 1"
    },
    {
        "input": "[struct _ sep0] Find the name of the shops that sells the largest number of products ? [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select shop.Name from employee  order by shop.Number_products desc limit 1"
    },
    {
        "input": "[struct _ sep0] Find the name of the shops in descending order of number of products . [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select shop.Name from employee  order by shop.Number_products desc"
    },
    {
        "input": "[struct _ sep0] Which district has both stores with less than 3000 products and in descending order of number of products . [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select shop.District from employee  where  shop.Number_products < 3000  order by shop.Number_products desc"
    },
    {
        "input": "[struct _ sep0] Find the districts in which there are both shops selling less than 3000 products and in descending order of number of products . [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select shop.District from employee  where  shop.Number_products < 3000  order by shop.Number_products desc"
    },
    {
        "input": "[struct _ sep0] What is the document name and template id for document named ' Robbin CV ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Robbin CV ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_Name , documents.Template_ID from ref_template_types  where  documents.Document_Name = \"Robbin CV\" "
    },
    {
        "input": "[struct _ sep0] What is the document name and template id for document with the name Robbin CV . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Robbin CV ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_Name , documents.Template_ID from ref_template_types  where  documents.Document_Name = \"Robbin CV\" "
    },
    {
        "input": "[struct _ sep0] What is the document name and template id for document are using the template with type code ' PPT ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_Name , documents.Template_ID from ref_template_types  where  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] What is the document name and template id for document that use the PPT template type . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_Name , documents.Template_ID from ref_template_types  where  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] What is the document name and template id for document that use templates with the code BK ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( BK ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( BK ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_Name , documents.Template_ID from ref_template_types  where  templates.Template_Type_Code = \"BK\" "
    },
    {
        "input": "[struct _ sep0] Return the names and template ids for documents named ' Robbin CV ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Robbin CV ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_Name , documents.Template_ID from ref_template_types  where  documents.Document_Name = \"Robbin CV\" "
    },
    {
        "input": "[struct _ sep0] Return the names and template ids for documents with the name Robbin CV . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Robbin CV ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_Name , documents.Template_ID from ref_template_types  where  documents.Document_Name = \"Robbin CV\" "
    },
    {
        "input": "[struct _ sep0] Return the names and template ids for documents are using the template with type code ' PPT ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_Name , documents.Template_ID from ref_template_types  where  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] Return the names and template ids for documents that use the PPT template type . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_Name , documents.Template_ID from ref_template_types  where  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] Return the names and template ids for documents that use templates with the code BK ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( BK ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( BK ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_Name , documents.Template_ID from ref_template_types  where  templates.Template_Type_Code = \"BK\" "
    },
    {
        "input": "[struct _ sep0] What is the document id , template id and description for document with description with the letter ' w ' in it ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Template_ID , documents.Document_Description from ref_template_types  where  documents.Document_Description like \"%w%\" "
    },
    {
        "input": "[struct _ sep0] What is the document id , template id and description for document that contain the letter w in their description . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Template_ID , documents.Document_Description from ref_template_types  where  documents.Document_Description like \"%w%\" "
    },
    {
        "input": "[struct _ sep0] What is the document id , template id and description for document are using the template with type code ' PPT ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Template_ID , documents.Document_Description from ref_template_types  where  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] What is the document id , template id and description for document that use the PPT template type . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Template_ID , documents.Document_Description from ref_template_types  where  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] What is the document id , template id and description for document that use templates with the code BK ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( BK ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( BK ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Template_ID , documents.Document_Description from ref_template_types  where  templates.Template_Type_Code = \"BK\" "
    },
    {
        "input": "[struct _ sep0] Return the document id , template id , and description for the document with description with the letter ' w ' in it ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Template_ID , documents.Document_Description from ref_template_types  where  documents.Document_Description like \"%w%\" "
    },
    {
        "input": "[struct _ sep0] Return the document id , template id , and description for the document that contain the letter w in their description . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Template_ID , documents.Document_Description from ref_template_types  where  documents.Document_Description like \"%w%\" "
    },
    {
        "input": "[struct _ sep0] Return the document id , template id , and description for the document are using the template with type code ' PPT ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Template_ID , documents.Document_Description from ref_template_types  where  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] Return the document id , template id , and description for the document that use the PPT template type . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Template_ID , documents.Document_Description from ref_template_types  where  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] Return the document id , template id , and description for the document that use templates with the code BK ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( BK ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( BK ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Template_ID , documents.Document_Description from ref_template_types  where  templates.Template_Type_Code = \"BK\" "
    },
    {
        "input": "[struct _ sep0] How many documents with description with the letter ' w ' in it ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( documents.* )  from ref_template_types  where  documents.Document_Description like \"%w%\" "
    },
    {
        "input": "[struct _ sep0] How many documents that contain the letter w in their description . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( documents.* )  from ref_template_types  where  documents.Document_Description like \"%w%\" "
    },
    {
        "input": "[struct _ sep0] How many documents named ' Robbin CV ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Robbin CV ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( documents.* )  from ref_template_types  where  documents.Document_Name = \"Robbin CV\" "
    },
    {
        "input": "[struct _ sep0] How many documents with the name Robbin CV . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Robbin CV ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( documents.* )  from ref_template_types  where  documents.Document_Name = \"Robbin CV\" "
    },
    {
        "input": "[struct _ sep0] How many documents that use templates with the code BK ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( BK ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( BK ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( documents.* )  from ref_template_types  where  templates.Template_Type_Code = \"BK\" "
    },
    {
        "input": "[struct _ sep0] Count the number of documents with description with the letter ' w ' in it ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( documents.* )  from ref_template_types  where  documents.Document_Description like \"%w%\" "
    },
    {
        "input": "[struct _ sep0] Count the number of documents that contain the letter w in their description . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( documents.* )  from ref_template_types  where  documents.Document_Description like \"%w%\" "
    },
    {
        "input": "[struct _ sep0] Count the number of documents named ' Robbin CV ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Robbin CV ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( documents.* )  from ref_template_types  where  documents.Document_Name = \"Robbin CV\" "
    },
    {
        "input": "[struct _ sep0] Count the number of documents with the name Robbin CV . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Robbin CV ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( documents.* )  from ref_template_types  where  documents.Document_Name = \"Robbin CV\" "
    },
    {
        "input": "[struct _ sep0] Count the number of documents that use templates with the code BK ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( BK ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( BK ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( documents.* )  from ref_template_types  where  templates.Template_Type_Code = \"BK\" "
    },
    {
        "input": "[struct _ sep0] What is the id and type code for the template not used by any document . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID , templates.Template_Type_Code from ref_template_types  where  except_  @.@ is documents.* "
    },
    {
        "input": "[struct _ sep0] What is the id and type code for the template that are not used in any documents ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID , templates.Template_Type_Code from ref_template_types  where  except_  @.@ is documents.* "
    },
    {
        "input": "[struct _ sep0] What is the id and type code for the template with template type code PP or PPT ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, PP ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT, PP ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID , templates.Template_Type_Code from ref_template_types  where  templates.Template_Type_Code = \"PP\"  or  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] What is the id and type code for the template that have the code PP or PPT . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, PP ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT, PP ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID , templates.Template_Type_Code from ref_template_types  where  templates.Template_Type_Code = \"PP\"  or  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] What is the id and type code for the template have template type code CV ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID , templates.Template_Type_Code from ref_template_types  where  templates.Template_Type_Code = \"CV\" "
    },
    {
        "input": "[struct _ sep0] What is the id and type code for the template with version number later than 5 ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID , templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] What is the id and type code for the template with a version number greater than 5 . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID , templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] What is the id and type code for the template used by document with the name ' Data base ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID , templates.Template_Type_Code from ref_template_types  where  documents.Document_Name = \"Data base\" "
    },
    {
        "input": "[struct _ sep0] What is the id and type code for the template that is used by a document named Data base . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID , templates.Template_Type_Code from ref_template_types  where  documents.Document_Name = \"Data base\" "
    },
    {
        "input": "[struct _ sep0] What is the id and type code for the template with the description ' Presentation ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID , templates.Template_Type_Code from ref_template_types  where  ref_template_types.Template_Type_Description = \"Presentation\" "
    },
    {
        "input": "[struct _ sep0] Return the id and type code of the template not used by any document . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID , templates.Template_Type_Code from ref_template_types  where  except_  @.@ is documents.* "
    },
    {
        "input": "[struct _ sep0] Return the id and type code of the template that are not used in any documents ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID , templates.Template_Type_Code from ref_template_types  where  except_  @.@ is documents.* "
    },
    {
        "input": "[struct _ sep0] Return the id and type code of the template with template type code PP or PPT ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, PP ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT, PP ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID , templates.Template_Type_Code from ref_template_types  where  templates.Template_Type_Code = \"PP\"  or  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] Return the id and type code of the template that have the code PP or PPT . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, PP ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT, PP ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID , templates.Template_Type_Code from ref_template_types  where  templates.Template_Type_Code = \"PP\"  or  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] Return the id and type code of the template have template type code CV ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID , templates.Template_Type_Code from ref_template_types  where  templates.Template_Type_Code = \"CV\" "
    },
    {
        "input": "[struct _ sep0] Return the id and type code of the template with version number later than 5 ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID , templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] Return the id and type code of the template with a version number greater than 5 . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID , templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] Return the id and type code of the template used by document with the name ' Data base ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID , templates.Template_Type_Code from ref_template_types  where  documents.Document_Name = \"Data base\" "
    },
    {
        "input": "[struct _ sep0] Return the id and type code of the template that is used by a document named Data base . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID , templates.Template_Type_Code from ref_template_types  where  documents.Document_Name = \"Data base\" "
    },
    {
        "input": "[struct _ sep0] Return the id and type code of the template with the description ' Presentation ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID , templates.Template_Type_Code from ref_template_types  where  ref_template_types.Template_Type_Description = \"Presentation\" "
    },
    {
        "input": "[struct _ sep0] Show ids for all templates with description with the letter ' w ' in it ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Template_ID from ref_template_types  where  documents.Document_Description like \"%w%\" "
    },
    {
        "input": "[struct _ sep0] Show ids for all templates named ' Robbin CV ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Robbin CV ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Template_ID from ref_template_types  where  documents.Document_Name = \"Robbin CV\" "
    },
    {
        "input": "[struct _ sep0] Show ids for all templates with the name Robbin CV . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Robbin CV ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Template_ID from ref_template_types  where  documents.Document_Name = \"Robbin CV\" "
    },
    {
        "input": "[struct _ sep0] What are the template ids of any templates with description with the letter ' w ' in it ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Template_ID from ref_template_types  where  documents.Document_Description like \"%w%\" "
    },
    {
        "input": "[struct _ sep0] What are the template ids of any templates with the name Robbin CV . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Robbin CV ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Template_ID from ref_template_types  where  documents.Document_Name = \"Robbin CV\" "
    },
    {
        "input": "[struct _ sep0] Show ids for all templates with template type code PP or PPT ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, PP ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT, PP ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  templates.Template_Type_Code = \"PP\"  or  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] Show ids for all templates that have the code PP or PPT . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, PP ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT, PP ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  templates.Template_Type_Code = \"PP\"  or  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] Show ids for all templates have template type code CV ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  templates.Template_Type_Code = \"CV\" "
    },
    {
        "input": "[struct _ sep0] Show ids for all templates with version number later than 5 ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] Show ids for all templates with a version number greater than 5 . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] Show ids for all templates used by document with the name ' Data base ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  documents.Document_Name = \"Data base\" "
    },
    {
        "input": "[struct _ sep0] Show ids for all templates that is used by a document named Data base . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  documents.Document_Name = \"Data base\" "
    },
    {
        "input": "[struct _ sep0] Show ids for all templates with the description ' Presentation ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  ref_template_types.Template_Type_Description = \"Presentation\" "
    },
    {
        "input": "[struct _ sep0] What are the ids for templates with template type code PP or PPT ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, PP ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT, PP ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  templates.Template_Type_Code = \"PP\"  or  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] What are the ids for templates that have the code PP or PPT . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, PP ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT, PP ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  templates.Template_Type_Code = \"PP\"  or  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] What are the ids for templates have template type code CV ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  templates.Template_Type_Code = \"CV\" "
    },
    {
        "input": "[struct _ sep0] What are the ids for templates with version number later than 5 ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] What are the ids for templates with a version number greater than 5 . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] What are the ids for templates used by document with the name ' Data base ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  documents.Document_Name = \"Data base\" "
    },
    {
        "input": "[struct _ sep0] What are the ids for templates that is used by a document named Data base . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  documents.Document_Name = \"Data base\" "
    },
    {
        "input": "[struct _ sep0] What are the ids for templates with the description ' Presentation ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  ref_template_types.Template_Type_Description = \"Presentation\" "
    },
    {
        "input": "[struct _ sep0] What are the ids of templates not used by any document . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  except_  @.@ is documents.* "
    },
    {
        "input": "[struct _ sep0] What are the ids of templates that are not used in any documents ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  except_  @.@ is documents.* "
    },
    {
        "input": "[struct _ sep0] What are the ids of templates have template type code CV ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  templates.Template_Type_Code = \"CV\" "
    },
    {
        "input": "[struct _ sep0] What are the ids of templates with version number later than 5 ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] What are the ids of templates with a version number greater than 5 . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] What are the ids of templates used by document with the name ' Data base ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  documents.Document_Name = \"Data base\" "
    },
    {
        "input": "[struct _ sep0] What are the ids of templates that is used by a document named Data base . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  documents.Document_Name = \"Data base\" "
    },
    {
        "input": "[struct _ sep0] What are the ids of templates with the description ' Presentation ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  ref_template_types.Template_Type_Description = \"Presentation\" "
    },
    {
        "input": "[struct _ sep0] Return the ids of templates not used by any document . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  except_  @.@ is documents.* "
    },
    {
        "input": "[struct _ sep0] Return the ids of templates that are not used in any documents ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  except_  @.@ is documents.* "
    },
    {
        "input": "[struct _ sep0] Return the ids of templates have template type code CV ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  templates.Template_Type_Code = \"CV\" "
    },
    {
        "input": "[struct _ sep0] Return the ids of templates with version number later than 5 ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] Return the ids of templates with a version number greater than 5 . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] Return the ids of templates used by document with the name ' Data base ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  documents.Document_Name = \"Data base\" "
    },
    {
        "input": "[struct _ sep0] Return the ids of templates that is used by a document named Data base . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  documents.Document_Name = \"Data base\" "
    },
    {
        "input": "[struct _ sep0] Return the ids of templates with the description ' Presentation ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  ref_template_types.Template_Type_Description = \"Presentation\" "
    },
    {
        "input": "[struct _ sep0] How many templates with template type code PP or PPT ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, PP ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT, PP ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( templates.* )  from ref_template_types  where  templates.Template_Type_Code = \"PP\"  or  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] How many templates that have the code PP or PPT . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, PP ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT, PP ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( templates.* )  from ref_template_types  where  templates.Template_Type_Code = \"PP\"  or  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] How many templates with version number later than 5 ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( templates.* )  from ref_template_types  where  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] How many templates with a version number greater than 5 . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( templates.* )  from ref_template_types  where  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] How many templates used by document with the name ' Data base ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( templates.* )  from ref_template_types  where  documents.Document_Name = \"Data base\" "
    },
    {
        "input": "[struct _ sep0] How many templates that is used by a document named Data base . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( templates.* )  from ref_template_types  where  documents.Document_Name = \"Data base\" "
    },
    {
        "input": "[struct _ sep0] How many templates with the description ' Presentation ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( templates.* )  from ref_template_types  where  ref_template_types.Template_Type_Description = \"Presentation\" "
    },
    {
        "input": "[struct _ sep0] What is the version number and template type code for the template not used by any document . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  except_  @.@ is documents.* "
    },
    {
        "input": "[struct _ sep0] What is the version number and template type code for the template that are not used in any documents ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  except_  @.@ is documents.* "
    },
    {
        "input": "[struct _ sep0] What is the version number and template type code for the template with template type code PP or PPT ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, PP ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT, PP ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  templates.Template_Type_Code = \"PP\"  or  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] What is the version number and template type code for the template that have the code PP or PPT . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, PP ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT, PP ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  templates.Template_Type_Code = \"PP\"  or  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] What is the version number and template type code for the template have template type code CV ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  templates.Template_Type_Code = \"CV\" "
    },
    {
        "input": "[struct _ sep0] What is the version number and template type code for the template used by document with the name ' Data base ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  documents.Document_Name = \"Data base\" "
    },
    {
        "input": "[struct _ sep0] What is the version number and template type code for the template that is used by a document named Data base . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  documents.Document_Name = \"Data base\" "
    },
    {
        "input": "[struct _ sep0] What is the version number and template type code for the template with the description ' Presentation ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  ref_template_types.Template_Type_Description = \"Presentation\" "
    },
    {
        "input": "[struct _ sep0] Return the version numbers and template type codes of templates not used by any document . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  except_  @.@ is documents.* "
    },
    {
        "input": "[struct _ sep0] Return the version numbers and template type codes of templates that are not used in any documents ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  except_  @.@ is documents.* "
    },
    {
        "input": "[struct _ sep0] Return the version numbers and template type codes of templates with template type code PP or PPT ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, PP ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT, PP ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  templates.Template_Type_Code = \"PP\"  or  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] Return the version numbers and template type codes of templates that have the code PP or PPT . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, PP ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT, PP ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  templates.Template_Type_Code = \"PP\"  or  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] Return the version numbers and template type codes of templates have template type code CV ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  templates.Template_Type_Code = \"CV\" "
    },
    {
        "input": "[struct _ sep0] Return the version numbers and template type codes of templates used by document with the name ' Data base ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  documents.Document_Name = \"Data base\" "
    },
    {
        "input": "[struct _ sep0] Return the version numbers and template type codes of templates that is used by a document named Data base . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  documents.Document_Name = \"Data base\" "
    },
    {
        "input": "[struct _ sep0] Return the version numbers and template type codes of templates with the description ' Presentation ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  ref_template_types.Template_Type_Description = \"Presentation\" "
    },
    {
        "input": "[struct _ sep0] Which template type code with template type code PP or PPT ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, PP ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT, PP ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  templates.Template_Type_Code = \"PP\"  or  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] Which template type code with version number later than 5 ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] Which template type code with a version number greater than 5 . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] Which template type code with less than three templates . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  count ( templates.* )  < 3  group by templates.Template_Type_Code "
    },
    {
        "input": "[struct _ sep0] Which template type code that are not used by any document . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  except_  @.@ is documents.* "
    },
    {
        "input": "[struct _ sep0] Return the type code of the template type with template type code PP or PPT ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, PP ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT, PP ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  templates.Template_Type_Code = \"PP\"  or  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] Return the type code of the template type have template type code CV ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  templates.Template_Type_Code = \"CV\" "
    },
    {
        "input": "[struct _ sep0] Return the type code of the template type with version number later than 5 ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] Return the type code of the template type with a version number greater than 5 . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] Return the type code of the template type that have fewer than 3 templates ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  count ( templates.* )  < 3  group by templates.Template_Type_Code "
    },
    {
        "input": "[struct _ sep0] Return the type code of the template type that are not used for any document ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  except_  @.@ is documents.* "
    },
    {
        "input": "[struct _ sep0] Show all template type codes with template type code PP or PPT ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, PP ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT, PP ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  templates.Template_Type_Code = \"PP\"  or  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] Show all template type codes have template type code CV ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  templates.Template_Type_Code = \"CV\" "
    },
    {
        "input": "[struct _ sep0] Show all template type codes with version number later than 5 ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] Show all template type codes with a version number greater than 5 . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] Show all template type codes that are not used by any document . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  except_  @.@ is documents.* "
    },
    {
        "input": "[struct _ sep0] What are the codes of template types with template type code PP or PPT ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, PP ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT, PP ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  templates.Template_Type_Code = \"PP\"  or  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] What are the codes of template types with version number later than 5 ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] What are the codes of template types with a version number greater than 5 . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] What are the codes of template types that are not used for any document ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  except_  @.@ is documents.* "
    },
    {
        "input": "[struct _ sep0] What is the template type code of the template not used by any document . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  except_  @.@ is documents.* "
    },
    {
        "input": "[struct _ sep0] What is the template type code of the template that are not used in any documents ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  except_  @.@ is documents.* "
    },
    {
        "input": "[struct _ sep0] What is the template type code of the template with template type code PP or PPT ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, PP ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT, PP ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  templates.Template_Type_Code = \"PP\"  or  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] What is the template type code of the template that have the code PP or PPT . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, PP ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT, PP ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  templates.Template_Type_Code = \"PP\"  or  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] What is the template type code of the template have template type code CV ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  templates.Template_Type_Code = \"CV\" "
    },
    {
        "input": "[struct _ sep0] What is the template type code of the template with version number later than 5 ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] What is the template type code of the template with a version number greater than 5 . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] What is the template type code of the template with the description ' Presentation ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  ref_template_types.Template_Type_Description = \"Presentation\" "
    },
    {
        "input": "[struct _ sep0] Return the template type code of the template not used by any document . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  except_  @.@ is documents.* "
    },
    {
        "input": "[struct _ sep0] Return the template type code of the template that are not used in any documents ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  except_  @.@ is documents.* "
    },
    {
        "input": "[struct _ sep0] Return the template type code of the template with template type code PP or PPT ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, PP ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT, PP ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  templates.Template_Type_Code = \"PP\"  or  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] Return the template type code of the template that have the code PP or PPT . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, PP ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT, PP ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  templates.Template_Type_Code = \"PP\"  or  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] Return the template type code of the template have template type code CV ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  templates.Template_Type_Code = \"CV\" "
    },
    {
        "input": "[struct _ sep0] Return the template type code of the template with version number later than 5 ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] Return the template type code of the template with a version number greater than 5 . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] Return the template type code of the template with the description ' Presentation ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  ref_template_types.Template_Type_Description = \"Presentation\" "
    },
    {
        "input": "[struct _ sep0] What are the names of documents with description with the letter ' w ' in it ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_Name from ref_template_types  where  documents.Document_Description like \"%w%\" "
    },
    {
        "input": "[struct _ sep0] What are the names of documents that contain the letter w in their description . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_Name from ref_template_types  where  documents.Document_Description like \"%w%\" "
    },
    {
        "input": "[struct _ sep0] What are the names of documents named ' Robbin CV ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Robbin CV ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_Name from ref_template_types  where  documents.Document_Name = \"Robbin CV\" "
    },
    {
        "input": "[struct _ sep0] What are the names of documents with the name Robbin CV . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Robbin CV ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_Name from ref_template_types  where  documents.Document_Name = \"Robbin CV\" "
    },
    {
        "input": "[struct _ sep0] What are the names of documents are using the template with type code ' PPT ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_Name from ref_template_types  where  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] What are the names of documents that use the PPT template type . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_Name from ref_template_types  where  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] Which template type code with less than three templates . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  count ( templates.* )  < 3  group by templates.Template_Type_Code "
    },
    {
        "input": "[struct _ sep0] Which template type code that are not used by any document . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  except_  @.@ is documents.* "
    },
    {
        "input": "[struct _ sep0] Return the code of the template type that have fewer than 3 templates ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  count ( templates.* )  < 3  group by templates.Template_Type_Code "
    },
    {
        "input": "[struct _ sep0] Return the code of the template type that are not used for any document ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  except_  @.@ is documents.* "
    },
    {
        "input": "[struct _ sep0] Show all template type codes with template type code PP or PPT ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, PP ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT, PP ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  templates.Template_Type_Code = \"PP\"  or  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] Show all template type codes have template type code CV ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  templates.Template_Type_Code = \"CV\" "
    },
    {
        "input": "[struct _ sep0] Show all template type codes with version number later than 5 ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] Show all template type codes with a version number greater than 5 . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] Show all template type codes with less than three templates . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  count ( templates.* )  < 3  group by templates.Template_Type_Code "
    },
    {
        "input": "[struct _ sep0] What are the codes of template types with template type code PP or PPT ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, PP ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT, PP ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  templates.Template_Type_Code = \"PP\"  or  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] What are the codes of template types with version number later than 5 ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] What are the codes of template types with a version number greater than 5 . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] What are the codes of template types that have fewer than 3 templates ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  count ( templates.* )  < 3  group by templates.Template_Type_Code "
    },
    {
        "input": "[struct _ sep0] Return the template type description of the template type with the description ' Book ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description ( Book ) | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select ref_template_types.Template_Type_Description from ref_template_types  where  ref_template_types.Template_Type_Description = \"Book\" "
    },
    {
        "input": "[struct _ sep0] Return the type code of the template type with the code AD . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( AD ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( AD ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select ref_template_types.Template_Type_Code from ref_template_types  where  ref_template_types.Template_Type_Code = \"AD\" "
    },
    {
        "input": "[struct _ sep0] Return the ids corresponding to templates not used by any document . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  except_  @.@ is documents.* "
    },
    {
        "input": "[struct _ sep0] Return the ids corresponding to templates that are not used in any documents ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  except_  @.@ is documents.* "
    },
    {
        "input": "[struct _ sep0] Return the ids corresponding to templates with template type code PP or PPT ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, PP ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT, PP ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  templates.Template_Type_Code = \"PP\"  or  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] Return the ids corresponding to templates that have the code PP or PPT . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, PP ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT, PP ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  templates.Template_Type_Code = \"PP\"  or  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] Return the ids corresponding to templates have template type code CV ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  templates.Template_Type_Code = \"CV\" "
    },
    {
        "input": "[struct _ sep0] Return the ids corresponding to templates with version number later than 5 ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] Return the ids corresponding to templates with a version number greater than 5 . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] Return the ids corresponding to templates used by document with the name ' Data base ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  documents.Document_Name = \"Data base\" "
    },
    {
        "input": "[struct _ sep0] Return the ids corresponding to templates that is used by a document named Data base . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  documents.Document_Name = \"Data base\" "
    },
    {
        "input": "[struct _ sep0] How many paragraphs for the document with name ' Welcome to NY ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Welcome to NY ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( paragraphs.* )  from ref_template_types  where  documents.Document_Name = \"Welcome to NY\" "
    },
    {
        "input": "[struct _ sep0] How many paragraphs for the document with the name ' Customer reviews ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Customer reviews ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( paragraphs.* )  from ref_template_types  where  documents.Document_Name = \"Customer reviews\" "
    },
    {
        "input": "[struct _ sep0] How many paragraphs for the document that contain the paragraph text ' Brazil ' and ' Ireland ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Ireland, Brazil ), other _ details",
        "gold_natsql": "select count ( paragraphs.* )  from ref_template_types  where  paragraphs.Paragraph_Text = \"Brazil\"  and  paragraphs.Paragraph_Text = \"Ireland\" "
    },
    {
        "input": "[struct _ sep0] Count the number of paragraphs with text ' Korea ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Korea ), other _ details",
        "gold_natsql": "select count ( paragraphs.* )  from ref_template_types  where  paragraphs.Paragraph_Text = \"Korea\" "
    },
    {
        "input": "[struct _ sep0] Count the number of paragraphs that includes the text ' Korea ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Korea ), other _ details",
        "gold_natsql": "select count ( paragraphs.* )  from ref_template_types  where  paragraphs.Paragraph_Text = \"Korea\" "
    },
    {
        "input": "[struct _ sep0] Count the number of paragraphs in the document titled ' Welcome to NY ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Welcome to NY ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( paragraphs.* )  from ref_template_types  where  documents.Document_Name = \"Welcome to NY\" "
    },
    {
        "input": "[struct _ sep0] Show paragraph details for paragraph in the document named ' Summer Show ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Summer Show ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Other_Details from ref_template_types  where  documents.Document_Name = \"Summer Show\" "
    },
    {
        "input": "[struct _ sep0] Show paragraph details for paragraph in the document titled ' Welcome to NY ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Welcome to NY ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Other_Details from ref_template_types  where  documents.Document_Name = \"Welcome to NY\" "
    },
    {
        "input": "[struct _ sep0] Show paragraph details for paragraph ordered by id . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Other_Details from ref_template_types  order by paragraphs.Document_ID asc"
    },
    {
        "input": "[struct _ sep0] Show paragraph details for paragraph with paragraph text ' Brazil ' and ' Ireland ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Ireland, Brazil ), other _ details",
        "gold_natsql": "select paragraphs.Other_Details from ref_template_types  where  paragraphs.Paragraph_Text = \"Brazil\"  and  paragraphs.Paragraph_Text = \"Ireland\" "
    },
    {
        "input": "[struct _ sep0] What are the details for the paragraph in the document named ' Summer Show ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Summer Show ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Other_Details from ref_template_types  where  documents.Document_Name = \"Summer Show\" "
    },
    {
        "input": "[struct _ sep0] What are the details for the paragraph in the document titled ' Welcome to NY ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Welcome to NY ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Other_Details from ref_template_types  where  documents.Document_Name = \"Welcome to NY\" "
    },
    {
        "input": "[struct _ sep0] What are the details for the paragraph with paragraph text ' Brazil ' and ' Ireland ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Ireland, Brazil ), other _ details",
        "gold_natsql": "select paragraphs.Other_Details from ref_template_types  where  paragraphs.Paragraph_Text = \"Brazil\"  and  paragraphs.Paragraph_Text = \"Ireland\" "
    },
    {
        "input": "[struct _ sep0] Show all paragraph ids and texts for the document with name ' Summer Show ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Summer Show ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Paragraph_ID , paragraphs.Paragraph_Text from ref_template_types  where  documents.Document_Name = \"Summer Show\" "
    },
    {
        "input": "[struct _ sep0] Show all paragraph ids and texts for the document with the name ' Customer reviews ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Customer reviews ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Paragraph_ID , paragraphs.Paragraph_Text from ref_template_types  where  documents.Document_Name = \"Customer reviews\" "
    },
    {
        "input": "[struct _ sep0] Show all paragraph ids and texts for the document that contain the paragraph text ' Brazil ' and ' Ireland ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Ireland, Brazil ), other _ details",
        "gold_natsql": "select paragraphs.Paragraph_ID , paragraphs.Paragraph_Text from ref_template_types  where  paragraphs.Paragraph_Text = \"Brazil\"  and  paragraphs.Paragraph_Text = \"Ireland\" "
    },
    {
        "input": "[struct _ sep0] What are the ids and texts of paragraphs in the document named ' Summer Show ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Summer Show ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Paragraph_ID , paragraphs.Paragraph_Text from ref_template_types  where  documents.Document_Name = \"Summer Show\" "
    },
    {
        "input": "[struct _ sep0] What are the ids and texts of paragraphs with text ' Korea ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Korea ), other _ details",
        "gold_natsql": "select paragraphs.Paragraph_ID , paragraphs.Paragraph_Text from ref_template_types  where  paragraphs.Paragraph_Text = \"Korea\" "
    },
    {
        "input": "[struct _ sep0] What are the ids and texts of paragraphs that includes the text ' Korea ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Korea ), other _ details",
        "gold_natsql": "select paragraphs.Paragraph_ID , paragraphs.Paragraph_Text from ref_template_types  where  paragraphs.Paragraph_Text = \"Korea\" "
    },
    {
        "input": "[struct _ sep0] What are the paragraph texts for the document with name ' Summer Show ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Summer Show ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Paragraph_Text from ref_template_types  where  documents.Document_Name = \"Summer Show\" "
    },
    {
        "input": "[struct _ sep0] What are the paragraph texts for the document with name ' Welcome to NY ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Welcome to NY ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Paragraph_Text from ref_template_types  where  documents.Document_Name = \"Welcome to NY\" "
    },
    {
        "input": "[struct _ sep0] What are the paragraph texts for the document that contain the paragraph text ' Brazil ' and ' Ireland ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Ireland, Brazil ), other _ details",
        "gold_natsql": "select paragraphs.Paragraph_Text from ref_template_types  where  paragraphs.Paragraph_Text = \"Brazil\"  and  paragraphs.Paragraph_Text = \"Ireland\" "
    },
    {
        "input": "[struct _ sep0] Show all document ids and the number of paragraphs in each document . with text ' Korea ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Korea ), other _ details",
        "gold_natsql": "select paragraphs.Document_ID , count ( paragraphs.* )  from ref_template_types  where  paragraphs.Paragraph_Text = \"Korea\"  group by paragraphs.Document_ID "
    },
    {
        "input": "[struct _ sep0] Return the different document ids along with the number of paragraphs corresponding to each , with text ' Korea ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Korea ), other _ details",
        "gold_natsql": "select paragraphs.Document_ID , count ( paragraphs.* )  from ref_template_types  where  paragraphs.Paragraph_Text = \"Korea\"  group by paragraphs.Document_ID "
    },
    {
        "input": "[struct _ sep0] List all document ids with text ' Korea ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Korea ), other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  paragraphs.Paragraph_Text = \"Korea\" "
    },
    {
        "input": "[struct _ sep0] List all document ids ordered by id . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  order by paragraphs.Document_ID asc"
    },
    {
        "input": "[struct _ sep0] List all document ids with 1 to 2 paragraphs ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  count ( paragraphs.* )  between 1 and 2  group by paragraphs.Document_ID "
    },
    {
        "input": "[struct _ sep0] List all document ids with paragraph text ' Brazil ' and ' Ireland ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Ireland, Brazil ), other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  paragraphs.Paragraph_Text = \"Brazil\"  and  paragraphs.Paragraph_Text = \"Ireland\" "
    },
    {
        "input": "[struct _ sep0] What are the ids of documents with name ' Summer Show ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Summer Show ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  documents.Document_Name = \"Summer Show\" "
    },
    {
        "input": "[struct _ sep0] What are the ids of documents with text ' Korea ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Korea ), other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  paragraphs.Paragraph_Text = \"Korea\" "
    },
    {
        "input": "[struct _ sep0] What are the ids of documents with name ' Welcome to NY ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Welcome to NY ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  documents.Document_Name = \"Welcome to NY\" "
    },
    {
        "input": "[struct _ sep0] What are the ids of documents with the name ' Customer reviews ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Customer reviews ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  documents.Document_Name = \"Customer reviews\" "
    },
    {
        "input": "[struct _ sep0] What are the ids of documents that have between one and two paragraphs . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  count ( paragraphs.* )  between 1 and 2  group by paragraphs.Document_ID "
    },
    {
        "input": "[struct _ sep0] What are the ids of documents with paragraph text ' Brazil ' and ' Ireland ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Ireland, Brazil ), other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  paragraphs.Paragraph_Text = \"Brazil\"  and  paragraphs.Paragraph_Text = \"Ireland\" "
    },
    {
        "input": "[struct _ sep0] What are the ids of documents that contain the paragraph text ' Brazil ' and ' Ireland ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Ireland, Brazil ), other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  paragraphs.Paragraph_Text = \"Brazil\"  and  paragraphs.Paragraph_Text = \"Ireland\" "
    },
    {
        "input": "[struct _ sep0] What is the document id and name using templates with template type code BK . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( BK ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( BK ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Document_Name from ref_template_types  where  templates.Template_Type_Code = \"BK\" "
    },
    {
        "input": "[struct _ sep0] Return the id and name of the document with description with the letter ' w ' in it ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Document_Name from ref_template_types  where  documents.Document_Description like \"%w%\" "
    },
    {
        "input": "[struct _ sep0] Return the id and name of the document that contain the letter w in their description . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Document_Name from ref_template_types  where  documents.Document_Description like \"%w%\" "
    },
    {
        "input": "[struct _ sep0] Return the id and name of the document named ' Robbin CV ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Robbin CV ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Document_Name from ref_template_types  where  documents.Document_Name = \"Robbin CV\" "
    },
    {
        "input": "[struct _ sep0] Return the id and name of the document with the name Robbin CV . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Robbin CV ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Document_Name from ref_template_types  where  documents.Document_Name = \"Robbin CV\" "
    },
    {
        "input": "[struct _ sep0] Return the id and name of the document are using the template with type code ' PPT ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Document_Name from ref_template_types  where  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] Return the id and name of the document that use the PPT template type . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Document_Name from ref_template_types  where  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] Return the id and name of the document that use templates with the code BK ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( BK ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( BK ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Document_Name from ref_template_types  where  templates.Template_Type_Code = \"BK\" "
    },
    {
        "input": "[struct _ sep0] Return the id of the document with name ' Summer Show ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Summer Show ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  documents.Document_Name = \"Summer Show\" "
    },
    {
        "input": "[struct _ sep0] Return the id of the document with text ' Korea ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Korea ), other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  paragraphs.Paragraph_Text = \"Korea\" "
    },
    {
        "input": "[struct _ sep0] Return the id of the document with name ' Welcome to NY ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Welcome to NY ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  documents.Document_Name = \"Welcome to NY\" "
    },
    {
        "input": "[struct _ sep0] Return the id of the document with the name ' Customer reviews ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Customer reviews ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  documents.Document_Name = \"Customer reviews\" "
    },
    {
        "input": "[struct _ sep0] Return the id of the document ordered by id . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  order by paragraphs.Document_ID asc"
    },
    {
        "input": "[struct _ sep0] Return the id of the document that have 2 or more paragraphs ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  count ( paragraphs.* )  >= 2  group by paragraphs.Document_ID "
    },
    {
        "input": "[struct _ sep0] Return the id of the document that have between one and two paragraphs . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  count ( paragraphs.* )  between 1 and 2  group by paragraphs.Document_ID "
    },
    {
        "input": "[struct _ sep0] Return the id of the document with paragraph text ' Brazil ' and ' Ireland ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Ireland, Brazil ), other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  paragraphs.Paragraph_Text = \"Brazil\"  and  paragraphs.Paragraph_Text = \"Ireland\" "
    },
    {
        "input": "[struct _ sep0] Return the id of the document that contain the paragraph text ' Brazil ' and ' Ireland ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Ireland, Brazil ), other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  paragraphs.Paragraph_Text = \"Brazil\"  and  paragraphs.Paragraph_Text = \"Ireland\" "
    },
    {
        "input": "[struct _ sep0] What is the document id with text ' Korea ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Korea ), other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  paragraphs.Paragraph_Text = \"Korea\" "
    },
    {
        "input": "[struct _ sep0] What is the document id with at least two paragraphs . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  count ( paragraphs.* )  >= 2  group by paragraphs.Document_ID "
    },
    {
        "input": "[struct _ sep0] What is the document id with paragraph text ' Brazil ' and ' Ireland ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Ireland, Brazil ), other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  paragraphs.Paragraph_Text = \"Brazil\"  and  paragraphs.Paragraph_Text = \"Ireland\" "
    },
    {
        "input": "[struct _ sep0] Give the ids of documents with name ' Summer Show ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Summer Show ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  documents.Document_Name = \"Summer Show\" "
    },
    {
        "input": "[struct _ sep0] Give the ids of documents with text ' Korea ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Korea ), other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  paragraphs.Paragraph_Text = \"Korea\" "
    },
    {
        "input": "[struct _ sep0] Give the ids of documents with name ' Welcome to NY ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Welcome to NY ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  documents.Document_Name = \"Welcome to NY\" "
    },
    {
        "input": "[struct _ sep0] Give the ids of documents with the name ' Customer reviews ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Customer reviews ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  documents.Document_Name = \"Customer reviews\" "
    },
    {
        "input": "[struct _ sep0] Give the ids of documents ordered by id . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  order by paragraphs.Document_ID asc"
    },
    {
        "input": "[struct _ sep0] Give the ids of documents that have 2 or more paragraphs ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  count ( paragraphs.* )  >= 2  group by paragraphs.Document_ID "
    },
    {
        "input": "[struct _ sep0] Give the ids of documents with paragraph text ' Brazil ' and ' Ireland ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Ireland, Brazil ), other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  paragraphs.Paragraph_Text = \"Brazil\"  and  paragraphs.Paragraph_Text = \"Ireland\" "
    },
    {
        "input": "[struct _ sep0] Give the ids of documents that contain the paragraph text ' Brazil ' and ' Ireland ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Ireland, Brazil ), other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  paragraphs.Paragraph_Text = \"Brazil\"  and  paragraphs.Paragraph_Text = \"Ireland\" "
    },
    {
        "input": "[struct _ sep0] Show the document id with text ' Korea ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Korea ), other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  paragraphs.Paragraph_Text = \"Korea\" "
    },
    {
        "input": "[struct _ sep0] Show the document id ordered by id . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  order by paragraphs.Document_ID asc"
    },
    {
        "input": "[struct _ sep0] Show the document id with at least two paragraphs . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  count ( paragraphs.* )  >= 2  group by paragraphs.Document_ID "
    },
    {
        "input": "[struct _ sep0] Show the document id with 1 to 2 paragraphs ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  count ( paragraphs.* )  between 1 and 2  group by paragraphs.Document_ID "
    },
    {
        "input": "[struct _ sep0] What are the ids of documents with name ' Summer Show ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Summer Show ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  documents.Document_Name = \"Summer Show\" "
    },
    {
        "input": "[struct _ sep0] What are the ids of documents with text ' Korea ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Korea ), other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  paragraphs.Paragraph_Text = \"Korea\" "
    },
    {
        "input": "[struct _ sep0] What are the ids of documents with name ' Welcome to NY ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Welcome to NY ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  documents.Document_Name = \"Welcome to NY\" "
    },
    {
        "input": "[struct _ sep0] What are the ids of documents with the name ' Customer reviews ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Customer reviews ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  documents.Document_Name = \"Customer reviews\" "
    },
    {
        "input": "[struct _ sep0] What are the ids of documents that have 2 or more paragraphs ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  count ( paragraphs.* )  >= 2  group by paragraphs.Document_ID "
    },
    {
        "input": "[struct _ sep0] What are the ids of documents that have between one and two paragraphs . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  count ( paragraphs.* )  between 1 and 2  group by paragraphs.Document_ID "
    },
    {
        "input": "[struct _ sep0] List the names of teachers aged either 32 or 33 ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  where  teacher.Age = 32  or  teacher.Age = 33 "
    },
    {
        "input": "[struct _ sep0] List the names of teachers who are aged either 32 or 33 ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  where  teacher.Age = 32  or  teacher.Age = 33 "
    },
    {
        "input": "[struct _ sep0] List the names of teachers that teach at least two courses . [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  where  count ( course_arrange.* )  >= 2  group by teacher.Name "
    },
    {
        "input": "[struct _ sep0] List the names of teachers who teach at least two courses ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  where  count ( course_arrange.* )  >= 2  group by teacher.Name "
    },
    {
        "input": "[struct _ sep0] List the names of teachers who have not been arranged to teach courses . [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  where  @.@ not in course_arrange.* "
    },
    {
        "input": "[struct _ sep0] List the names of teachers whose courses have not been arranged ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  where  @.@ not in course_arrange.* "
    },
    {
        "input": "[struct _ sep0] What are the names of the teachers aged either 32 or 33 ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  where  teacher.Age = 32  or  teacher.Age = 33 "
    },
    {
        "input": "[struct _ sep0] What are the names of the teachers who are aged either 32 or 33 ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  where  teacher.Age = 32  or  teacher.Age = 33 "
    },
    {
        "input": "[struct _ sep0] What are the names of the teachers that teach at least two courses . [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  where  count ( course_arrange.* )  >= 2  group by teacher.Name "
    },
    {
        "input": "[struct _ sep0] What are the names of the teachers who teach at least two courses ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  where  count ( course_arrange.* )  >= 2  group by teacher.Name "
    },
    {
        "input": "[struct _ sep0] What are the names of the teachers who have not been arranged to teach courses . [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  where  @.@ not in course_arrange.* "
    },
    {
        "input": "[struct _ sep0] What are the names of the teachers whose courses have not been arranged ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  where  @.@ not in course_arrange.* "
    },
    {
        "input": "[struct _ sep0] Show the name of teachers in ascending order of age . [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  order by teacher.Age asc"
    },
    {
        "input": "[struct _ sep0] Show the name of teachers ordered by ascending age ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  order by teacher.Age asc"
    },
    {
        "input": "[struct _ sep0] Show the name of teachers that teach at least two courses . [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  where  count ( course_arrange.* )  >= 2  group by teacher.Name "
    },
    {
        "input": "[struct _ sep0] Show the name of teachers who teach at least two courses ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  where  count ( course_arrange.* )  >= 2  group by teacher.Name "
    },
    {
        "input": "[struct _ sep0] Show the name of teachers who have not been arranged to teach courses . [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  where  @.@ not in course_arrange.* "
    },
    {
        "input": "[struct _ sep0] Show the name of teachers whose courses have not been arranged ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  where  @.@ not in course_arrange.* "
    },
    {
        "input": "[struct _ sep0] What are the names of the teachers in ascending order of age . [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  order by teacher.Age asc"
    },
    {
        "input": "[struct _ sep0] What are the names of the teachers ordered by ascending age ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  order by teacher.Age asc"
    },
    {
        "input": "[struct _ sep0] What are the names of the teachers that teach at least two courses . [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  where  count ( course_arrange.* )  >= 2  group by teacher.Name "
    },
    {
        "input": "[struct _ sep0] What are the names of the teachers who teach at least two courses ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  where  count ( course_arrange.* )  >= 2  group by teacher.Name "
    },
    {
        "input": "[struct _ sep0] What are the names of the teachers who have not been arranged to teach courses . [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  where  @.@ not in course_arrange.* "
    },
    {
        "input": "[struct _ sep0] What are the names of the teachers whose courses have not been arranged ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  where  @.@ not in course_arrange.* "
    },
    {
        "input": "[struct _ sep0] What are the towns in ascending order of age . [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Hometown from course  order by teacher.Age asc"
    },
    {
        "input": "[struct _ sep0] Show names of teachers in ascending order of age . [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  order by teacher.Age asc"
    },
    {
        "input": "[struct _ sep0] Show names of teachers ordered by ascending age ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  order by teacher.Age asc"
    },
    {
        "input": "[struct _ sep0] Show names of teachers aged either 32 or 33 ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  where  teacher.Age = 32  or  teacher.Age = 33 "
    },
    {
        "input": "[struct _ sep0] Show names of teachers who are aged either 32 or 33 ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  where  teacher.Age = 32  or  teacher.Age = 33 "
    },
    {
        "input": "[struct _ sep0] Show names of teachers who have not been arranged to teach courses . [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  where  @.@ not in course_arrange.* "
    },
    {
        "input": "[struct _ sep0] Show names of teachers whose courses have not been arranged ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  where  @.@ not in course_arrange.* "
    },
    {
        "input": "[struct _ sep0] What are the names of the teachers in ascending order of age . [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  order by teacher.Age asc"
    },
    {
        "input": "[struct _ sep0] What are the names of the teachers ordered by ascending age ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  order by teacher.Age asc"
    },
    {
        "input": "[struct _ sep0] What are the names of the teachers aged either 32 or 33 ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  where  teacher.Age = 32  or  teacher.Age = 33 "
    },
    {
        "input": "[struct _ sep0] What are the names of the teachers who are aged either 32 or 33 ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  where  teacher.Age = 32  or  teacher.Age = 33 "
    },
    {
        "input": "[struct _ sep0] What are the names of the teachers who have not been arranged to teach courses . [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  where  @.@ not in course_arrange.* "
    },
    {
        "input": "[struct _ sep0] What are the names of the teachers whose courses have not been arranged ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  where  @.@ not in course_arrange.* "
    },
    {
        "input": "[struct _ sep0] List the names of teachers in ascending order of age . [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  order by teacher.Age asc"
    },
    {
        "input": "[struct _ sep0] List the names of teachers ordered by ascending age ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  order by teacher.Age asc"
    },
    {
        "input": "[struct _ sep0] List the names of teachers aged either 32 or 33 ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  where  teacher.Age = 32  or  teacher.Age = 33 "
    },
    {
        "input": "[struct _ sep0] List the names of teachers who are aged either 32 or 33 ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  where  teacher.Age = 32  or  teacher.Age = 33 "
    },
    {
        "input": "[struct _ sep0] List the names of teachers that teach at least two courses . [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  where  count ( course_arrange.* )  >= 2  group by teacher.Name "
    },
    {
        "input": "[struct _ sep0] List the names of teachers who teach at least two courses ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  where  count ( course_arrange.* )  >= 2  group by teacher.Name "
    },
    {
        "input": "[struct _ sep0] What are the names of the teachers in ascending order of age . [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  order by teacher.Age asc"
    },
    {
        "input": "[struct _ sep0] What are the names of the teachers ordered by ascending age ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  order by teacher.Age asc"
    },
    {
        "input": "[struct _ sep0] What are the names of the teachers aged either 32 or 33 ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  where  teacher.Age = 32  or  teacher.Age = 33 "
    },
    {
        "input": "[struct _ sep0] What are the names of the teachers who are aged either 32 or 33 ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  where  teacher.Age = 32  or  teacher.Age = 33 "
    },
    {
        "input": "[struct _ sep0] What are the names of the teachers that teach at least two courses . [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  where  count ( course_arrange.* )  >= 2  group by teacher.Name "
    },
    {
        "input": "[struct _ sep0] What are the names of the teachers who teach at least two courses ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  where  count ( course_arrange.* )  >= 2  group by teacher.Name "
    },
    {
        "input": "[struct _ sep0] Find the names of the visitors whose membership level is higher than 4 , and sort by their age from old to young . [/struct _ sep0]| museum _ visit | museum : museum _ id, name, num _ of _ staff, open _ year | visitor : id, name, level _ of _ membership, age | visit : museum _ id, visitor _ id, num _ of _ ticket, total _ spent",
        "gold_natsql": "select visitor.Name from museum  where  visitor.Level_of_membership > 4  order by visitor.Age desc"
    },
    {
        "input": "[struct _ sep0] Find the name and membership level of the visitors whose membership level is higher than 4 , and order the results by the level from high to low . [/struct _ sep0]| museum _ visit | museum : museum _ id, name, num _ of _ staff, open _ year | visitor : id, name, level _ of _ membership, age | visit : museum _ id, visitor _ id, num _ of _ ticket, total _ spent",
        "gold_natsql": "select visitor.Name , visitor.Level_of_membership from museum  where  visitor.Level_of_membership > 4  order by visitor.Level_of_membership desc"
    },
    {
        "input": "[struct _ sep0] Find the id and name of the museum that were open before 2009 . [/struct _ sep0]| museum _ visit | museum : museum _ id, name, num _ of _ staff, open _ year | visitor : id, name, level _ of _ membership, age | visit : museum _ id, visitor _ id, num _ of _ ticket, total _ spent",
        "gold_natsql": "select museum.Museum_ID , museum.Name from museum  where  museum.Open_Year < 2009 "
    },
    {
        "input": "[struct _ sep0] Find the id and name of the museum named Plaza Museum ? [/struct _ sep0]| museum _ visit | museum : museum _ id, name ( Plaza Museum ), num _ of _ staff, open _ year | visitor : id, name, level _ of _ membership, age | visit : museum _ id, visitor _ id, num _ of _ ticket, total _ spent",
        "gold_natsql": "select museum.Museum_ID , museum.Name from museum  where  museum.Name = \"Plaza Museum\" "
    },
    {
        "input": "[struct _ sep0] Find the id and name of the museum opened after 2010 . [/struct _ sep0]| museum _ visit | museum : museum _ id, name, num _ of _ staff, open _ year | visitor : id, name, level _ of _ membership, age | visit : museum _ id, visitor _ id, num _ of _ ticket, total _ spent",
        "gold_natsql": "select museum.Museum_ID , museum.Name from museum  where  museum.Open_Year > 2010 "
    },
    {
        "input": "[struct _ sep0] Find the id and name of the museum that had no visitor yet ? [/struct _ sep0]| museum _ visit | museum : museum _ id, name, num _ of _ staff, open _ year | visitor : id, name, level _ of _ membership, age | visit : museum _ id, visitor _ id, num _ of _ ticket, total _ spent",
        "gold_natsql": "select museum.Museum_ID , museum.Name from museum  where  @.@ not in visit.* "
    },
    {
        "input": "[struct _ sep0] Find the average number of staff working for the museums named Plaza Museum ? [/struct _ sep0]| museum _ visit | museum : museum _ id, name ( Plaza Museum ), num _ of _ staff, open _ year | visitor : id, name, level _ of _ membership, age | visit : museum _ id, visitor _ id, num _ of _ ticket, total _ spent",
        "gold_natsql": "select avg ( museum.Num_of_Staff )  from museum  where  museum.Name = \"Plaza Museum\" "
    },
    {
        "input": "[struct _ sep0] Find the average number of staff working for the museums opened after 2010 . [/struct _ sep0]| museum _ visit | museum : museum _ id, name, num _ of _ staff, open _ year | visitor : id, name, level _ of _ membership, age | visit : museum _ id, visitor _ id, num _ of _ ticket, total _ spent",
        "gold_natsql": "select avg ( museum.Num_of_Staff )  from museum  where  museum.Open_Year > 2010 "
    },
    {
        "input": "[struct _ sep0] Find the average number of staff working for the museums that had no visitor yet ? [/struct _ sep0]| museum _ visit | museum : museum _ id, name, num _ of _ staff, open _ year | visitor : id, name, level _ of _ membership, age | visit : museum _ id, visitor _ id, num _ of _ ticket, total _ spent",
        "gold_natsql": "select avg ( museum.Num_of_Staff )  from museum  where  @.@ not in visit.* "
    },
    {
        "input": "[struct _ sep0] What are the opening year and staff number of the museum that has the most staff members ? [/struct _ sep0]| museum _ visit | museum : museum _ id, name, num _ of _ staff, open _ year | visitor : id, name, level _ of _ membership, age | visit : museum _ id, visitor _ id, num _ of _ ticket, total _ spent",
        "gold_natsql": "select museum.Num_of_Staff , museum.Open_Year from museum  order by museum.Num_of_Staff desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the opening year and staff number of the museum that were open before 2009 . [/struct _ sep0]| museum _ visit | museum : museum _ id, name, num _ of _ staff, open _ year | visitor : id, name, level _ of _ membership, age | visit : museum _ id, visitor _ id, num _ of _ ticket, total _ spent",
        "gold_natsql": "select museum.Num_of_Staff , museum.Open_Year from museum  where  museum.Open_Year < 2009 "
    },
    {
        "input": "[struct _ sep0] What are the opening year and staff number of the museum opened after 2010 . [/struct _ sep0]| museum _ visit | museum : museum _ id, name, num _ of _ staff, open _ year | visitor : id, name, level _ of _ membership, age | visit : museum _ id, visitor _ id, num _ of _ ticket, total _ spent",
        "gold_natsql": "select museum.Num_of_Staff , museum.Open_Year from museum  where  museum.Open_Year > 2010 "
    },
    {
        "input": "[struct _ sep0] What are the opening year and staff number of the museum that had no visitor yet ? [/struct _ sep0]| museum _ visit | museum : museum _ id, name, num _ of _ staff, open _ year | visitor : id, name, level _ of _ membership, age | visit : museum _ id, visitor _ id, num _ of _ ticket, total _ spent",
        "gold_natsql": "select museum.Num_of_Staff , museum.Open_Year from museum  where  @.@ not in visit.* "
    },
    {
        "input": "[struct _ sep0] find the id , name and age for visitors whose membership level is not higher than 4 ? [/struct _ sep0]| museum _ visit | museum : museum _ id, name, num _ of _ staff, open _ year | visitor : id, name, level _ of _ membership, age | visit : museum _ id, visitor _ id, num _ of _ ticket, total _ spent",
        "gold_natsql": "select visitor.ID , visitor.Name , visitor.Age from museum  where  visitor.Level_of_membership <= 4 "
    },
    {
        "input": "[struct _ sep0] What are the id , name and membership level of visitors whose membership level is not higher than 4 ? [/struct _ sep0]| museum _ visit | museum : museum _ id, name, num _ of _ staff, open _ year | visitor : id, name, level _ of _ membership, age | visit : museum _ id, visitor _ id, num _ of _ ticket, total _ spent",
        "gold_natsql": "select visitor.ID , visitor.Name , visitor.Level_of_membership from museum  where  visitor.Level_of_membership <= 4 "
    },
    {
        "input": "[struct _ sep0] What is the name of the museum that has the most staff members ? [/struct _ sep0]| museum _ visit | museum : museum _ id, name, num _ of _ staff, open _ year | visitor : id, name, level _ of _ membership, age | visit : museum _ id, visitor _ id, num _ of _ ticket, total _ spent",
        "gold_natsql": "select museum.Name from museum  order by museum.Num_of_Staff desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the name of the museum that were open before 2009 . [/struct _ sep0]| museum _ visit | museum : museum _ id, name, num _ of _ staff, open _ year | visitor : id, name, level _ of _ membership, age | visit : museum _ id, visitor _ id, num _ of _ ticket, total _ spent",
        "gold_natsql": "select museum.Name from museum  where  museum.Open_Year < 2009 "
    },
    {
        "input": "[struct _ sep0] What is the name of the museum named Plaza Museum ? [/struct _ sep0]| museum _ visit | museum : museum _ id, name ( Plaza Museum ), num _ of _ staff, open _ year | visitor : id, name, level _ of _ membership, age | visit : museum _ id, visitor _ id, num _ of _ ticket, total _ spent",
        "gold_natsql": "select museum.Name from museum  where  museum.Name = \"Plaza Museum\" "
    },
    {
        "input": "[struct _ sep0] What is the name of the museum opened after 2010 . [/struct _ sep0]| museum _ visit | museum : museum _ id, name, num _ of _ staff, open _ year | visitor : id, name, level _ of _ membership, age | visit : museum _ id, visitor _ id, num _ of _ ticket, total _ spent",
        "gold_natsql": "select museum.Name from museum  where  museum.Open_Year > 2010 "
    },
    {
        "input": "[struct _ sep0] Find the name and age of the visitor whose membership level is not higher than 4 ? [/struct _ sep0]| museum _ visit | museum : museum _ id, name, num _ of _ staff, open _ year | visitor : id, name, level _ of _ membership, age | visit : museum _ id, visitor _ id, num _ of _ ticket, total _ spent",
        "gold_natsql": "select visitor.Name , visitor.Age from museum  where  visitor.Level_of_membership <= 4 "
    },
    {
        "input": "[struct _ sep0] How many museums were opened after 2013 or named Plaza Museum ? [/struct _ sep0]| museum _ visit | museum : museum _ id, name ( Plaza Museum ), num _ of _ staff, open _ year | visitor : id, name, level _ of _ membership, age | visit : museum _ id, visitor _ id, num _ of _ ticket, total _ spent",
        "gold_natsql": "select count ( museum.* )  from museum  where  museum.Open_Year > 2013  or  museum.Name = \"Plaza Museum\" "
    },
    {
        "input": "[struct _ sep0] How many museums were opened after 2013 or opened after 2010 . [/struct _ sep0]| museum _ visit | museum : museum _ id, name, num _ of _ staff, open _ year | visitor : id, name, level _ of _ membership, age | visit : museum _ id, visitor _ id, num _ of _ ticket, total _ spent",
        "gold_natsql": "select count ( museum.* )  from museum  where  museum.Open_Year > 2013  or  museum.Open_Year > 2010 "
    },
    {
        "input": "[struct _ sep0] List the first name and birth date of all players in the order of birth date . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name ( Date ), hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.first_name , players.birth_date from players  order by players.birth_date asc"
    },
    {
        "input": "[struct _ sep0] List the first name and birth date of all players , sorted by birth date ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name ( Date ), hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.first_name , players.birth_date from players  order by players.birth_date asc"
    },
    {
        "input": "[struct _ sep0] List the first name and birth date of all players in the order of birth date . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name ( Date ), hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.first_name , players.birth_date from players  order by players.birth_date asc"
    },
    {
        "input": "[struct _ sep0] List the first name and birth date of all players in order of birth date ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name ( Date ), hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.first_name , players.birth_date from players  order by players.birth_date asc"
    },
    {
        "input": "[struct _ sep0] What are the first names and birth dates of players in the order of birth date . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.first_name , players.birth_date from players  order by players.birth_date asc"
    },
    {
        "input": "[struct _ sep0] What are the first names and birth dates of players , sorted by birth date ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.first_name , players.birth_date from players  order by players.birth_date asc"
    },
    {
        "input": "[struct _ sep0] What are the first names and birth dates of players in the order of birth date . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.first_name , players.birth_date from players  order by players.birth_date asc"
    },
    {
        "input": "[struct _ sep0] What are the first names and birth dates of players in order of birth date ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.first_name , players.birth_date from players  order by players.birth_date asc"
    },
    {
        "input": "[struct _ sep0] Find the name of tourney were played in 2013 or 2016 ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select matches.tourney_name from players  where  matches.year = 2013  or  matches.year = 2016 "
    },
    {
        "input": "[struct _ sep0] Find the name of tourney participated in the Australian Open tourney . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name ( Australian Open ), winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select matches.tourney_name from players  where  matches.tourney_name = \"Australian Open\" "
    },
    {
        "input": "[struct _ sep0] Find the name of tourney were left handed ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select matches.tourney_name from players  where  matches.winner_hand = \"L\" "
    },
    {
        "input": "[struct _ sep0] List the names of all winners participated in the Australian Open tourney . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name ( Australian Open ), winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select matches.winner_name from players  where  matches.tourney_name = \"Australian Open\" "
    },
    {
        "input": "[struct _ sep0] List the names of all winners who played in the match with greatest number of minutes . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select matches.winner_name from players  order by matches.minutes desc limit 1"
    },
    {
        "input": "[struct _ sep0] List the names of all winners were left handed ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select matches.winner_name from players  where  matches.winner_hand = \"L\" "
    },
    {
        "input": "[struct _ sep0] List the names of all winners who participated in the WTA Championships . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name ( WTA Championships ), winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select matches.winner_name from players  where  matches.tourney_name = \"WTA Championships\" "
    },
    {
        "input": "[struct _ sep0] List the number of all matches participated in the Australian Open tourney . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name ( Australian Open ), winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select count ( matches.* )  from players  where  matches.tourney_name = \"Australian Open\" "
    },
    {
        "input": "[struct _ sep0] List the number of all matches were left handed ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select count ( matches.* )  from players  where  matches.winner_hand = \"L\" "
    },
    {
        "input": "[struct _ sep0] List the first and last name of all players from the country with code USA . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name ( Last ), hand, birth _ date, country _ code ( USA ) | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc ( USA ), loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc ( USA ), winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.first_name , players.last_name from players  where  players.country_code = \"USA\" "
    },
    {
        "input": "[struct _ sep0] List the first and last name of all players from the USA ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name ( Last ), hand, birth _ date, country _ code ( USA ) | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc ( USA ), loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc ( USA ), winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.first_name , players.last_name from players  where  players.country_code = \"USA\" "
    },
    {
        "input": "[struct _ sep0] What are the full names of all players from the country with code USA . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code ( USA ) | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc ( USA ), loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc ( USA ), winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.first_name , players.last_name from players  where  players.country_code = \"USA\" "
    },
    {
        "input": "[struct _ sep0] What are the full names of all players from the USA ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code ( USA ) | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc ( USA ), loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc ( USA ), winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.first_name , players.last_name from players  where  players.country_code = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Find the first name and country code of the player from the country with code USA . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code ( USA ) | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc ( USA ), loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc ( USA ), winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.country_code , players.first_name from players  where  players.country_code = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Find the first name and country code of the player from the USA ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code ( USA ) | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc ( USA ), loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc ( USA ), winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.country_code , players.first_name from players  where  players.country_code = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Find the first name and country code of the player in the order of birth date . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name ( Date ), hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.country_code , players.first_name from players  order by players.birth_date asc"
    },
    {
        "input": "[struct _ sep0] Find the first name and country code of the player , sorted by birth date ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name ( Date ), hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.country_code , players.first_name from players  order by players.birth_date asc"
    },
    {
        "input": "[struct _ sep0] What is the first name and country code of the player from the country with code USA . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code ( USA ) | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc ( USA ), loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc ( USA ), winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.country_code , players.first_name from players  where  players.country_code = \"USA\" "
    },
    {
        "input": "[struct _ sep0] What is the first name and country code of the player from the USA ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code ( USA ) | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc ( USA ), loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc ( USA ), winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.country_code , players.first_name from players  where  players.country_code = \"USA\" "
    },
    {
        "input": "[struct _ sep0] What is the first name and country code of the player in the order of birth date . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name ( Date ), hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.country_code , players.first_name from players  order by players.birth_date asc"
    },
    {
        "input": "[struct _ sep0] What is the first name and country code of the player , sorted by birth date ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name ( Date ), hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.country_code , players.first_name from players  order by players.birth_date asc"
    },
    {
        "input": "[struct _ sep0] Find the year were played in 2013 or 2016 ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select matches.year from players  where  matches.year = 2013  or  matches.year = 2016 "
    },
    {
        "input": "[struct _ sep0] Find the year participated in the Australian Open tourney . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name ( Australian Open ), winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select matches.year from players  where  matches.tourney_name = \"Australian Open\" "
    },
    {
        "input": "[struct _ sep0] Find the year were left handed ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select matches.year from players  where  matches.winner_hand = \"L\" "
    },
    {
        "input": "[struct _ sep0] Find the name and rank points of the winner who played in both 2013 and 2016 . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select matches.winner_name , matches.winner_rank_points from players  where  matches.year = 2013  and  matches.year = 2016 "
    },
    {
        "input": "[struct _ sep0] Find the name and rank points of the winner were played in 2013 or 2016 ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select matches.winner_name , matches.winner_rank_points from players  where  matches.year = 2013  or  matches.year = 2016 "
    },
    {
        "input": "[struct _ sep0] Find the name and rank points of the winner participated in the Australian Open tourney . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name ( Australian Open ), winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select matches.winner_name , matches.winner_rank_points from players  where  matches.tourney_name = \"Australian Open\" "
    },
    {
        "input": "[struct _ sep0] Find the name and rank points of the winner who played in the match with greatest number of minutes . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select matches.winner_name , matches.winner_rank_points from players  order by matches.minutes desc limit 1"
    },
    {
        "input": "[struct _ sep0] Find the name and rank points of the winner were left handed ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select matches.winner_name , matches.winner_rank_points from players  where  matches.winner_hand = \"L\" "
    },
    {
        "input": "[struct _ sep0] Find the name and rank points of the winner who participated in the WTA Championships . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name ( WTA Championships ), winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select matches.winner_name , matches.winner_rank_points from players  where  matches.tourney_name = \"WTA Championships\" "
    },
    {
        "input": "[struct _ sep0] Find the name of the winner who has the highest rank points and were left handed ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select matches.winner_name from players  where  matches.winner_hand = \"L\"  order by matches.winner_rank_points desc limit 1"
    },
    {
        "input": "[struct _ sep0] find the names of loser and winner who played in both 2013 and 2016 . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select matches.winner_name , matches.loser_name from players  where  matches.year = 2013  and  matches.year = 2016 "
    },
    {
        "input": "[struct _ sep0] find the names of loser and winner were played in 2013 or 2016 ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select matches.winner_name , matches.loser_name from players  where  matches.year = 2013  or  matches.year = 2016 "
    },
    {
        "input": "[struct _ sep0] find the names of loser and winner participated in the Australian Open tourney . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name ( Australian Open ), winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select matches.winner_name , matches.loser_name from players  where  matches.tourney_name = \"Australian Open\" "
    },
    {
        "input": "[struct _ sep0] find the names of loser and winner were left handed ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select matches.winner_name , matches.loser_name from players  where  matches.winner_hand = \"L\" "
    },
    {
        "input": "[struct _ sep0] find the names of loser and winner who participated in the WTA Championships . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name ( WTA Championships ), winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select matches.winner_name , matches.loser_name from players  where  matches.tourney_name = \"WTA Championships\" "
    },
    {
        "input": "[struct _ sep0] find the code of the country in the order of birth date . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name ( Date ), hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.country_code from players  order by players.birth_date asc"
    },
    {
        "input": "[struct _ sep0] find the code of the country in the order of birth date . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name ( Date ), hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.country_code from players  order by players.birth_date asc"
    },
    {
        "input": "[struct _ sep0] find the code of the country in order of birth date ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name ( Date ), hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.country_code from players  order by players.birth_date asc"
    },
    {
        "input": "[struct _ sep0] find the code of the country that have more than 50 players . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.country_code from players  where  count ( players.* )  > 50  group by players.country_code "
    },
    {
        "input": "[struct _ sep0] find the code of the country with more than 50 players ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.country_code from players  where  count ( players.* )  > 50  group by players.country_code "
    },
    {
        "input": "[struct _ sep0] What is the code of the country in the order of birth date . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name ( Date ), hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.country_code from players  order by players.birth_date asc"
    },
    {
        "input": "[struct _ sep0] What is the code of the country in the order of birth date . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name ( Date ), hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.country_code from players  order by players.birth_date asc"
    },
    {
        "input": "[struct _ sep0] What is the code of the country in order of birth date ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name ( Date ), hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.country_code from players  order by players.birth_date asc"
    },
    {
        "input": "[struct _ sep0] What is the code of the country that have more than 50 players . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.country_code from players  where  count ( players.* )  > 50  group by players.country_code "
    },
    {
        "input": "[struct _ sep0] What is the code of the country with more than 50 players ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.country_code from players  where  count ( players.* )  > 50  group by players.country_code "
    },
    {
        "input": "[struct _ sep0] Find the codes of countries in the order of birth date . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name ( Date ), hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.country_code from players  order by players.birth_date asc"
    },
    {
        "input": "[struct _ sep0] Find the codes of countries in the order of birth date . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name ( Date ), hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.country_code from players  order by players.birth_date asc"
    },
    {
        "input": "[struct _ sep0] Find the codes of countries in order of birth date ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name ( Date ), hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.country_code from players  order by players.birth_date asc"
    },
    {
        "input": "[struct _ sep0] What are the codes of countries in the order of birth date . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name ( Date ), hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.country_code from players  order by players.birth_date asc"
    },
    {
        "input": "[struct _ sep0] What are the codes of countries in the order of birth date . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name ( Date ), hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.country_code from players  order by players.birth_date asc"
    },
    {
        "input": "[struct _ sep0] What are the codes of countries in order of birth date ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name ( Date ), hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.country_code from players  order by players.birth_date asc"
    },
    {
        "input": "[struct _ sep0] Find the number of left handed winners participated in the Australian Open tourney . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name ( Australian Open ), winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select count (  distinct matches.winner_name )  from players  where  matches.winner_hand = \"L\"  and  matches.tourney_name = \"Australian Open\" "
    },
    {
        "input": "[struct _ sep0] List the name and tonnage ended up being ' Captured ' ? [/struct _ sep0]| battle _ death | battle : id, name, date, bulgarian _ commander, latin _ commander, result | ship : lost _ in _ battle, id, name, tonnage, ship _ type, location, disposition _ of _ ship ( Captured ) | death : caused _ by _ ship _ id, id, note, killed, injured",
        "gold_natsql": "select ship.name , ship.tonnage from battle  where  ship.disposition_of_ship = \"Captured\" "
    },
    {
        "input": "[struct _ sep0] What are the name and results of the battles that lost any ' Brig ' type shipes ? [/struct _ sep0]| battle _ death | battle : id, name, date, bulgarian _ commander, latin _ commander, result | ship : lost _ in _ battle, id, name, tonnage, ship _ type ( Brig ), location, disposition _ of _ ship | death : caused _ by _ ship _ id, id, note, killed, injured",
        "gold_natsql": "select battle.name , battle.result from battle  where  ship.ship_type = \"Brig\" "
    },
    {
        "input": "[struct _ sep0] What are the name and results of the battles that has lost the ship named ' Lettice ' and the ship named ' HMS Atalanta ' [/struct _ sep0]| battle : id, name, date, bulgarian _ commander, latin _ commander, result | ship : lost _ in _ battle, id, name ( HMS Atalanta, Lettice ), tonnage, ship _ type, location, disposition _ of _ ship | death : caused _ by _ ship _ id, id, note, killed, injured",
        "gold_natsql": "select battle.name , battle.result from battle  where  ship.name = \"Lettice\"  and  ship.name = \"HMS Atalanta\" "
    },
    {
        "input": "[struct _ sep0] What are the different ids and names of the battles when the bulgarian commander is not ' Boril ' [/struct _ sep0]| battle : id, name, date, bulgarian _ commander ( Boril ), latin _ commander, result | ship : lost _ in _ battle, id, name, tonnage, ship _ type, location, disposition _ of _ ship | death : caused _ by _ ship _ id, id, note, killed, injured",
        "gold_natsql": "select  distinct battle.id , battle.name from battle  where  battle.bulgarian_commander != \"Boril\" "
    },
    {
        "input": "[struct _ sep0] What are the different ids and names of the battles that has lost the ship named ' Lettice ' and the ship named ' HMS Atalanta ' [/struct _ sep0]| battle : id, name, date, bulgarian _ commander, latin _ commander, result | ship : lost _ in _ battle, id, name ( HMS Atalanta, Lettice ), tonnage, ship _ type, location, disposition _ of _ ship | death : caused _ by _ ship _ id, id, note, killed, injured",
        "gold_natsql": "select  distinct battle.id , battle.name from battle  where  ship.name = \"Lettice\"  and  ship.name = \"HMS Atalanta\" "
    },
    {
        "input": "[struct _ sep0] List the name and date the battle when the bulgarian commander is not ' Boril ' [/struct _ sep0]| battle : id, name, date, bulgarian _ commander ( Boril ), latin _ commander, result | ship : lost _ in _ battle, id, name, tonnage, ship _ type, location, disposition _ of _ ship | death : caused _ by _ ship _ id, id, note, killed, injured",
        "gold_natsql": "select battle.name , battle.date from battle  where  battle.bulgarian_commander != \"Boril\" "
    },
    {
        "input": "[struct _ sep0] List the name and date the battle that lost any ' Brig ' type shipes ? [/struct _ sep0]| battle _ death | battle : id, name, date, bulgarian _ commander, latin _ commander, result | ship : lost _ in _ battle, id, name, tonnage, ship _ type ( Brig ), location, disposition _ of _ ship | death : caused _ by _ ship _ id, id, note, killed, injured",
        "gold_natsql": "select battle.name , battle.date from battle  where  ship.ship_type = \"Brig\" "
    },
    {
        "input": "[struct _ sep0] What is the name and id of the department whose name has the substring the computer ? [/struct _ sep0]| student _ transcripts _ tracking | addresses : address _ id, line _ 1, line _ 2, line _ 3, city, zip _ postcode, state _ province _ county, country, other _ address _ details | courses : course _ id, course _ name, course _ description, other _ details | departments : department _ id, department _ name, department _ description, other _ details | degree _ programs : degree _ program _ id, department _ id, degree _ summary _ name, degree _ summary _ description, other _ details | sections : section _ id, course _ id, section _ name, section _ description, other _ details | semesters : semester _ id, semester _ name, semester _ description, other _ details | students : student _ id, current _ address _ id, permanent _ address _ id, first _ name, middle _ name, last _ name, cell _ mobile _ number, email _ address, ssn, date _ first _ registered, date _ left, other _ student _ details | student _ enrolment : student _ enrolment _ id, degree _ program _ id, semester _ id, student _ id, other _ details | student _ enrolment _ courses : student _ course _ id, course _ id, student _ enrolment _ id | transcripts : transcript _ id, transcript _ date, other _ details | transcript _ contents : student _ course _ id, transcript _ id",
        "gold_natsql": "select departments.department_name , departments.department_id from addresses  where  departments.department_name like \"%computer%\" "
    },
    {
        "input": "[struct _ sep0] List the section_name named h ? [/struct _ sep0]| student _ transcripts _ tracking | addresses : address _ id, line _ 1, line _ 2, line _ 3, city, zip _ postcode, state _ province _ county, country, other _ address _ details | courses : course _ id, course _ name, course _ description, other _ details | departments : department _ id, department _ name, department _ description, other _ details | degree _ programs : degree _ program _ id, department _ id, degree _ summary _ name, degree _ summary _ description, other _ details | sections : section _ id, course _ id, section _ name, section _ description, other _ details | semesters : semester _ id, semester _ name, semester _ description, other _ details | students : student _ id, current _ address _ id, permanent _ address _ id, first _ name, middle _ name, last _ name, cell _ mobile _ number, email _ address, ssn, date _ first _ registered, date _ left, other _ student _ details | student _ enrolment : student _ enrolment _ id, degree _ program _ id, semester _ id, student _ id, other _ details | student _ enrolment _ courses : student _ course _ id, course _ id, student _ enrolment _ id | transcripts : transcript _ id, transcript _ date, other _ details | transcript _ contents : student _ course _ id, transcript _ id",
        "gold_natsql": "select sections.section_name from addresses  where  sections.section_name = \"h\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the sections named h ? [/struct _ sep0]| student _ transcripts _ tracking | addresses : address _ id, line _ 1, line _ 2, line _ 3, city, zip _ postcode, state _ province _ county, country, other _ address _ details | courses : course _ id, course _ name, course _ description, other _ details | departments : department _ id, department _ name, department _ description, other _ details | degree _ programs : degree _ program _ id, department _ id, degree _ summary _ name, degree _ summary _ description, other _ details | sections : section _ id, course _ id, section _ name, section _ description, other _ details | semesters : semester _ id, semester _ name, semester _ description, other _ details | students : student _ id, current _ address _ id, permanent _ address _ id, first _ name, middle _ name, last _ name, cell _ mobile _ number, email _ address, ssn, date _ first _ registered, date _ left, other _ student _ details | student _ enrolment : student _ enrolment _ id, degree _ program _ id, semester _ id, student _ id, other _ details | student _ enrolment _ courses : student _ course _ id, course _ id, student _ enrolment _ id | transcripts : transcript _ id, transcript _ date, other _ details | transcript _ contents : student _ course _ id, transcript _ id",
        "gold_natsql": "select sections.section_name from addresses  where  sections.section_name = \"h\" "
    },
    {
        "input": "[struct _ sep0] What are the first , middle , and last names , along with the ids , of all students named Timmothy Ward ? [/struct _ sep0]| student _ transcripts _ tracking | addresses : address _ id, line _ 1, line _ 2, line _ 3, city, zip _ postcode, state _ province _ county, country, other _ address _ details | courses : course _ id, course _ name, course _ description, other _ details | departments : department _ id, department _ name, department _ description, other _ details | degree _ programs : degree _ program _ id, department _ id, degree _ summary _ name, degree _ summary _ description, other _ details | sections : section _ id, course _ id, section _ name, section _ description, other _ details | semesters : semester _ id, semester _ name, semester _ description, other _ details | students : student _ id, current _ address _ id, permanent _ address _ id, first _ name ( Timmothy ), middle _ name, last _ name ( Ward ), cell _ mobile _ number, email _ address, ssn, date _ first _ registered, date _ left, other _ student _ details | student _ enrolment : student _ enrolment _ id, degree _ program _ id, semester _ id, student _ id, other _ details | student _ enrolment _ courses : student _ course _ id, course _ id, student _ enrolment _ id | transcripts : transcript _ id, transcript _ date, other _ details | transcript _ contents : student _ course",
        "gold_natsql": "select students.first_name , students.middle_name , students.last_name , students.student_id from addresses  where  students.first_name = \"Timmothy\"  and  students.last_name = \"Ward\" "
    },
    {
        "input": "[struct _ sep0] What is the date and id of the transcript with at least 2 course results . [/struct _ sep0]| student _ transcripts _ tracking | addresses : address _ id, line _ 1, line _ 2, line _ 3, city, zip _ postcode, state _ province _ county, country, other _ address _ details | courses : course _ id, course _ name, course _ description, other _ details | departments : department _ id, department _ name, department _ description, other _ details | degree _ programs : degree _ program _ id, department _ id, degree _ summary _ name, degree _ summary _ description, other _ details | sections : section _ id, course _ id, section _ name, section _ description, other _ details | semesters : semester _ id, semester _ name, semester _ description, other _ details | students : student _ id, current _ address _ id, permanent _ address _ id, first _ name, middle _ name, last _ name, cell _ mobile _ number, email _ address, ssn, date _ first _ registered, date _ left, other _ student _ details | student _ enrolment : student _ enrolment _ id, degree _ program _ id, semester _ id, student _ id, other _ details | student _ enrolment _ courses : student _ course _ id, course _ id, student _ enrolment _ id | transcripts : transcript _ id, transcript _ date, other _ details | transcript _ contents : student _ course _ id, transcript _ id",
        "gold_natsql": "select transcripts.transcript_date , transcript_contents.transcript_id from addresses  where  count ( transcripts.* )  >= 2  group by transcript_contents.transcript_id "
    },
    {
        "input": "[struct _ sep0] What is the date and id of the transcript with at least 2 courses listed ? [/struct _ sep0]| student _ transcripts _ tracking | addresses : address _ id, line _ 1, line _ 2, line _ 3, city, zip _ postcode, state _ province _ county, country, other _ address _ details | courses : course _ id, course _ name, course _ description, other _ details | departments : department _ id, department _ name, department _ description, other _ details | degree _ programs : degree _ program _ id, department _ id, degree _ summary _ name, degree _ summary _ description, other _ details | sections : section _ id, course _ id, section _ name, section _ description, other _ details | semesters : semester _ id, semester _ name, semester _ description, other _ details | students : student _ id, current _ address _ id, permanent _ address _ id, first _ name, middle _ name, last _ name, cell _ mobile _ number, email _ address, ssn, date _ first _ registered, date _ left, other _ student _ details | student _ enrolment : student _ enrolment _ id, degree _ program _ id, semester _ id, student _ id, other _ details | student _ enrolment _ courses : student _ course _ id, course _ id, student _ enrolment _ id | transcripts : transcript _ id, transcript _ date, other _ details | transcript _ contents : student _ course _ id, transcript _ id",
        "gold_natsql": "select transcripts.transcript_date , transcript_contents.transcript_id from addresses  where  count ( transcripts.* )  >= 2  group by transcript_contents.transcript_id "
    },
    {
        "input": "[struct _ sep0] What is the description for the section in reversed lexicographical order . [/struct _ sep0]| student _ transcripts _ tracking | addresses : address _ id, line _ 1, line _ 2, line _ 3, city, zip _ postcode, state _ province _ county, country, other _ address _ details | courses : course _ id, course _ name, course _ description, other _ details | departments : department _ id, department _ name, department _ description, other _ details | degree _ programs : degree _ program _ id, department _ id, degree _ summary _ name, degree _ summary _ description, other _ details | sections : section _ id, course _ id, section _ name, section _ description, other _ details | semesters : semester _ id, semester _ name, semester _ description, other _ details | students : student _ id, current _ address _ id, permanent _ address _ id, first _ name, middle _ name, last _ name, cell _ mobile _ number, email _ address, ssn, date _ first _ registered, date _ left, other _ student _ details | student _ enrolment : student _ enrolment _ id, degree _ program _ id, semester _ id, student _ id, other _ details | student _ enrolment _ courses : student _ course _ id, course _ id, student _ enrolment _ id | transcripts : transcript _ id, transcript _ date, other _ details | transcript _ contents : student _ course _ id, transcript _ id",
        "gold_natsql": "select sections.section_description from addresses  order by sections.section_name desc"
    },
    {
        "input": "[struct _ sep0] What is the description for the section in reverse alphabetical order ? [/struct _ sep0]| student _ transcripts _ tracking | addresses : address _ id, line _ 1, line _ 2, line _ 3, city, zip _ postcode, state _ province _ county, country, other _ address _ details | courses : course _ id, course _ name, course _ description, other _ details | departments : department _ id, department _ name, department _ description, other _ details | degree _ programs : degree _ program _ id, department _ id, degree _ summary _ name, degree _ summary _ description, other _ details | sections : section _ id, course _ id, section _ name, section _ description, other _ details | semesters : semester _ id, semester _ name, semester _ description, other _ details | students : student _ id, current _ address _ id, permanent _ address _ id, first _ name, middle _ name, last _ name, cell _ mobile _ number, email _ address, ssn, date _ first _ registered, date _ left, other _ student _ details | student _ enrolment : student _ enrolment _ id, degree _ program _ id, semester _ id, student _ id, other _ details | student _ enrolment _ courses : student _ course _ id, course _ id, student _ enrolment _ id | transcripts : transcript _ id, transcript _ date, other _ details | transcript _ contents : student _ course _ id, transcript _ id",
        "gold_natsql": "select sections.section_description from addresses  order by sections.section_name desc"
    },
    {
        "input": "[struct _ sep0] List the title of all cartoons directed by Ben Jones ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title from tv_channel  where  cartoon.Directed_by = \"Ben Jones\" "
    },
    {
        "input": "[struct _ sep0] List the title of all cartoons were written by ' Joseph Kuhr ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by ( Joseph Kuhr ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title from tv_channel  where  cartoon.Written_by = \"Joseph Kuhr\" "
    },
    {
        "input": "[struct _ sep0] List the title of all cartoons written by Joseph Kuhr ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by ( Joseph Kuhr ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title from tv_channel  where  cartoon.Written_by = \"Joseph Kuhr\" "
    },
    {
        "input": "[struct _ sep0] List the title of all cartoons ordered by their air date [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title from tv_channel  order by cartoon.Original_air_date asc"
    },
    {
        "input": "[struct _ sep0] List the title of all cartoons that are ordered by air date ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title from tv_channel  order by cartoon.Original_air_date asc"
    },
    {
        "input": "[struct _ sep0] List the title of all cartoons directed by ' Ben Jones ' or ' Brandon Vietti ' . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Brandon Vietti, Ben Jones ), written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title from tv_channel  where  cartoon.Directed_by = \"Ben Jones\"  or  cartoon.Directed_by = \"Brandon Vietti\" "
    },
    {
        "input": "[struct _ sep0] List the title of all cartoons directed by Ben Jones or Brandon Vietti ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Brandon Vietti, Ben Jones ), written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title from tv_channel  where  cartoon.Directed_by = \"Ben Jones\"  or  cartoon.Directed_by = \"Brandon Vietti\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all cartoons in alphabetical order . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title from tv_channel  order by cartoon.Title asc"
    },
    {
        "input": "[struct _ sep0] What are the names of all cartoons were written by ' Joseph Kuhr ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by ( Joseph Kuhr ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title from tv_channel  where  cartoon.Written_by = \"Joseph Kuhr\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all cartoons that are ordered by air date ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title from tv_channel  order by cartoon.Original_air_date asc"
    },
    {
        "input": "[struct _ sep0] How many cartoons directed by Ben Jones ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select count ( cartoon.* )  from tv_channel  where  cartoon.Directed_by = \"Ben Jones\" "
    },
    {
        "input": "[struct _ sep0] How many cartoons directed by ' Ben Jones ' or ' Brandon Vietti ' . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Brandon Vietti, Ben Jones ), written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select count ( cartoon.* )  from tv_channel  where  cartoon.Directed_by = \"Ben Jones\"  or  cartoon.Directed_by = \"Brandon Vietti\" "
    },
    {
        "input": "[struct _ sep0] How many cartoons directed by Ben Jones or Brandon Vietti ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Brandon Vietti, Ben Jones ), written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select count ( cartoon.* )  from tv_channel  where  cartoon.Directed_by = \"Ben Jones\"  or  cartoon.Directed_by = \"Brandon Vietti\" "
    },
    {
        "input": "[struct _ sep0] list all cartoon titles and their directors in alphabetical order . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title , cartoon.Directed_by from tv_channel  order by cartoon.Title asc"
    },
    {
        "input": "[struct _ sep0] list all cartoon titles and their directors directed by Ben Jones ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title , cartoon.Directed_by from tv_channel  where  cartoon.Directed_by = \"Ben Jones\" "
    },
    {
        "input": "[struct _ sep0] list all cartoon titles and their directors were written by ' Joseph Kuhr ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by ( Joseph Kuhr ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title , cartoon.Directed_by from tv_channel  where  cartoon.Written_by = \"Joseph Kuhr\" "
    },
    {
        "input": "[struct _ sep0] list all cartoon titles and their directors written by Joseph Kuhr ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by ( Joseph Kuhr ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title , cartoon.Directed_by from tv_channel  where  cartoon.Written_by = \"Joseph Kuhr\" "
    },
    {
        "input": "[struct _ sep0] list all cartoon titles and their directors directed by ' Ben Jones ' or ' Brandon Vietti ' . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Brandon Vietti, Ben Jones ), written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title , cartoon.Directed_by from tv_channel  where  cartoon.Directed_by = \"Ben Jones\"  or  cartoon.Directed_by = \"Brandon Vietti\" "
    },
    {
        "input": "[struct _ sep0] What is the name and directors of all the cartoons in alphabetical order . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title , cartoon.Directed_by from tv_channel  order by cartoon.Title asc"
    },
    {
        "input": "[struct _ sep0] What is the name and directors of all the cartoons directed by Ben Jones ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title , cartoon.Directed_by from tv_channel  where  cartoon.Directed_by = \"Ben Jones\" "
    },
    {
        "input": "[struct _ sep0] What is the name and directors of all the cartoons were written by ' Joseph Kuhr ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by ( Joseph Kuhr ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title , cartoon.Directed_by from tv_channel  where  cartoon.Written_by = \"Joseph Kuhr\" "
    },
    {
        "input": "[struct _ sep0] What is the name and directors of all the cartoons directed by ' Ben Jones ' or ' Brandon Vietti ' . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Brandon Vietti, Ben Jones ), written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title , cartoon.Directed_by from tv_channel  where  cartoon.Directed_by = \"Ben Jones\"  or  cartoon.Directed_by = \"Brandon Vietti\" "
    },
    {
        "input": "[struct _ sep0] What is the name and directors of all the cartoons directed by Ben Jones or Brandon Vietti ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Brandon Vietti, Ben Jones ), written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title , cartoon.Directed_by from tv_channel  where  cartoon.Directed_by = \"Ben Jones\"  or  cartoon.Directed_by = \"Brandon Vietti\" "
    },
    {
        "input": "[struct _ sep0] List the title of all cartoon in alphabetical order . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title from tv_channel  order by cartoon.Title asc"
    },
    {
        "input": "[struct _ sep0] List the title of all cartoon were written by ' Joseph Kuhr ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by ( Joseph Kuhr ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title from tv_channel  where  cartoon.Written_by = \"Joseph Kuhr\" "
    },
    {
        "input": "[struct _ sep0] List the title of all cartoon written by Joseph Kuhr ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by ( Joseph Kuhr ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title from tv_channel  where  cartoon.Written_by = \"Joseph Kuhr\" "
    },
    {
        "input": "[struct _ sep0] List the title of all cartoon ordered by their air date [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title from tv_channel  order by cartoon.Original_air_date asc"
    },
    {
        "input": "[struct _ sep0] List the title of all cartoon that are ordered by air date ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title from tv_channel  order by cartoon.Original_air_date asc"
    },
    {
        "input": "[struct _ sep0] What are the titles of all cartoons in alphabetical order . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title from tv_channel  order by cartoon.Title asc"
    },
    {
        "input": "[struct _ sep0] What are the titles of all cartoons were written by ' Joseph Kuhr ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by ( Joseph Kuhr ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title from tv_channel  where  cartoon.Written_by = \"Joseph Kuhr\" "
    },
    {
        "input": "[struct _ sep0] What are the titles of all cartoons that are ordered by air date ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title from tv_channel  order by cartoon.Original_air_date asc"
    },
    {
        "input": "[struct _ sep0] What is the content of TV Channel using language English ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Content from tv_channel  where  tv_channel.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] What is the content of TV Channel that supports high definition TV ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Content from tv_channel  where  tv_channel.Hight_definition_TV = \"yes\" "
    },
    {
        "input": "[struct _ sep0] What is the Package Option of TV Channel using language English ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option ( Option ) | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option from tv_channel  where  tv_channel.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] What is the Package Option of TV Channel that supports high definition TV ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option ( Option ) | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option from tv_channel  where  tv_channel.Hight_definition_TV = \"yes\" "
    },
    {
        "input": "[struct _ sep0] What are the Package Options of the TV Channels use the English language ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option ( Option ) | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option from tv_channel  where  tv_channel.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] How many TV Channel with serial name ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select count ( tv_channel.* )  from tv_channel  where  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] How many TV Channel with serial name ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select count ( tv_channel.* )  from tv_channel  where  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] How many TV Channel that supports high definition TV ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select count ( tv_channel.* )  from tv_channel  where  tv_channel.Hight_definition_TV = \"yes\" "
    },
    {
        "input": "[struct _ sep0] How many TV Channels with serial name ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select count ( tv_channel.* )  from tv_channel  where  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] How many TV Channels with serial name ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select count ( tv_channel.* )  from tv_channel  where  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] How many TV Channels whose series names are Sky Radio ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select count ( tv_channel.* )  from tv_channel  where  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] List the Episode of all TV series with Episode ' A Love of a Lifetime ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_series.Episode from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\" "
    },
    {
        "input": "[struct _ sep0] List the Episode of all TV series with Episode ' A Love of a Lifetime ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_series.Episode from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\" "
    },
    {
        "input": "[struct _ sep0] List the Episode of all TV series named ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_series.Episode from tv_channel  where  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] What are all of the episodes with Episode ' A Love of a Lifetime ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_series.Episode from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\" "
    },
    {
        "input": "[struct _ sep0] What are all of the episodes with Episode ' A Love of a Lifetime ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_series.Episode from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\" "
    },
    {
        "input": "[struct _ sep0] What is the air date of TV series sorted by rating . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_series.Air_Date from tv_channel  order by tv_series.Rating asc"
    },
    {
        "input": "[struct _ sep0] What is the air date of TV series named ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_series.Air_Date from tv_channel  where  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] What is Weekly Rank of TV series sorted by rating . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_series.Weekly_Rank from tv_channel  order by tv_series.Rating asc"
    },
    {
        "input": "[struct _ sep0] What is Weekly Rank of TV series named ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_series.Weekly_Rank from tv_channel  where  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] What is the episode for the TV series sorted by rating . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_series.Episode from tv_channel  order by tv_series.Rating asc"
    },
    {
        "input": "[struct _ sep0] What is the episode for the TV series with Episode ' A Love of a Lifetime ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_series.Episode from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\" "
    },
    {
        "input": "[struct _ sep0] What is the episode for the TV series with Episode ' A Love of a Lifetime ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_series.Episode from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\" "
    },
    {
        "input": "[struct _ sep0] Find the package choice and series name of the TV channel with serial name ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option , tv_channel.series_name from tv_channel  where  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] Find the package choice and series name of the TV channel with serial name ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option , tv_channel.series_name from tv_channel  where  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] Find the package choice and series name of the TV channel using language English ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option , tv_channel.series_name from tv_channel  where  tv_channel.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] Find the package choice and series name of the TV channel use the English language ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option , tv_channel.series_name from tv_channel  where  tv_channel.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] Find the package choice and series name of the TV channel are playing some cartoon written by Todd Casey ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option , tv_channel.series_name from tv_channel  where  cartoon.Written_by = \"Todd Casey\" "
    },
    {
        "input": "[struct _ sep0] Find the package choice and series name of the TV channel that do not use English . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option , tv_channel.series_name from tv_channel  where  tv_channel.Language != \"English\" "
    },
    {
        "input": "[struct _ sep0] Find the package choice and series name of the TV channel that do not use English ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option , tv_channel.series_name from tv_channel  where  tv_channel.Language != \"English\" "
    },
    {
        "input": "[struct _ sep0] Find the package choice and series name of the TV channel that do not have any cartoons directed by Ben Jones ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option , tv_channel.series_name from tv_channel  where  except_  @.@ is cartoon.*  and  cartoon.Directed_by = \"Ben Jones\" "
    },
    {
        "input": "[struct _ sep0] Find the package choice and series name of the TV channel that do not have any cartoon directed by Ben Jones . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option , tv_channel.series_name from tv_channel  where  @.@ not in cartoon.*  and  cartoon.Directed_by = \"Ben Jones\" "
    },
    {
        "input": "[struct _ sep0] What are the package options and the name of the series for the TV Channel with serial name ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option ( Option ) | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option , tv_channel.series_name from tv_channel  where  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] What are the package options and the name of the series for the TV Channel with serial name ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option ( Option ) | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option , tv_channel.series_name from tv_channel  where  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] What are the package options and the name of the series for the TV Channel using language English ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option ( Option ) | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option , tv_channel.series_name from tv_channel  where  tv_channel.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] which countries ' tv channels that has high definition TV . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Country from tv_channel  where  tv_channel.Hight_definition_TV = \"yes\" "
    },
    {
        "input": "[struct _ sep0] which countries ' tv channels that do not use English . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Country from tv_channel  where  tv_channel.Language != \"English\" "
    },
    {
        "input": "[struct _ sep0] which countries ' tv channels that do not use English ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Country from tv_channel  where  tv_channel.Language != \"English\" "
    },
    {
        "input": "[struct _ sep0] which countries ' tv channels that do not have any cartoons directed by Ben Jones ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Country from tv_channel  where  except_  @.@ is cartoon.*  and  cartoon.Directed_by = \"Ben Jones\" "
    },
    {
        "input": "[struct _ sep0] which countries ' tv channels that do not have any cartoon directed by Ben Jones . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Country from tv_channel  where  @.@ not in cartoon.*  and  cartoon.Directed_by = \"Ben Jones\" "
    },
    {
        "input": "[struct _ sep0] Find the series name and country of the tv channel that is playing some cartoons written by Todd Casey ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.series_name , tv_channel.Country from tv_channel  where  cartoon.Written_by = \"Todd Casey\" "
    },
    {
        "input": "[struct _ sep0] Find the series name and country of the tv channel that is playing some cartoons written by Todd Casey ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.series_name , tv_channel.Country from tv_channel  where  cartoon.Written_by = \"Todd Casey\" "
    },
    {
        "input": "[struct _ sep0] What is the series name and country of all TV channels that are playing cartoons written by Todd Casey ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.series_name , tv_channel.Country from tv_channel  where  cartoon.Written_by = \"Todd Casey\" "
    },
    {
        "input": "[struct _ sep0] What is the series name and country of all TV channels that are playing cartoons written by Todd Casey ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.series_name , tv_channel.Country from tv_channel  where  cartoon.Written_by = \"Todd Casey\" "
    },
    {
        "input": "[struct _ sep0] find the pixel aspect ratio and nation of the tv channels with serial name ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] find the pixel aspect ratio and nation of the tv channels with serial name ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] find the pixel aspect ratio and nation of the tv channels using language English ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  tv_channel.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] find the pixel aspect ratio and nation of the tv channels use the English language ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  tv_channel.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] find the pixel aspect ratio and nation of the tv channels that has high definition TV . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  tv_channel.Hight_definition_TV = \"yes\" "
    },
    {
        "input": "[struct _ sep0] find the pixel aspect ratio and nation of the tv channels are playing some cartoon written by Todd Casey ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  cartoon.Written_by = \"Todd Casey\" "
    },
    {
        "input": "[struct _ sep0] find the pixel aspect ratio and nation of the tv channels that do not have any cartoons directed by Ben Jones ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  except_  @.@ is cartoon.*  and  cartoon.Directed_by = \"Ben Jones\" "
    },
    {
        "input": "[struct _ sep0] find the pixel aspect ratio and nation of the tv channels that do not have any cartoon directed by Ben Jones . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  @.@ not in cartoon.*  and  cartoon.Directed_by = \"Ben Jones\" "
    },
    {
        "input": "[struct _ sep0] What is the pixel aspect ratio and country of origin for all TV channels with serial name ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] What is the pixel aspect ratio and country of origin for all TV channels with serial name ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] What is the pixel aspect ratio and country of origin for all TV channels that has high definition TV . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  tv_channel.Hight_definition_TV = \"yes\" "
    },
    {
        "input": "[struct _ sep0] What is the pixel aspect ratio and country of origin for all TV channels are playing some cartoon written by Todd Casey ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  cartoon.Written_by = \"Todd Casey\" "
    },
    {
        "input": "[struct _ sep0] What is the pixel aspect ratio and country of origin for all TV channels that do not have any cartoons directed by Ben Jones ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  except_  @.@ is cartoon.*  and  cartoon.Directed_by = \"Ben Jones\" "
    },
    {
        "input": "[struct _ sep0] What is the pixel aspect ratio and country of origin for all TV channels that do not have any cartoon directed by Ben Jones . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  @.@ not in cartoon.*  and  cartoon.Directed_by = \"Ben Jones\" "
    },
    {
        "input": "[struct _ sep0] find id of the tv channels that with serial name ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.id from tv_channel  where  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] find id of the tv channels that with serial name ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.id from tv_channel  where  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] find id of the tv channels that using language English ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.id from tv_channel  where  tv_channel.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] find id of the tv channels that use the English language ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.id from tv_channel  where  tv_channel.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] What are the ids of all tv channels with serial name ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.id from tv_channel  where  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] What are the ids of all tv channels with serial name ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.id from tv_channel  where  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] What are the ids of all tv channels that has high definition TV . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.id from tv_channel  where  tv_channel.Hight_definition_TV = \"yes\" "
    },
    {
        "input": "[struct _ sep0] What are the ids of all tv channels are playing some cartoon written by Todd Casey ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.id from tv_channel  where  cartoon.Written_by = \"Todd Casey\" "
    },
    {
        "input": "[struct _ sep0] What are the ids of all tv channels that do not use English . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.id from tv_channel  where  tv_channel.Language != \"English\" "
    },
    {
        "input": "[struct _ sep0] What are the ids of all tv channels that do not use English ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.id from tv_channel  where  tv_channel.Language != \"English\" "
    },
    {
        "input": "[struct _ sep0] What are the ids of all tv channels that do not have any cartoons directed by Ben Jones ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.id from tv_channel  where  except_  @.@ is cartoon.*  and  cartoon.Directed_by = \"Ben Jones\" "
    },
    {
        "input": "[struct _ sep0] What are the ids of all tv channels that do not have any cartoon directed by Ben Jones . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.id from tv_channel  where  @.@ not in cartoon.*  and  cartoon.Directed_by = \"Ben Jones\" "
    },
    {
        "input": "[struct _ sep0] What are the ids of the TV channels with serial name ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.id from tv_channel  where  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] What are the ids of the TV channels with serial name ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.id from tv_channel  where  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] What are the ids of the TV channels that has high definition TV . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.id from tv_channel  where  tv_channel.Hight_definition_TV = \"yes\" "
    },
    {
        "input": "[struct _ sep0] What are the ids of the TV channels are playing some cartoon written by Todd Casey ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.id from tv_channel  where  cartoon.Written_by = \"Todd Casey\" "
    },
    {
        "input": "[struct _ sep0] What are the ids of the TV channels that do not use English . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.id from tv_channel  where  tv_channel.Language != \"English\" "
    },
    {
        "input": "[struct _ sep0] What are the ids of the TV channels that do not use English ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.id from tv_channel  where  tv_channel.Language != \"English\" "
    },
    {
        "input": "[struct _ sep0] find the package option of the tv channel with serial name ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option ( Option ) | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option from tv_channel  where  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] find the package option of the tv channel with serial name ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option ( Option ) | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option from tv_channel  where  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] find the package option of the tv channel using language English ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option ( Option ) | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option from tv_channel  where  tv_channel.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] find the package option of the tv channel use the English language ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option ( Option ) | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option from tv_channel  where  tv_channel.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] find the package option of the tv channel that has high definition TV . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option ( Option ) | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option from tv_channel  where  tv_channel.Hight_definition_TV = \"yes\" "
    },
    {
        "input": "[struct _ sep0] find the package option of the tv channel are playing some cartoon written by Todd Casey ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option ( Option ) | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option from tv_channel  where  cartoon.Written_by = \"Todd Casey\" "
    },
    {
        "input": "[struct _ sep0] find the package option of the tv channel that do not use English . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option ( Option ) | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option from tv_channel  where  tv_channel.Language != \"English\" "
    },
    {
        "input": "[struct _ sep0] find the package option of the tv channel that do not use English ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option ( Option ) | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option from tv_channel  where  tv_channel.Language != \"English\" "
    },
    {
        "input": "[struct _ sep0] What is the money rank of the poker player with earnings less than 200000 ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select poker_player.Money_Rank from poker_player  where  poker_player.Earnings < 200000 "
    },
    {
        "input": "[struct _ sep0] What is the money rank of the poker player who have earnings below 200000 . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select poker_player.Money_Rank from poker_player  where  poker_player.Earnings < 200000 "
    },
    {
        "input": "[struct _ sep0] What is the money rank of the poker player with height higher than 200 ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select poker_player.Money_Rank from poker_player  where  people.Height > 200 "
    },
    {
        "input": "[struct _ sep0] What is the money rank of the poker player who are taller than 200 . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select poker_player.Money_Rank from poker_player  where  people.Height > 200 "
    },
    {
        "input": "[struct _ sep0] Return the money rank of the player with earnings less than 200000 ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select poker_player.Money_Rank from poker_player  where  poker_player.Earnings < 200000 "
    },
    {
        "input": "[struct _ sep0] Return the money rank of the player who have earnings below 200000 . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select poker_player.Money_Rank from poker_player  where  poker_player.Earnings < 200000 "
    },
    {
        "input": "[struct _ sep0] Return the money rank of the player with height higher than 200 ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select poker_player.Money_Rank from poker_player  where  people.Height > 200 "
    },
    {
        "input": "[struct _ sep0] Return the money rank of the player who are taller than 200 . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select poker_player.Money_Rank from poker_player  where  people.Height > 200 "
    },
    {
        "input": "[struct _ sep0] What is the maximum number of final tables made among poker players with height higher than 200 ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select max ( poker_player.Final_Table_Made )  from poker_player  where  people.Height > 200 "
    },
    {
        "input": "[struct _ sep0] What is the maximum number of final tables made among poker players who are taller than 200 . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select max ( poker_player.Final_Table_Made )  from poker_player  where  people.Height > 200 "
    },
    {
        "input": "[struct _ sep0] Return the maximum final tables made across all poker players with height higher than 200 ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select max ( poker_player.Final_Table_Made )  from poker_player  where  people.Height > 200 "
    },
    {
        "input": "[struct _ sep0] Return the maximum final tables made across all poker players who are taller than 200 . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select max ( poker_player.Final_Table_Made )  from poker_player  where  people.Height > 200 "
    },
    {
        "input": "[struct _ sep0] What is the birth date of the poker player whose earnings is higher than 300000 ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select people.Birth_Date from poker_player  where  poker_player.Earnings > 300000 "
    },
    {
        "input": "[struct _ sep0] What is the birth date of the poker player who have earnings above 300000 . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select people.Birth_Date from poker_player  where  poker_player.Earnings > 300000 "
    },
    {
        "input": "[struct _ sep0] Return the birth date of the poker player whose earnings is higher than 300000 ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select people.Birth_Date from poker_player  where  poker_player.Earnings > 300000 "
    },
    {
        "input": "[struct _ sep0] Return the birth date of the poker player who have earnings above 300000 . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select people.Birth_Date from poker_player  where  poker_player.Earnings > 300000 "
    },
    {
        "input": "[struct _ sep0] Return the money rank of the poker player with the highest earnings ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select poker_player.Money_Rank from poker_player  order by poker_player.Earnings desc limit 1"
    },
    {
        "input": "[struct _ sep0] Return the money rank of the poker player with the greatest earnings . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select poker_player.Money_Rank from poker_player  order by poker_player.Earnings desc limit 1"
    },
    {
        "input": "[struct _ sep0] Return the money rank of the poker player with earnings less than 200000 ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select poker_player.Money_Rank from poker_player  where  poker_player.Earnings < 200000 "
    },
    {
        "input": "[struct _ sep0] Return the money rank of the poker player who have earnings below 200000 . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select poker_player.Money_Rank from poker_player  where  poker_player.Earnings < 200000 "
    },
    {
        "input": "[struct _ sep0] Return the money rank of the poker player with height higher than 200 ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select poker_player.Money_Rank from poker_player  where  people.Height > 200 "
    },
    {
        "input": "[struct _ sep0] Return the money rank of the poker player who are taller than 200 . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select poker_player.Money_Rank from poker_player  where  people.Height > 200 "
    },
    {
        "input": "[struct _ sep0] What is the average earnings of poker players with earnings less than 200000 ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select avg ( poker_player.Earnings )  from poker_player  where  poker_player.Earnings < 200000 "
    },
    {
        "input": "[struct _ sep0] What is the average earnings of poker players who have earnings below 200000 . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select avg ( poker_player.Earnings )  from poker_player  where  poker_player.Earnings < 200000 "
    },
    {
        "input": "[struct _ sep0] Give average earnings of poker players with earnings less than 200000 ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select avg ( poker_player.Earnings )  from poker_player  where  poker_player.Earnings < 200000 "
    },
    {
        "input": "[struct _ sep0] Give average earnings of poker players who have earnings below 200000 . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select avg ( poker_player.Earnings )  from poker_player  where  poker_player.Earnings < 200000 "
    },
    {
        "input": "[struct _ sep0] What are the names of poker players whose earnings is higher than 300000 ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select people.Name from poker_player  where  poker_player.Earnings > 300000 "
    },
    {
        "input": "[struct _ sep0] What are the names of poker players who have earnings above 300000 . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select people.Name from poker_player  where  poker_player.Earnings > 300000 "
    },
    {
        "input": "[struct _ sep0] Return the names of poker players whose earnings is higher than 300000 ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select people.Name from poker_player  where  poker_player.Earnings > 300000 "
    },
    {
        "input": "[struct _ sep0] Return the names of poker players who have earnings above 300000 . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select people.Name from poker_player  where  poker_player.Earnings > 300000 "
    },
    {
        "input": "[struct _ sep0] Give the nationality that are shared by at least two people ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select people.Nationality from poker_player  where  count ( people.* )  >= 2  group by people.Nationality "
    },
    {
        "input": "[struct _ sep0] Give the nationality for which there are two or more people . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select people.Nationality from poker_player  where  count ( people.* )  >= 2  group by people.Nationality "
    },
    {
        "input": "[struct _ sep0] Give the nationality in ascending alphabetical order of name . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select people.Nationality from poker_player  order by people.Name asc"
    },
    {
        "input": "[struct _ sep0] Give the nationality ordered by their names in alphabetical order ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select people.Nationality from poker_player  order by people.Name asc"
    },
    {
        "input": "[struct _ sep0] What are the nationalities in ascending alphabetical order of name . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select people.Nationality from poker_player  order by people.Name asc"
    },
    {
        "input": "[struct _ sep0] Return the nationalities in ascending alphabetical order of name . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select people.Nationality from poker_player  order by people.Name asc"
    },
    {
        "input": "[struct _ sep0] Return the nationalities ordered by their names in alphabetical order ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select people.Nationality from poker_player  order by people.Name asc"
    },
    {
        "input": "[struct _ sep0] List the names and birth dates of people whose nationality is not ' Russia ' . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality ( Russia ), name, birth _ date, height",
        "gold_natsql": "select people.Name , people.Birth_Date from poker_player  where  people.Nationality != \"Russia\" "
    },
    {
        "input": "[struct _ sep0] List the names and birth dates of people who are not from Russia ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality ( Russia ), name, birth _ date, height",
        "gold_natsql": "select people.Name , people.Birth_Date from poker_player  where  people.Nationality != \"Russia\" "
    },
    {
        "input": "[struct _ sep0] List the names and birth dates of people that are not poker players . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select people.Name , people.Birth_Date from poker_player  where  @.@ not in poker_player.* "
    },
    {
        "input": "[struct _ sep0] List the names and birth dates of people who do not play poker ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select people.Name , people.Birth_Date from poker_player  where  @.@ not in poker_player.* "
    },
    {
        "input": "[struct _ sep0] Show names of people in ascending alphabetical order of name . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select people.Name from poker_player  order by people.Name asc"
    },
    {
        "input": "[struct _ sep0] Show names of people ordered by their names in alphabetical order ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select people.Name from poker_player  order by people.Name asc"
    },
    {
        "input": "[struct _ sep0] Show names of people that are not poker players . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select people.Name from poker_player  where  @.@ not in poker_player.* "
    },
    {
        "input": "[struct _ sep0] Show names of people who do not play poker ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select people.Name from poker_player  where  @.@ not in poker_player.* "
    },
    {
        "input": "[struct _ sep0] What are the names of people in ascending alphabetical order of name . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select people.Name from poker_player  order by people.Name asc"
    },
    {
        "input": "[struct _ sep0] What are the names of people that are not poker players . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select people.Name from poker_player  where  @.@ not in poker_player.* "
    },
    {
        "input": "[struct _ sep0] What are the names of people who do not play poker ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select people.Name from poker_player  where  @.@ not in poker_player.* "
    },
    {
        "input": "[struct _ sep0] List the names of people in ascending alphabetical order of name . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select people.Name from poker_player  order by people.Name asc"
    },
    {
        "input": "[struct _ sep0] List the names of people ordered by their names in alphabetical order ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select people.Name from poker_player  order by people.Name asc"
    },
    {
        "input": "[struct _ sep0] List the names of people whose nationality is not ' Russia ' . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality ( Russia ), name, birth _ date, height",
        "gold_natsql": "select people.Name from poker_player  where  people.Nationality != \"Russia\" "
    },
    {
        "input": "[struct _ sep0] List the names of people who are not from Russia ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality ( Russia ), name, birth _ date, height",
        "gold_natsql": "select people.Name from poker_player  where  people.Nationality != \"Russia\" "
    },
    {
        "input": "[struct _ sep0] What are the names of people in ascending alphabetical order of name . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select people.Name from poker_player  order by people.Name asc"
    },
    {
        "input": "[struct _ sep0] What are the names of people whose nationality is not ' Russia ' . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality ( Russia ), name, birth _ date, height",
        "gold_natsql": "select people.Name from poker_player  where  people.Nationality != \"Russia\" "
    },
    {
        "input": "[struct _ sep0] What are the names of people who are not from Russia ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality ( Russia ), name, birth _ date, height",
        "gold_natsql": "select people.Name from poker_player  where  people.Nationality != \"Russia\" "
    },
    {
        "input": "[struct _ sep0] What is last date created of votes that were for the contestant named ' Tabatha Gehling ' ? [/struct _ sep0]| voter _ 1 | area _ code _ state : area _ code, state | contestants : contestant _ number, contestant _ name ( Tabatha Gehling ) | votes : vote _ id, phone _ number, state, contestant _ number, created",
        "gold_natsql": "select max ( votes.created )  from area_code_state  where  contestants.contestant_name = \"Tabatha Gehling\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the contestants did not get voted ? [/struct _ sep0]| voter _ 1 | area _ code _ state : area _ code, state | contestants : contestant _ number, contestant _ name | votes : vote _ id, phone _ number, state, contestant _ number, created",
        "gold_natsql": "select contestants.contestant_name from area_code_state  where  @.@ not in votes.* "
    },
    {
        "input": "[struct _ sep0] What are the names of the contestants whose names contain the substring ' Al ' . [/struct _ sep0]| voter _ 1 | area _ code _ state : area _ code, state ( AL ) | contestants : contestant _ number, contestant _ name | votes : vote _ id, phone _ number, state, contestant _ number, created",
        "gold_natsql": "select contestants.contestant_name from area_code_state  where  contestants.contestant_name like \"%Al%\" "
    },
    {
        "input": "[struct _ sep0] What are the contestant numbers and names of the contestants whose names are not ' Jessie Alloway ' [/struct _ sep0]| area _ code _ state : area _ code, state | contestants : contestant _ number, contestant _ name ( Jessie Alloway ) | votes : vote _ id, phone _ number, state, contestant _ number, created",
        "gold_natsql": "select contestants.contestant_number , contestants.contestant_name from area_code_state  where  contestants.contestant_name != \"Jessie Alloway\" "
    },
    {
        "input": "[struct _ sep0] What are the contestant numbers and names of the contestants did not get voted ? [/struct _ sep0]| voter _ 1 | area _ code _ state : area _ code, state | contestants : contestant _ number, contestant _ name | votes : vote _ id, phone _ number, state, contestant _ number, created",
        "gold_natsql": "select contestants.contestant_number , contestants.contestant_name from area_code_state  where  @.@ not in votes.* "
    },
    {
        "input": "[struct _ sep0] What are the contestant numbers and names of the contestants whose names contain the substring ' Al ' . [/struct _ sep0]| voter _ 1 | area _ code _ state : area _ code, state ( AL ) | contestants : contestant _ number, contestant _ name | votes : vote _ id, phone _ number, state, contestant _ number, created",
        "gold_natsql": "select contestants.contestant_number , contestants.contestant_name from area_code_state  where  contestants.contestant_name like \"%Al%\" "
    },
    {
        "input": "[struct _ sep0] Of all the contestants who got voted , what is the contestant number and name of the contestant whose names are not ' Jessie Alloway ' [/struct _ sep0]| area _ code _ state : area _ code, state | contestants : contestant _ number, contestant _ name ( Jessie Alloway ) | votes : vote _ id, phone _ number, state, contestant _ number, created",
        "gold_natsql": "select contestants.contestant_number , contestants.contestant_name from area_code_state  where  @ join votes.*  and  contestants.contestant_name != \"Jessie Alloway\" "
    },
    {
        "input": "[struct _ sep0] Of all the contestants who got voted , what is the contestant number and name of the contestant who had at least two votes ? [/struct _ sep0]| voter _ 1 | area _ code _ state : area _ code, state | contestants : contestant _ number, contestant _ name | votes : vote _ id, phone _ number, state, contestant _ number, created",
        "gold_natsql": "select contestants.contestant_number , contestants.contestant_name from area_code_state  where  @ join votes.*  and  count ( votes.* )  >= 2 "
    },
    {
        "input": "[struct _ sep0] Of all the contestants who got voted , what is the contestant number and name of the contestant did not get voted ? [/struct _ sep0]| voter _ 1 | area _ code _ state : area _ code, state | contestants : contestant _ number, contestant _ name | votes : vote _ id, phone _ number, state, contestant _ number, created",
        "gold_natsql": "select contestants.contestant_number , contestants.contestant_name from area_code_state  where  @ join votes.*  and  @.@ not in votes.* "
    },
    {
        "input": "[struct _ sep0] Of all the contestants who got voted , what is the contestant number and name of the contestant whose names contain the substring ' Al ' . [/struct _ sep0]| voter _ 1 | area _ code _ state : area _ code, state | contestants : contestant _ number, contestant _ name | votes : vote _ id, phone _ number, state, contestant _ number, created",
        "gold_natsql": "select contestants.contestant_number , contestants.contestant_name from area_code_state  where  @ join votes.*  and  contestants.contestant_name like \"%Al%\" "
    },
    {
        "input": "[struct _ sep0] What are the number of votes that were for the contestant named ' Tabatha Gehling ' ? [/struct _ sep0]| voter _ 1 | area _ code _ state : area _ code, state | contestants : contestant _ number, contestant _ name ( Tabatha Gehling ) | votes : vote _ id, phone _ number, state, contestant _ number, created",
        "gold_natsql": "select count ( votes.* )  from area_code_state  where  contestants.contestant_name = \"Tabatha Gehling\" "
    },
    {
        "input": "[struct _ sep0] How many contestants whose names are not ' Jessie Alloway ' [/struct _ sep0]| area _ code _ state : area _ code, state | contestants : contestant _ number, contestant _ name ( Jessie Alloway ) | votes : vote _ id, phone _ number, state, contestant _ number, created",
        "gold_natsql": "select count ( contestants.* )  from area_code_state  where  contestants.contestant_name != \"Jessie Alloway\" "
    },
    {
        "input": "[struct _ sep0] How many contestants whose names contain the substring ' Al ' . [/struct _ sep0]| voter _ 1 | area _ code _ state : area _ code, state ( AL ) | contestants : contestant _ number, contestant _ name | votes : vote _ id, phone _ number, state, contestant _ number, created",
        "gold_natsql": "select count ( contestants.* )  from area_code_state  where  contestants.contestant_name like \"%Al%\" "
    },
    {
        "input": "[struct _ sep0] What is the area code in which voters voted both for the contestant ' Tabatha Gehling ' and the contestant ' Kelly Clauss ' . [/struct _ sep0]| voter _ 1 | area _ code _ state : area _ code, state | contestants : contestant _ number, contestant _ name ( Tabatha Gehling, Kelly Clauss ) | votes : vote _ id, phone _ number, state, contestant _ number, created",
        "gold_natsql": "select area_code_state.area_code from area_code_state  where  contestants.contestant_name = \"Tabatha Gehling\"  and  contestants.contestant_name = \"Kelly Clauss\" "
    },
    {
        "input": "[struct _ sep0] What are the create dates , states , and phone numbers of the votes from the state ' CA ' ? [/struct _ sep0]| voter _ 1 | area _ code _ state : area _ code, state ( CA ) | contestants : contestant _ number, contestant _ name | votes : vote _ id, phone _ number, state ( CA ), contestant _ number, created",
        "gold_natsql": "select votes.created , votes.state , votes.phone_number from area_code_state  where  votes.state = \"CA\" "
    },
    {
        "input": "[struct _ sep0] What are the create dates , states , and phone numbers of the votes from state ' NY ' or ' CA ' ? [/struct _ sep0]| voter _ 1 | area _ code _ state : area _ code, state ( NY, CA ) | contestants : contestant _ number, contestant _ name | votes : vote _ id, phone _ number, state ( NY, CA ), contestant _ number, created",
        "gold_natsql": "select votes.created , votes.state , votes.phone_number from area_code_state  where  votes.state = \"NY\"  or  votes.state = \"CA\" "
    },
    {
        "input": "[struct _ sep0] Return the names of the contestants ordered by contestant name descending . [/struct _ sep0]| voter _ 1 | area _ code _ state : area _ code, state | contestants : contestant _ number, contestant _ name | votes : vote _ id, phone _ number, state, contestant _ number, created",
        "gold_natsql": "select contestants.contestant_name from area_code_state  order by contestants.contestant_name desc"
    },
    {
        "input": "[struct _ sep0] Return the names of the contestants whose names are not ' Jessie Alloway ' [/struct _ sep0]| area _ code _ state : area _ code, state | contestants : contestant _ number, contestant _ name ( Jessie Alloway ) | votes : vote _ id, phone _ number, state, contestant _ number, created",
        "gold_natsql": "select contestants.contestant_name from area_code_state  where  contestants.contestant_name != \"Jessie Alloway\" "
    },
    {
        "input": "[struct _ sep0] Return the names of the contestants did not get voted ? [/struct _ sep0]| voter _ 1 | area _ code _ state : area _ code, state | contestants : contestant _ number, contestant _ name | votes : vote _ id, phone _ number, state, contestant _ number, created",
        "gold_natsql": "select contestants.contestant_name from area_code_state  where  @.@ not in votes.* "
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries with the lowest life expectancy . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries in Asia or Europe . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries speak both English and Dutch ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, Dutch ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.Language = \"Dutch\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries where either English or Dutch is the official language ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, Dutch ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\"  or  countrylanguage.Language = \"Dutch\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries have either English or Dutch as an official language ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, Dutch ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\"  or  countrylanguage.Language = \"Dutch\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries with the largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries where English is not the official language ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries in which English is not the official language . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries that do not speak English ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries with the smallest population ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries that has the lowest population . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries with the largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries that has the largest area . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries with the top 5 largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.SurfaceArea desc limit 5"
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries with the top 3 largest population ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.Population desc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries with the 3 lowest populations ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries with the fewest people . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations do the countires in the Caribbean cover together ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations with the lowest life expectancy . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the names of the nations in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations in Asia or Europe . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations whose government is US Territory ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( US Territory ), headofstate, capital, code2 ( US ) | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.GovernmentForm = \"US Territory\" "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations which are considered US Territory . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( US Territory ), headofstate, capital, code2 ( US ) | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.GovernmentForm = \"US Territory\" "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations are there in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations that use English and Dutch ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, Dutch ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.Language = \"Dutch\" "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations speak both English and French ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, French ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.Language = \"French\" "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations that speak both English and French . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, French ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.Language = \"French\" "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations where both English and French are official languages ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, French ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\"  and  countrylanguage.Language = \"French\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations with the largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the names of the nations that do not use English ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations with the smallest population ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the names of the nations with the largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the names of the nations with the top 5 largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.SurfaceArea desc limit 5"
    },
    {
        "input": "[struct _ sep0] Give the names of the nations with the top 3 largest population ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.Population desc limit 3"
    },
    {
        "input": "[struct _ sep0] Give the names of the nations with the 3 lowest populations ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] Give the names of the nations with the fewest people . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] Give the names of the nations are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations have a population of 80000 ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations have a population equal to 80000 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] How many countries that became independent after 1950 ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.IndepYear > 1950 "
    },
    {
        "input": "[struct _ sep0] How many countries in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] How many countries in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] How many countries in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] How many countries in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] How many countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many countries in Asia or Europe . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] How many countries in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] How many countries speak both English and Dutch ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, Dutch ), isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.Language = \"Dutch\" "
    },
    {
        "input": "[struct _ sep0] How many countries where English is not the official language ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] How many countries in which English is not the official language . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] How many countries that do not speak English ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] How many countries in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] How many countries in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] How many countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many countries in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] How many countries in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] How many countries are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many countries in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many countries that became independent after 1950 ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.IndepYear > 1950 "
    },
    {
        "input": "[struct _ sep0] How many countries in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] How many countries in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] How many countries in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] How many countries in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] How many countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many countries in Asia or Europe . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] How many countries in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] How many countries speak both English and Dutch ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, Dutch ), isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.Language = \"Dutch\" "
    },
    {
        "input": "[struct _ sep0] How many countries where English is not the official language ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] How many countries in which English is not the official language . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] How many countries that do not speak English ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] How many countries in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] How many countries in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] How many countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many countries in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] How many countries in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] How many countries are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many countries in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries that became independent after 1950 ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.IndepYear > 1950 "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in Asia or Europe . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Continent = \"Asia\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries speak both English and Dutch ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, Dutch ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.Language = \"Dutch\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries where English is not the official language ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in which English is not the official language . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries that do not speak English ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How much surface area in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] How much surface area in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] How much surface area in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] How much surface area in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How much surface area in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How much surface area in Asia or Europe . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Continent = \"Asia\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] How much surface area in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] How much surface area in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] How much surface area in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] How much surface area in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How much surface area in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How much surface area in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] How much surface area in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] How much surface area in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the continent name in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] What is the continent name in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] What is the continent name in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the continent name in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the continent name in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the continent name with the lowest life expectancy . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the continent name in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the continent name in Asia or Europe . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  country.Continent = \"Asia\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What is the continent name in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the continent name with the largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the continent name in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What is the continent name in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What is the continent name in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the continent name in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the continent name in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the continent name in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the continent name with the smallest population ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the continent name with the largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the continent name with the top 5 largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  order by country.SurfaceArea desc limit 5"
    },
    {
        "input": "[struct _ sep0] What is the continent name with the top 3 largest population ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  order by country.Population desc limit 3"
    },
    {
        "input": "[struct _ sep0] What is the continent name with the 3 lowest populations ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] What is the continent name with the fewest people . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] What is the continent name in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Which language is the most popular on the Asia continent ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  country.Continent = \"Asia\"  order by countrylanguage.Percentage desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies with the lowest life expectancy . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Asia or Europe . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Continent = \"Asia\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies with the largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies with the smallest population ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies with the largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies with the top 5 largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  order by country.SurfaceArea desc limit 5"
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies with the top 3 largest population ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  order by country.Population desc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies with the 3 lowest populations ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies with the fewest people . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries that became independent after 1950 ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.IndepYear > 1950 "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in Asia or Europe . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Asia\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries speak both English and Dutch ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, Dutch ), isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.Language = \"Dutch\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries where English is not the official language ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in which English is not the official language . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries that do not speak English ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Asia or Europe . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Asia\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the name of country that has the shortest life expectancy in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Region = \"Caribbean\"  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the name of country that has the shortest life expectancy in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Name = \"Brazil\"  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the name of country that has the shortest life expectancy in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Region = \"Central Africa\"  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the name of country that has the shortest life expectancy in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Region = \"Central Africa\"  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the name of country that has the shortest life expectancy with the lowest life expectancy . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the name of country that has the shortest life expectancy in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Africa\"  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the name of country that has the shortest life expectancy with the largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the name of country that has the shortest life expectancy in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the name of country that has the shortest life expectancy in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the name of country that has the shortest life expectancy in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Africa\"  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the name of country that has the shortest life expectancy in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Africa\"  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the name of country that has the shortest life expectancy with the smallest population ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the name of country that has the shortest life expectancy with the largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the name of country that has the shortest life expectancy with the top 5 largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.SurfaceArea desc limit 5"
    },
    {
        "input": "[struct _ sep0] What is the name of country that has the shortest life expectancy with the top 3 largest population ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.Population desc limit 3"
    },
    {
        "input": "[struct _ sep0] What is the name of country that has the shortest life expectancy with the 3 lowest populations ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] What is the name of country that has the shortest life expectancy with the fewest people . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] Give the name of the country in Asia in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  and  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] Give the name of the country in Asia in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  and  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] Give the name of the country in Asia in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  and  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the name of the country in Asia in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  and  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the name of the country in Asia and Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  and  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] Give the name of the country in Asia in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the name of the country in Asia with the largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the name of the country in Asia in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  and  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] Give the name of the country in Asia in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  and  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] Give the name of the country in Asia in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the name of the country in Asia in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the name of the country in Asia with the smallest population ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the name of the country in Asia with the largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the name of the country in Asia with the top 5 largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  order by country.SurfaceArea desc limit 5"
    },
    {
        "input": "[struct _ sep0] Give the name of the country in Asia with the top 3 largest population ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  order by country.Population desc limit 3"
    },
    {
        "input": "[struct _ sep0] Give the name of the country in Asia with the 3 lowest populations ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] Give the name of the country in Asia with the fewest people . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] What is the total population and maximum GNP in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , max ( country.GNP )  from city  where  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] What is the total population and maximum GNP in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , max ( country.GNP )  from city  where  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] What is the total population and maximum GNP in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , max ( country.GNP )  from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the total population and maximum GNP in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , max ( country.GNP )  from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the total population and maximum GNP in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , max ( country.GNP )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the total population and maximum GNP in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , max ( country.GNP )  from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What is the total population and maximum GNP in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , max ( country.GNP )  from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What is the total population and maximum GNP in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , max ( country.GNP )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the total population and maximum GNP in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , max ( country.GNP )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the average life expectancy in Africa countries that became independent after 1950 ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Africa\"  and  country.IndepYear > 1950 "
    },
    {
        "input": "[struct _ sep0] What is the average life expectancy in Africa countries in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Africa\"  and  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] What is the average life expectancy in Africa countries in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Africa\"  and  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] What is the average life expectancy in Africa countries in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Africa\"  and  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the average life expectancy in Africa countries in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Africa\"  and  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the average life expectancy in Africa countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Africa\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the average life expectancy in Africa countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Africa\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the average life expectancy in Africa countries in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Africa\"  and  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What is the average life expectancy in Africa countries in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Africa\"  and  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What is the average life expectancy in Africa countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Africa\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the average life expectancy in Africa countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Africa\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the average life expectancy in Africa countries are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Africa\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the average life expectancy in Africa countries in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Africa\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the average life expectancy for countries in Africa in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Africa\"  and  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] Give the average life expectancy for countries in Africa in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Africa\"  and  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] Give the average life expectancy for countries in Africa in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Africa\"  and  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the average life expectancy for countries in Africa in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Africa\"  and  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the average life expectancy for countries in Africa in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Africa\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the average life expectancy for countries in Africa in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Africa\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the average life expectancy for countries in Africa in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Africa\"  and  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] Give the average life expectancy for countries in Africa in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Africa\"  and  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] Give the average life expectancy for countries in Africa in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Africa\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the average life expectancy for countries in Africa in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Africa\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the average life expectancy for countries in Africa in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Africa\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the continents Asia in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Continent = \"Asia\"  and  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the continents Asia in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Continent = \"Asia\"  and  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the continents Asia in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Continent = \"Asia\"  and  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the continents Asia in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Continent = \"Asia\"  and  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the continents Asia in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Continent = \"Asia\"  and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the continents Asia in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Continent = \"Asia\"  and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the continents Asia in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Continent = \"Asia\"  and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the total surface area covered by countries that became independent after 1950 ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.IndepYear > 1950 "
    },
    {
        "input": "[struct _ sep0] Give the total surface area covered by countries have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Give the total surface area covered by countries have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Give the total surface area covered by countries in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] Give the total surface area covered by countries do the countires in the Caribbean cover together ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] Give the total surface area covered by countries in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] Give the total surface area covered by countries in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the total surface area covered by countries in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the total surface area covered by countries that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Give the total surface area covered by countries in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the total surface area covered by countries are there in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the total surface area covered by countries speak both English and Dutch ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, Dutch ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.Language = \"Dutch\" "
    },
    {
        "input": "[struct _ sep0] Give the total surface area covered by countries where English is not the official language ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] Give the total surface area covered by countries in which English is not the official language . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] Give the total surface area covered by countries that do not speak English ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] Give the total surface area covered by countries in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the total surface area covered by countries in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the total surface area covered by countries have a population of 80000 ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] Give the total surface area covered by countries have a population equal to 80000 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] What is the average GNP and total population in all nations that were founded after 1950 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  country.IndepYear > 1950 "
    },
    {
        "input": "[struct _ sep0] What is the average GNP and total population in all nations in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] What is the average GNP and total population in all nations in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] What is the average GNP and total population in all nations in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the average GNP and total population in all nations in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the average GNP and total population in all nations in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the average GNP and total population in all nations in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the average GNP and total population in all nations in Asia or Europe . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  country.Continent = \"Asia\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What is the average GNP and total population in all nations in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the average GNP and total population in all nations that use English and Dutch ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, Dutch ), isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.Language = \"Dutch\" "
    },
    {
        "input": "[struct _ sep0] What is the average GNP and total population in all nations speak both English and French ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, French ), isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.Language = \"French\" "
    },
    {
        "input": "[struct _ sep0] What is the average GNP and total population in all nations that speak both English and French . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, French ), isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.Language = \"French\" "
    },
    {
        "input": "[struct _ sep0] What is the average GNP and total population in all nations that do not use English ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] What is the average GNP and total population in all nations in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What is the average GNP and total population in all nations in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What is the average GNP and total population in all nations in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the average GNP and total population in all nations in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the average GNP and total population in all nations in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the average GNP and total population in all nations in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the average GNP and total population in all nations in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the mean GNP and total population of nations that were founded after 1950 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  country.IndepYear > 1950 "
    },
    {
        "input": "[struct _ sep0] Give the mean GNP and total population of nations have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Give the mean GNP and total population of nations have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Give the mean GNP and total population of nations in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] Give the mean GNP and total population of nations do the countires in the Caribbean cover together ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] Give the mean GNP and total population of nations in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] Give the mean GNP and total population of nations in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the mean GNP and total population of nations in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the mean GNP and total population of nations in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the mean GNP and total population of nations in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the mean GNP and total population of nations in Asia or Europe . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  country.Continent = \"Asia\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] Give the mean GNP and total population of nations in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the mean GNP and total population of nations are there in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the mean GNP and total population of nations that use English and Dutch ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, Dutch ), isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.Language = \"Dutch\" "
    },
    {
        "input": "[struct _ sep0] Give the mean GNP and total population of nations speak both English and French ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, French ), isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.Language = \"French\" "
    },
    {
        "input": "[struct _ sep0] Give the mean GNP and total population of nations that speak both English and French . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, French ), isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.Language = \"French\" "
    },
    {
        "input": "[struct _ sep0] Give the mean GNP and total population of nations that do not use English ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] Give the mean GNP and total population of nations in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] Give the mean GNP and total population of nations in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] Give the mean GNP and total population of nations in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the mean GNP and total population of nations in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the mean GNP and total population of nations in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the mean GNP and total population of nations in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the mean GNP and total population of nations are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the mean GNP and total population of nations in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the mean GNP and total population of nations have a population of 80000 ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] Give the mean GNP and total population of nations have a population equal to 80000 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] How many type of governments are in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] How many type of governments are in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] How many type of governments are in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] How many type of governments are in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] How many type of governments are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many type of governments are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many type of governments are in Asia or Europe . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Asia\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] How many type of governments are in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] How many type of governments are in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] How many type of governments are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many type of governments are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many type of governments are in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many different forms of governments in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] How many different forms of governments in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] How many different forms of governments in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] How many different forms of governments in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] How many different forms of governments in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many different forms of governments in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many different forms of governments in Asia or Europe . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Asia\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] How many different forms of governments in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] How many different forms of governments in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] How many different forms of governments in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many different forms of governments in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many different forms of governments in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of languages used in the country the name of whose head of state is Beatrix . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate ( Beatrix ), capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.HeadOfState = \"Beatrix\" "
    },
    {
        "input": "[struct _ sep0] How many languages used in the country the name of whose head of state is Beatrix . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate ( Beatrix ), capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.HeadOfState = \"Beatrix\" "
    },
    {
        "input": "[struct _ sep0] What is name of the country that became independent after 1950 ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950 "
    },
    {
        "input": "[struct _ sep0] What is name of the country have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What is name of the country have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What is name of the country in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] What is name of the country in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What is name of the country that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What is name of the country in Asia or Europe . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What is name of the country speak both English and Dutch ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, Dutch ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.Language = \"Dutch\" "
    },
    {
        "input": "[struct _ sep0] What is name of the country where either English or Dutch is the official language ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, Dutch ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\"  or  countrylanguage.Language = \"Dutch\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] What is name of the country have either English or Dutch as an official language ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, Dutch ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\"  or  countrylanguage.Language = \"Dutch\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] What is name of the country with the largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is name of the country where English is not the official language ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] What is name of the country in which English is not the official language . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] What is name of the country that do not speak English ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] What is name of the country in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What is name of the country in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What is name of the country in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is name of the country in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is name of the country in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What is name of the country in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What is name of the country with the smallest population ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is name of the country that has the lowest population . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is name of the country with the largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is name of the country that has the largest area . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is name of the country with the top 5 largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.SurfaceArea desc limit 5"
    },
    {
        "input": "[struct _ sep0] What is name of the country with the top 3 largest population ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.Population desc limit 3"
    },
    {
        "input": "[struct _ sep0] What is name of the country with the fewest people . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] What is name of the country are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is name of the country in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the name of the nation that were founded after 1950 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950 "
    },
    {
        "input": "[struct _ sep0] Give the name of the nation whose government is US Territory ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( US Territory ), headofstate, capital, code2 ( US ) | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.GovernmentForm = \"US Territory\" "
    },
    {
        "input": "[struct _ sep0] Give the name of the nation which are considered US Territory . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( US Territory ), headofstate, capital, code2 ( US ) | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.GovernmentForm = \"US Territory\" "
    },
    {
        "input": "[struct _ sep0] Give the name of the nation does Afghanistan have ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Afghanistan ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Name = \"Afghanistan\" "
    },
    {
        "input": "[struct _ sep0] Give the name of the nation are spoken in Afghanistan ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Afghanistan ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Name = \"Afghanistan\" "
    },
    {
        "input": "[struct _ sep0] Give the name of the nation that use English and Dutch ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, Dutch ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.Language = \"Dutch\" "
    },
    {
        "input": "[struct _ sep0] Give the name of the nation speak both English and French ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, French ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.Language = \"French\" "
    },
    {
        "input": "[struct _ sep0] Give the name of the nation that speak both English and French . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, French ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.Language = \"French\" "
    },
    {
        "input": "[struct _ sep0] Give the name of the nation where both English and French are official languages ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, French ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\"  and  countrylanguage.Language = \"French\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] Give the name of the nation that do not use English ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] Give the name of the nation do not have Republic for governments . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.GovernmentForm != \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Give the name of the nation with the 3 lowest populations ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] Which continent where Chinese is spoken ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Chinese ), isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  countrylanguage.Language = \"Chinese\" "
    },
    {
        "input": "[struct _ sep0] Which continent speak Chinese ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Chinese ), isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  countrylanguage.Language = \"Chinese\" "
    },
    {
        "input": "[struct _ sep0] Which continent where the average life expectancy is shorter than 72 ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  avg ( country.LifeExpectancy )  < 72 "
    },
    {
        "input": "[struct _ sep0] Which continent where Chinese is spoken ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Chinese ), isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  countrylanguage.Language = \"Chinese\" "
    },
    {
        "input": "[struct _ sep0] Which continent speak Chinese ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Chinese ), isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  countrylanguage.Language = \"Chinese\" "
    },
    {
        "input": "[struct _ sep0] Which continent where the average life expectancy is shorter than 72 ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  avg ( country.LifeExpectancy )  < 72 "
    },
    {
        "input": "[struct _ sep0] How many countries that became independent after 1950 ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.IndepYear > 1950 "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] How many countries in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] How many countries in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] How many countries that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] How many countries in Asia or Europe . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] How many countries in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] How many countries in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] How many countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many countries in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] How many countries in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] How many countries are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many countries in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the number of nations that were founded after 1950 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.IndepYear > 1950 "
    },
    {
        "input": "[struct _ sep0] What is the number of nations whose government is US Territory ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( US Territory ), headofstate, capital, code2 ( US ) | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"US Territory\" "
    },
    {
        "input": "[struct _ sep0] What is the number of nations which are considered US Territory . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( US Territory ), headofstate, capital, code2 ( US ) | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"US Territory\" "
    },
    {
        "input": "[struct _ sep0] What are the names of nations that were founded after 1950 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950 "
    },
    {
        "input": "[struct _ sep0] What are the names of nations whose government is US Territory ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( US Territory ), headofstate, capital, code2 ( US ) | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.GovernmentForm = \"US Territory\" "
    },
    {
        "input": "[struct _ sep0] What are the names of nations which are considered US Territory . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( US Territory ), headofstate, capital, code2 ( US ) | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.GovernmentForm = \"US Territory\" "
    },
    {
        "input": "[struct _ sep0] What are the names of nations with the 3 lowest populations ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] Give the names of nations that were founded after 1950 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950 "
    },
    {
        "input": "[struct _ sep0] Give the names of nations whose government is US Territory ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( US Territory ), headofstate, capital, code2 ( US ) | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.GovernmentForm = \"US Territory\" "
    },
    {
        "input": "[struct _ sep0] Give the names of nations which are considered US Territory . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( US Territory ), headofstate, capital, code2 ( US ) | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.GovernmentForm = \"US Territory\" "
    },
    {
        "input": "[struct _ sep0] Give the names of nations does Afghanistan have ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Afghanistan ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Name = \"Afghanistan\" "
    },
    {
        "input": "[struct _ sep0] Give the names of nations are spoken in Afghanistan ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Afghanistan ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Name = \"Afghanistan\" "
    },
    {
        "input": "[struct _ sep0] Give the names of nations do not have Republic for governments . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.GovernmentForm != \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Give the names of nations with the 3 lowest populations ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the names of nations that were founded after 1950 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950 "
    },
    {
        "input": "[struct _ sep0] What are the names of nations whose government is US Territory ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( US Territory ), headofstate, capital, code2 ( US ) | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.GovernmentForm = \"US Territory\" "
    },
    {
        "input": "[struct _ sep0] What are the names of nations which are considered US Territory . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( US Territory ), headofstate, capital, code2 ( US ) | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.GovernmentForm = \"US Territory\" "
    },
    {
        "input": "[struct _ sep0] What are the names of nations with the 3 lowest populations ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] Give the names of countries with English and whose government forms are not Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  countrylanguage.Language = \"English\"  and  country.GovernmentForm != \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Give the names of countries with English and do not have Republic for governments . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  countrylanguage.Language = \"English\"  and  country.GovernmentForm != \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Give the names of countries with English and have a population of 80000 ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  countrylanguage.Language = \"English\"  and  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] Give the names of countries with English and have a population equal to 80000 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  countrylanguage.Language = \"English\"  and  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] What are the countries that became independent after 1950 ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.* from city  where  country.IndepYear > 1950 "
    },
    {
        "input": "[struct _ sep0] What are the countries have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.* from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What are the countries have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.* from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What are the countries in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select country.* from city  where  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] What are the countries in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.* from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the countries that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.* from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What are the countries in Asia or Europe . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.* from city  where  country.Continent = \"Asia\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What are the countries with the largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.* from city  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the countries in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.* from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What are the countries in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.* from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What are the countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.* from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.* from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the countries in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.* from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the countries in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.* from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the countries with the smallest population ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.* from city  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the countries that has the lowest population . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.* from city  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the countries with the largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.* from city  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the countries that has the largest area . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.* from city  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the countries with the top 5 largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.* from city  order by country.SurfaceArea desc limit 5"
    },
    {
        "input": "[struct _ sep0] What are the countries with the top 3 largest population ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.* from city  order by country.Population desc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the countries with the fewest people . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.* from city  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the countries are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.* from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the countries in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.* from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Which countries that became independent after 1950 ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.* from city  where  country.IndepYear > 1950 "
    },
    {
        "input": "[struct _ sep0] Which countries have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.* from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Which countries have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.* from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Which countries in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select country.* from city  where  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] Which countries in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.* from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] Which countries that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.* from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Which countries in Asia or Europe . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.* from city  where  country.Continent = \"Asia\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] Which countries with the largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.* from city  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] Which countries in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.* from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] Which countries in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.* from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] Which countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.* from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Which countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.* from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Which countries in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.* from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] Which countries in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.* from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] Which countries with the smallest population ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.* from city  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] Which countries that has the lowest population . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.* from city  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] Which countries with the largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.* from city  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] Which countries that has the largest area . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.* from city  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] Which countries with the top 5 largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.* from city  order by country.SurfaceArea desc limit 5"
    },
    {
        "input": "[struct _ sep0] Which countries with the top 3 largest population ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.* from city  order by country.Population desc limit 3"
    },
    {
        "input": "[struct _ sep0] Which countries with the fewest people . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.* from city  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] Which countries are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.* from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Which countries in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.* from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Which language is the most popular in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  country.Name = \"Aruba\"  group by countrylanguage.Language  order by count ( country.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the language used in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] What is the language are spoken in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] What is the language used in the country the name of whose head of state is Beatrix . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate ( Beatrix ), capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  country.HeadOfState = \"Beatrix\" "
    },
    {
        "input": "[struct _ sep0] Which languages are spoken by only one country whose head of state is Beatrix ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate ( Beatrix ), capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  count ( country.* )  = 1  and  country.HeadOfState = \"Beatrix\"  group by countrylanguage.Language "
    },
    {
        "input": "[struct _ sep0] Which languages are spoken by only one country that are founded before 1930 ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  count ( country.* )  = 1  and  country.IndepYear < 1930  group by countrylanguage.Language "
    },
    {
        "input": "[struct _ sep0] Which languages are spoken by only one country where people use languages other than English ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  count ( country.* )  = 1  and  countrylanguage.Language != \"English\"  group by countrylanguage.Language "
    },
    {
        "input": "[struct _ sep0] Which languages are spoken by only one country in which people speak langauges that are not English . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  count ( country.* )  = 1  and  countrylanguage.Language != \"English\"  group by countrylanguage.Language "
    },
    {
        "input": "[struct _ sep0] What languages are only used by a single country whose head of state is Beatrix ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate ( Beatrix ), capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  count ( country.* )  = 1  and  country.HeadOfState = \"Beatrix\"  group by countrylanguage.Language "
    },
    {
        "input": "[struct _ sep0] What languages are only used by a single country that are founded before 1930 ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  count ( country.* )  = 1  and  country.IndepYear < 1930  group by countrylanguage.Language "
    },
    {
        "input": "[struct _ sep0] What languages are only used by a single country where people use languages other than English ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  count ( country.* )  = 1  and  countrylanguage.Language != \"English\"  group by countrylanguage.Language "
    },
    {
        "input": "[struct _ sep0] What languages are only used by a single country in which people speak langauges that are not English . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  count ( country.* )  = 1  and  countrylanguage.Language != \"English\"  group by countrylanguage.Language "
    },
    {
        "input": "[struct _ sep0] What is the most populace city whose population is between 160000 and 900000 ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select city.Name from city  where  city.Population between 160000 and 900000  order by city.Population desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the most populace city that have a population between 160000 and 900000 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select city.Name from city  where  city.Population between 160000 and 900000  order by city.Population desc limit 1"
    },
    {
        "input": "[struct _ sep0] Find the name , population and expected life length of Asia country that became independent after 1950 ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.LifeExpectancy from city  where  country.Continent = \"Asia\"  and  country.IndepYear > 1950 "
    },
    {
        "input": "[struct _ sep0] Find the name , population and expected life length of Asia country have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.LifeExpectancy from city  where  country.Continent = \"Asia\"  and  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Find the name , population and expected life length of Asia country have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.LifeExpectancy from city  where  country.Continent = \"Asia\"  and  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Find the name , population and expected life length of Asia country in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.LifeExpectancy from city  where  country.Continent = \"Asia\"  and  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] Find the name , population and expected life length of Asia country do the countires in the Caribbean cover together ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.LifeExpectancy from city  where  country.Continent = \"Asia\"  and  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] Find the name , population and expected life length of Asia country in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.LifeExpectancy from city  where  country.Continent = \"Asia\"  and  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] Find the name , population and expected life length of Asia country in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.LifeExpectancy from city  where  country.Continent = \"Asia\"  and  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] Find the name , population and expected life length of Asia country in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.LifeExpectancy from city  where  country.Continent = \"Asia\"  and  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] Find the name , population and expected life length of Asia country with the lowest life expectancy . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.LifeExpectancy from city  where  country.Continent = \"Asia\"  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] Find the name , population and expected life length of Asia country that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.LifeExpectancy from city  where  country.Continent = \"Asia\"  and  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Find the name , population and expected life length of Asia country in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.LifeExpectancy from city  where  country.Continent = \"Asia\"  and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] Find the name , population and expected life length of Asia country are there in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.LifeExpectancy from city  where  country.Continent = \"Asia\"  and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] Find the name , population and expected life length of Asia country speak both English and Dutch ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, Dutch ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.LifeExpectancy from city  where  country.Continent = \"Asia\"  and  countrylanguage.Language = \"English\"  and  countrylanguage.Language = \"Dutch\" "
    },
    {
        "input": "[struct _ sep0] Find the name , population and expected life length of Asia country where either English or Dutch is the official language ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, Dutch ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.LifeExpectancy from city  where  country.Continent = \"Asia\"  and  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\"  or  countrylanguage.Language = \"Dutch\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] Find the name , population and expected life length of Asia country have either English or Dutch as an official language ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, Dutch ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.LifeExpectancy from city  where  country.Continent = \"Asia\"  and  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\"  or  countrylanguage.Language = \"Dutch\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] Find the name , population and expected life length of Asia country in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.LifeExpectancy from city  where  country.Continent = \"Asia\"  and  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] Find the name , population and expected life length of Asia country in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.LifeExpectancy from city  where  country.Continent = \"Asia\"  and  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] Find the name , population and expected life length of Asia country in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.LifeExpectancy from city  where  country.Continent = \"Asia\"  and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] Find the name , population and expected life length of Asia country in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.LifeExpectancy from city  where  country.Continent = \"Asia\"  and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] Find the name , population and expected life length of Asia country with the smallest population ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.LifeExpectancy from city  where  country.Continent = \"Asia\"  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] Find the name , population and expected life length of Asia country that has the lowest population . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.LifeExpectancy from city  where  country.Continent = \"Asia\"  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] Find the name , population and expected life length of Asia country with the top 5 largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.LifeExpectancy from city  where  country.Continent = \"Asia\"  order by country.SurfaceArea desc limit 5"
    },
    {
        "input": "[struct _ sep0] Find the name , population and expected life length of Asia country with the top 3 largest population ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.LifeExpectancy from city  where  country.Continent = \"Asia\"  order by country.Population desc limit 3"
    },
    {
        "input": "[struct _ sep0] Find the name , population and expected life length of Asia country with the 3 lowest populations ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.LifeExpectancy from city  where  country.Continent = \"Asia\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] Find the name , population and expected life length of Asia country with the fewest people . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.LifeExpectancy from city  where  country.Continent = \"Asia\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] Find the name , population and expected life length of Asia country have a population of 80000 ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.LifeExpectancy from city  where  country.Continent = \"Asia\"  and  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] Find the name , population and expected life length of Asia country have a population equal to 80000 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.LifeExpectancy from city  where  country.Continent = \"Asia\"  and  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] What is average life expectancy in the countries that became independent after 1950 ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.IndepYear > 1950 "
    },
    {
        "input": "[struct _ sep0] What is average life expectancy in the countries have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What is average life expectancy in the countries have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What is average life expectancy in the countries in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] What is average life expectancy in the countries in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] What is average life expectancy in the countries in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What is average life expectancy in the countries in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What is average life expectancy in the countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is average life expectancy in the countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is average life expectancy in the countries that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What is average life expectancy in the countries in Asia or Europe . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Asia\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What is average life expectancy in the countries in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What is average life expectancy in the countries in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What is average life expectancy in the countries in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What is average life expectancy in the countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is average life expectancy in the countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is average life expectancy in the countries in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What is average life expectancy in the countries in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What is average life expectancy in the countries are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is average life expectancy in the countries in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the mean life expectancy of countries that became independent after 1950 ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.IndepYear > 1950 "
    },
    {
        "input": "[struct _ sep0] Give the mean life expectancy of countries have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Give the mean life expectancy of countries have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Give the mean life expectancy of countries in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] Give the mean life expectancy of countries do the countires in the Caribbean cover together ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] Give the mean life expectancy of countries in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] Give the mean life expectancy of countries in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the mean life expectancy of countries in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the mean life expectancy of countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the mean life expectancy of countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the mean life expectancy of countries that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Give the mean life expectancy of countries in Asia or Europe . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Asia\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] Give the mean life expectancy of countries in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the mean life expectancy of countries are there in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the mean life expectancy of countries in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] Give the mean life expectancy of countries in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] Give the mean life expectancy of countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the mean life expectancy of countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the mean life expectancy of countries in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the mean life expectancy of countries in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the mean life expectancy of countries are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the mean life expectancy of countries in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the mean life expectancy of countries have a population of 80000 ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] Give the mean life expectancy of countries have a population equal to 80000 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of people living in the nations that were founded after 1950 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  from city  where  country.IndepYear > 1950 "
    },
    {
        "input": "[struct _ sep0] What is the total number of people living in the nations have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of people living in the nations have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of people living in the nations in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  from city  where  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of people living in the nations do the countires in the Caribbean cover together ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  from city  where  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of people living in the nations in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  from city  where  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of people living in the nations in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of people living in the nations in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of people living in the nations in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of people living in the nations in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of people living in the nations in Asia or Europe . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  from city  where  country.Continent = \"Asia\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of people living in the nations whose government is US Territory ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( US Territory ), headofstate, capital, code2 ( US ) | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  from city  where  country.GovernmentForm = \"US Territory\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of people living in the nations which are considered US Territory . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( US Territory ), headofstate, capital, code2 ( US ) | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  from city  where  country.GovernmentForm = \"US Territory\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of people living in the nations in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of people living in the nations are there in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of people living in the nations in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of people living in the nations in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of people living in the nations in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of people living in the nations in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of people living in the nations in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of people living in the nations in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of people living in the nations are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of people living in the nations in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of people living in the nations have a population of 80000 ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  from city  where  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of people living in the nations have a population equal to 80000 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  from city  where  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] How many people live in countries that became independent after 1950 ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  from city  where  country.IndepYear > 1950 "
    },
    {
        "input": "[struct _ sep0] How many people live in countries have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] How many people live in countries have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] How many people live in countries in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  from city  where  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] How many people live in countries in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  from city  where  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] How many people live in countries in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] How many people live in countries in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] How many people live in countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many people live in countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many people live in countries that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] How many people live in countries in Asia or Europe . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  from city  where  country.Continent = \"Asia\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] How many people live in countries in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] How many people live in countries in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] How many people live in countries in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] How many people live in countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many people live in countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many people live in countries in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] How many people live in countries in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] How many people live in countries are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many people live in countries in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the official language spoken in the country in Republic governments ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  countrylanguage.IsOfficial = \"T\"  and  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What is the official language spoken in the country with a Republic government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  countrylanguage.IsOfficial = \"T\"  and  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What is the official language spoken in the country that are founded before 1930 ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  countrylanguage.IsOfficial = \"T\"  and  country.IndepYear < 1930 "
    },
    {
        "input": "[struct _ sep0] What is the official language spoken in the country where people use languages other than English ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  countrylanguage.IsOfficial = \"T\"  and  countrylanguage.Language != \"English\" "
    },
    {
        "input": "[struct _ sep0] What is the official language spoken in the country in which people speak langauges that are not English . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  countrylanguage.IsOfficial = \"T\"  and  countrylanguage.Language != \"English\" "
    },
    {
        "input": "[struct _ sep0] What is the official language used in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  countrylanguage.IsOfficial = \"T\"  and  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] What is the official language are spoken in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  countrylanguage.IsOfficial = \"T\"  and  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of unique official languages spoken in the countries in Republic governments ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct countrylanguage.Language )  from city  where  countrylanguage.IsOfficial = \"T\"  and  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of unique official languages spoken in the countries with a Republic government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct countrylanguage.Language )  from city  where  countrylanguage.IsOfficial = \"T\"  and  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of unique official languages spoken in the countries whose head of state is Beatrix ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate ( Beatrix ), capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct countrylanguage.Language )  from city  where  countrylanguage.IsOfficial = \"T\"  and  country.HeadOfState = \"Beatrix\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of unique official languages spoken in the countries where people use languages other than English ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select count (  distinct countrylanguage.Language )  from city  where  countrylanguage.IsOfficial = \"T\"  and  countrylanguage.Language != \"English\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of unique official languages spoken in the countries in which people speak langauges that are not English . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select count (  distinct countrylanguage.Language )  from city  where  countrylanguage.IsOfficial = \"T\"  and  countrylanguage.Language != \"English\" "
    },
    {
        "input": "[struct _ sep0] What are the countries that have greater surface area than any country in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  @.@ > min ( country.SurfaceArea )   and  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] What are the countries that have greater surface area than any country in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  @.@ > min ( country.SurfaceArea )   and  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] What are the countries that have greater surface area than any country in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  @.@ > min ( country.SurfaceArea )   and  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the countries that have greater surface area than any country in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  @.@ > min ( country.SurfaceArea )   and  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the countries that have greater surface area than any country in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  @.@ > min ( country.SurfaceArea )   and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the countries that have greater surface area than any country in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  @.@ > min ( country.SurfaceArea )   and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the countries that have greater surface area than any country in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  @.@ > min ( country.SurfaceArea )   and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the countries that have greater surface area than any country in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  @.@ > min ( country.SurfaceArea )   and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the countries that have greater surface area than any country in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  @.@ > min ( country.SurfaceArea )   and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the countries that have greater surface area than any country in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  @.@ > min ( country.SurfaceArea )   and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the countries that have greater surface area than any country in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  @.@ > min ( country.SurfaceArea )   and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the countries that have greater surface area than any country in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  @.@ > min ( country.SurfaceArea )   and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Which countries have greater area than that of any country in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  @.@ > min ( country.SurfaceArea )   and  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] Which countries have greater area than that of any country in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  @.@ > min ( country.SurfaceArea )   and  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] Which countries have greater area than that of any country in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  @.@ > min ( country.SurfaceArea )   and  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] Which countries have greater area than that of any country in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  @.@ > min ( country.SurfaceArea )   and  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] Which countries have greater area than that of any country in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  @.@ > min ( country.SurfaceArea )   and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Which countries have greater area than that of any country in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  @.@ > min ( country.SurfaceArea )   and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Which countries have greater area than that of any country in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  @.@ > min ( country.SurfaceArea )   and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] Which countries have greater area than that of any country in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  @.@ > min ( country.SurfaceArea )   and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Which countries have greater area than that of any country in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  @.@ > min ( country.SurfaceArea )   and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Which countries have greater area than that of any country in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  @.@ > min ( country.SurfaceArea )   and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] Which countries have greater area than that of any country in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  @.@ > min ( country.SurfaceArea )   and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] Which countries have greater area than that of any country in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  @.@ > min ( country.SurfaceArea )   and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the Africa countries that have a population less than any country in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Africa\"  and  @.@ < max ( country.Population )   and  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] What are the Africa countries that have a population less than any country in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Africa\"  and  @.@ < max ( country.Population )   and  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] What are the Africa countries that have a population less than any country in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Africa\"  and  @.@ < max ( country.Population )   and  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the Africa countries that have a population less than any country in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Africa\"  and  @.@ < max ( country.Population )   and  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the Africa countries that have a population less than any country in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Africa\"  and  @.@ < max ( country.Population )   and  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What are the Africa countries that have a population less than any country in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Africa\"  and  @.@ < max ( country.Population )   and  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] Which Africa countries have a smaller population than that of any country in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Africa\"  and  @.@ < min ( country.Population )   and  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] Which Africa countries have a smaller population than that of any country in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Africa\"  and  @.@ < min ( country.Population )   and  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] Which Africa countries have a smaller population than that of any country in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Africa\"  and  @.@ < min ( country.Population )   and  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] Which Africa countries have a smaller population than that of any country in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Africa\"  and  @.@ < min ( country.Population )   and  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] Which Africa countries have a smaller population than that of any country in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Africa\"  and  @.@ < min ( country.Population )   and  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] Which Africa countries have a smaller population than that of any country in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Africa\"  and  @.@ < min ( country.Population )   and  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] Which Asia countries have a population that is larger than any country in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  and  @.@ > max ( country.Population )   and  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] Which Asia countries have a population that is larger than any country in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  and  @.@ > max ( country.Population )   and  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] Which Asia countries have a population that is larger than any country in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  and  @.@ > max ( country.Population )   and  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] Which Asia countries have a population that is larger than any country in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  and  @.@ > max ( country.Population )   and  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] Which Asia countries have a population that is larger than any country in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  and  @.@ > max ( country.Population )   and  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] Which Asia countries have a population that is larger than any country in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  and  @.@ > max ( country.Population )   and  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What are the Asia countries which have a population larger than that of any country in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  and  @.@ > min ( country.Population )   and  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] What are the Asia countries which have a population larger than that of any country in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  and  @.@ > min ( country.Population )   and  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] What are the Asia countries which have a population larger than that of any country in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  and  @.@ > min ( country.Population )   and  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the Asia countries which have a population larger than that of any country in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  and  @.@ > min ( country.Population )   and  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the Asia countries which have a population larger than that of any country in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  and  @.@ > min ( country.Population )   and  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What are the Asia countries which have a population larger than that of any country in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  and  @.@ > min ( country.Population )   and  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What are the country codes for countries in Republic governments ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.CountryCode from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What are the country codes for countries with a Republic government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.CountryCode from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What are the country codes for countries whose head of state is Beatrix ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate ( Beatrix ), capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.CountryCode from city  where  country.HeadOfState = \"Beatrix\" "
    },
    {
        "input": "[struct _ sep0] What are the country codes for countries that are founded before 1930 ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.CountryCode from city  where  country.IndepYear < 1930 "
    },
    {
        "input": "[struct _ sep0] What are the country codes for countries where people use languages other than English ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select countrylanguage.CountryCode from city  where  countrylanguage.Language != \"English\" "
    },
    {
        "input": "[struct _ sep0] What are the country codes for countries in which people speak langauges that are not English . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select countrylanguage.CountryCode from city  where  countrylanguage.Language != \"English\" "
    },
    {
        "input": "[struct _ sep0] Return the country codes for countries in Republic governments ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.CountryCode from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Return the country codes for countries with a Republic government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.CountryCode from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Return the country codes for countries whose head of state is Beatrix ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate ( Beatrix ), capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.CountryCode from city  where  country.HeadOfState = \"Beatrix\" "
    },
    {
        "input": "[struct _ sep0] Return the country codes for countries that are founded before 1930 ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.CountryCode from city  where  country.IndepYear < 1930 "
    },
    {
        "input": "[struct _ sep0] Return the country codes for countries where people use languages other than English ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select countrylanguage.CountryCode from city  where  countrylanguage.Language != \"English\" "
    },
    {
        "input": "[struct _ sep0] Return the country codes for countries in which people speak langauges that are not English . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select countrylanguage.CountryCode from city  where  countrylanguage.Language != \"English\" "
    },
    {
        "input": "[struct _ sep0] What are the country codes of countries in Republic governments ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select  distinct countrylanguage.CountryCode from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What are the country codes of countries with a Republic government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select  distinct countrylanguage.CountryCode from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What are the country codes of countries whose head of state is Beatrix ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate ( Beatrix ), capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select  distinct countrylanguage.CountryCode from city  where  country.HeadOfState = \"Beatrix\" "
    },
    {
        "input": "[struct _ sep0] What are the country codes of countries that are founded before 1930 ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select  distinct countrylanguage.CountryCode from city  where  country.IndepYear < 1930 "
    },
    {
        "input": "[struct _ sep0] What are the country codes of countries that do not speak English ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select  distinct countrylanguage.CountryCode from city  where  except_  @.@ is countrylanguage.*  and  countrylanguage.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] What are the country codes of countries that do not speak English . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select  distinct countrylanguage.CountryCode from city  where  except_  @.@ is countrylanguage.*  and  countrylanguage.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] Give the country codes for countries in Republic governments ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select  distinct countrylanguage.CountryCode from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Give the country codes for countries with a Republic government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select  distinct countrylanguage.CountryCode from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Give the country codes for countries whose head of state is Beatrix ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate ( Beatrix ), capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select  distinct countrylanguage.CountryCode from city  where  country.HeadOfState = \"Beatrix\" "
    },
    {
        "input": "[struct _ sep0] Give the country codes for countries that are founded before 1930 ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select  distinct countrylanguage.CountryCode from city  where  country.IndepYear < 1930 "
    },
    {
        "input": "[struct _ sep0] Give the country codes for countries that do not speak English ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select  distinct countrylanguage.CountryCode from city  where  except_  @.@ is countrylanguage.*  and  countrylanguage.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] Give the country codes for countries that do not speak English . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select  distinct countrylanguage.CountryCode from city  where  except_  @.@ is countrylanguage.*  and  countrylanguage.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] What are the codes of the countries that do not speak English and French as official languages . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, French ), isofficial, percentage",
        "gold_natsql": "select country.Code from city  where  countrylanguage.Language != \"English\"  and  countrylanguage.Language = \"French\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] What are the codes of the countries that do not speak English and have a population of 80000 ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Code from city  where  countrylanguage.Language != \"English\"  and  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] What are the codes of the countries that do not speak English and have a population equal to 80000 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Code from city  where  countrylanguage.Language != \"English\"  and  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] Return the codes of countries that do not speak English and French as official languages . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, French ), isofficial, percentage",
        "gold_natsql": "select country.Code from city  where  countrylanguage.Language != \"English\"  and  countrylanguage.Language = \"French\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] Return the codes of countries that do not speak English and have a population of 80000 ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Code from city  where  countrylanguage.Language != \"English\"  and  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] Return the codes of countries that do not speak English and have a population equal to 80000 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Code from city  where  countrylanguage.Language != \"English\"  and  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country that became independent after 1950 ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.IndepYear > 1950 "
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country in Asia ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country with the lowest life expectancy . [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country in Asia ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country in Asia or Europe . [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Continent = \"Asia\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country in Africa ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country speak both English and Dutch ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, Dutch ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.Language = \"Dutch\" "
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country where either English or Dutch is the official language ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, Dutch ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\"  or  countrylanguage.Language = \"Dutch\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country have either English or Dutch as an official language ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, Dutch ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\"  or  countrylanguage.Language = \"Dutch\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country with the largest area ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country where English is not the official language ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country in which English is not the official language . [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country that do not speak English ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country in Europe ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country in Europe ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country in Asia ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country in Asia ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country in Africa ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country in Africa ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country with the largest area ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country that has the largest area . [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country with the top 5 largest area ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  order by country.SurfaceArea desc limit 5"
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country with the top 3 largest population ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  order by country.Population desc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country with the 3 lowest populations ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country with the fewest people . [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country in Asia . [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the name , year of Independence , and surface area of the country that became independent after 1950 ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.IndepYear > 1950 "
    },
    {
        "input": "[struct _ sep0] Give the name , year of Independence , and surface area of the country have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Give the name , year of Independence , and surface area of the country have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Give the name , year of Independence , and surface area of the country in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] Give the name , year of Independence , and surface area of the country do the countires in the Caribbean cover together ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] Give the name , year of Independence , and surface area of the country in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] Give the name , year of Independence , and surface area of the country in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the name , year of Independence , and surface area of the country in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the name , year of Independence , and surface area of the country in Asia ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the name , year of Independence , and surface area of the country with the lowest life expectancy . [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the name , year of Independence , and surface area of the country in Asia ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the name , year of Independence , and surface area of the country that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Give the name , year of Independence , and surface area of the country in Asia or Europe . [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Continent = \"Asia\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] Give the name , year of Independence , and surface area of the country in Africa ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the name , year of Independence , and surface area of the country are there in Africa ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the name , year of Independence , and surface area of the country speak both English and Dutch ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, Dutch ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.Language = \"Dutch\" "
    },
    {
        "input": "[struct _ sep0] Give the name , year of Independence , and surface area of the country where either English or Dutch is the official language ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, Dutch ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\"  or  countrylanguage.Language = \"Dutch\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] Give the name , year of Independence , and surface area of the country have either English or Dutch as an official language ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, Dutch ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\"  or  countrylanguage.Language = \"Dutch\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] Give the name , year of Independence , and surface area of the country with the largest area ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the name , year of Independence , and surface area of the country where English is not the official language ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] Give the name , year of Independence , and surface area of the country in which English is not the official language . [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] Give the name , year of Independence , and surface area of the country that do not speak English ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] Give the name , year of Independence , and surface area of the country in Europe ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] Give the name , year of Independence , and surface area of the country in Europe ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] Give the name , year of Independence , and surface area of the country in Asia ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the name , year of Independence , and surface area of the country in Asia ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the name , year of Independence , and surface area of the country in Africa ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the name , year of Independence , and surface area of the country in Africa ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the name , year of Independence , and surface area of the country with the largest area ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the name , year of Independence , and surface area of the country that has the largest area . [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the name , year of Independence , and surface area of the country with the top 5 largest area ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  order by country.SurfaceArea desc limit 5"
    },
    {
        "input": "[struct _ sep0] Give the name , year of Independence , and surface area of the country with the top 3 largest population ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  order by country.Population desc limit 3"
    },
    {
        "input": "[struct _ sep0] Give the name , year of Independence , and surface area of the country with the 3 lowest populations ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] Give the name , year of Independence , and surface area of the country with the fewest people . [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] Give the name , year of Independence , and surface area of the country are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the name , year of Independence , and surface area of the country in Asia . [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the name , year of Independence , and surface area of the country have a population of 80000 ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] Give the name , year of Independence , and surface area of the country have a population equal to 80000 . [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country that became independent after 1950 ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.IndepYear > 1950 "
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country with the lowest life expectancy . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country in Asia or Europe . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Continent = \"Asia\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country speak both English and Dutch ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, Dutch ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.Language = \"Dutch\" "
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country where either English or Dutch is the official language ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, Dutch ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\"  or  countrylanguage.Language = \"Dutch\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country have either English or Dutch as an official language ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, Dutch ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\"  or  countrylanguage.Language = \"Dutch\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country where English is not the official language ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country in which English is not the official language . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country that do not speak English ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country with the smallest population ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country that has the lowest population . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country with the top 5 largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  order by country.SurfaceArea desc limit 5"
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country with the top 3 largest population ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  order by country.Population desc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country with the 3 lowest populations ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country with the fewest people . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the name , population , and head of state for the country that became independent after 1950 ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.IndepYear > 1950 "
    },
    {
        "input": "[struct _ sep0] Give the name , population , and head of state for the country have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Give the name , population , and head of state for the country have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Give the name , population , and head of state for the country in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] Give the name , population , and head of state for the country do the countires in the Caribbean cover together ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] Give the name , population , and head of state for the country in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] Give the name , population , and head of state for the country in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the name , population , and head of state for the country in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the name , population , and head of state for the country in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the name , population , and head of state for the country with the lowest life expectancy . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the name , population , and head of state for the country in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the name , population , and head of state for the country that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Give the name , population , and head of state for the country in Asia or Europe . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Continent = \"Asia\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] Give the name , population , and head of state for the country in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the name , population , and head of state for the country are there in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the name , population , and head of state for the country speak both English and Dutch ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, Dutch ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.Language = \"Dutch\" "
    },
    {
        "input": "[struct _ sep0] Give the name , population , and head of state for the country where either English or Dutch is the official language ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, Dutch ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\"  or  countrylanguage.Language = \"Dutch\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] Give the name , population , and head of state for the country have either English or Dutch as an official language ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, Dutch ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\"  or  countrylanguage.Language = \"Dutch\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] Give the name , population , and head of state for the country where English is not the official language ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] Give the name , population , and head of state for the country in which English is not the official language . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] Give the name , population , and head of state for the country that do not speak English ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] Give the name , population , and head of state for the country in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] Give the name , population , and head of state for the country in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] Give the name , population , and head of state for the country in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the name , population , and head of state for the country in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the name , population , and head of state for the country in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the name , population , and head of state for the country in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the name , population , and head of state for the country with the smallest population ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the name , population , and head of state for the country that has the lowest population . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the name , population , and head of state for the country with the top 5 largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  order by country.SurfaceArea desc limit 5"
    },
    {
        "input": "[struct _ sep0] Give the name , population , and head of state for the country with the top 3 largest population ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  order by country.Population desc limit 3"
    },
    {
        "input": "[struct _ sep0] Give the name , population , and head of state for the country with the 3 lowest populations ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] Give the name , population , and head of state for the country with the fewest people . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] Give the name , population , and head of state for the country are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the name , population , and head of state for the country in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the name , population , and head of state for the country have a population of 80000 ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] Give the name , population , and head of state for the country have a population equal to 80000 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] What are the different government forms and what is the total population of each for government forms in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , country.GovernmentForm from city  where  country.Region = \"Caribbean\"  group by country.GovernmentForm "
    },
    {
        "input": "[struct _ sep0] What are the different government forms and what is the total population of each for government forms in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , country.GovernmentForm from city  where  country.Name = \"Brazil\"  group by country.GovernmentForm "
    },
    {
        "input": "[struct _ sep0] What are the different government forms and what is the total population of each for government forms in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , country.GovernmentForm from city  where  country.Region = \"Central Africa\"  group by country.GovernmentForm "
    },
    {
        "input": "[struct _ sep0] What are the different government forms and what is the total population of each for government forms in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , country.GovernmentForm from city  where  country.Region = \"Central Africa\"  group by country.GovernmentForm "
    },
    {
        "input": "[struct _ sep0] What are the different government forms and what is the total population of each for government forms in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , country.GovernmentForm from city  where  country.Continent = \"Asia\"  group by country.GovernmentForm "
    },
    {
        "input": "[struct _ sep0] What are the different government forms and what is the total population of each for government forms in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , country.GovernmentForm from city  where  country.Continent = \"Asia\"  group by country.GovernmentForm "
    },
    {
        "input": "[struct _ sep0] What are the different government forms and what is the total population of each for government forms in Asia or Europe . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , country.GovernmentForm from city  where  country.Continent = \"Asia\"  or  country.Continent = \"Europe\"  group by country.GovernmentForm "
    },
    {
        "input": "[struct _ sep0] What are the different government forms and what is the total population of each for government forms in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , country.GovernmentForm from city  where  country.Continent = \"Africa\"  group by country.GovernmentForm "
    },
    {
        "input": "[struct _ sep0] What are the different government forms and what is the total population of each for government forms in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , country.GovernmentForm from city  where  country.Continent = \"Europe\"  group by country.GovernmentForm "
    },
    {
        "input": "[struct _ sep0] What are the different government forms and what is the total population of each for government forms in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , country.GovernmentForm from city  where  country.Continent = \"Europe\"  group by country.GovernmentForm "
    },
    {
        "input": "[struct _ sep0] What are the different government forms and what is the total population of each for government forms in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , country.GovernmentForm from city  where  country.Continent = \"Asia\"  group by country.GovernmentForm "
    },
    {
        "input": "[struct _ sep0] What are the different government forms and what is the total population of each for government forms in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , country.GovernmentForm from city  where  country.Continent = \"Asia\"  group by country.GovernmentForm "
    },
    {
        "input": "[struct _ sep0] What are the different government forms and what is the total population of each for government forms in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , country.GovernmentForm from city  where  country.Continent = \"Africa\"  group by country.GovernmentForm "
    },
    {
        "input": "[struct _ sep0] What are the different government forms and what is the total population of each for government forms in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , country.GovernmentForm from city  where  country.Continent = \"Africa\"  group by country.GovernmentForm "
    },
    {
        "input": "[struct _ sep0] What are the different government forms and what is the total population of each for government forms in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , country.GovernmentForm from city  where  country.Continent = \"Asia\"  group by country.GovernmentForm "
    },
    {
        "input": "[struct _ sep0] Find the average life expectancy and total population for each continent have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , avg ( country.LifeExpectancy )  , country.Continent from city  where  country.GovernmentForm = \"Republic\"  group by country.Continent "
    },
    {
        "input": "[struct _ sep0] Find the average life expectancy and total population for each continent have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , avg ( country.LifeExpectancy )  , country.Continent from city  where  country.GovernmentForm = \"Republic\"  group by country.Continent "
    },
    {
        "input": "[struct _ sep0] Find the average life expectancy and total population for each continent in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , avg ( country.LifeExpectancy )  , country.Continent from city  where  country.Region = \"Caribbean\"  group by country.Continent "
    },
    {
        "input": "[struct _ sep0] Find the average life expectancy and total population for each continent do the countires in the Caribbean cover together ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , avg ( country.LifeExpectancy )  , country.Continent from city  where  country.Region = \"Caribbean\"  group by country.Continent "
    },
    {
        "input": "[struct _ sep0] Find the average life expectancy and total population for each continent in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , avg ( country.LifeExpectancy )  , country.Continent from city  where  country.Name = \"Brazil\"  group by country.Continent "
    },
    {
        "input": "[struct _ sep0] Find the average life expectancy and total population for each continent in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , avg ( country.LifeExpectancy )  , country.Continent from city  where  country.Region = \"Central Africa\"  group by country.Continent "
    },
    {
        "input": "[struct _ sep0] Find the average life expectancy and total population for each continent in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , avg ( country.LifeExpectancy )  , country.Continent from city  where  country.Region = \"Central Africa\"  group by country.Continent "
    },
    {
        "input": "[struct _ sep0] Find the average life expectancy and total population for each continent in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , avg ( country.LifeExpectancy )  , country.Continent from city  where  country.Continent = \"Asia\"  group by country.Continent "
    },
    {
        "input": "[struct _ sep0] Find the average life expectancy and total population for each continent in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , avg ( country.LifeExpectancy )  , country.Continent from city  where  country.Continent = \"Asia\"  group by country.Continent "
    },
    {
        "input": "[struct _ sep0] Find the average life expectancy and total population for each continent in Asia or Europe . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , avg ( country.LifeExpectancy )  , country.Continent from city  where  country.Continent = \"Asia\"  or  country.Continent = \"Europe\"  group by country.Continent "
    },
    {
        "input": "[struct _ sep0] Find the average life expectancy and total population for each continent in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , avg ( country.LifeExpectancy )  , country.Continent from city  where  country.Continent = \"Africa\"  group by country.Continent "
    },
    {
        "input": "[struct _ sep0] Find the average life expectancy and total population for each continent are there in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , avg ( country.LifeExpectancy )  , country.Continent from city  where  country.Continent = \"Africa\"  group by country.Continent "
    },
    {
        "input": "[struct _ sep0] Find the average life expectancy and total population for each continent where Chinese is spoken ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Chinese ), isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , avg ( country.LifeExpectancy )  , country.Continent from city  where  countrylanguage.Language = \"Chinese\"  group by country.Continent "
    },
    {
        "input": "[struct _ sep0] Find the average life expectancy and total population for each continent speak Chinese ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Chinese ), isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , avg ( country.LifeExpectancy )  , country.Continent from city  where  countrylanguage.Language = \"Chinese\"  group by country.Continent "
    },
    {
        "input": "[struct _ sep0] Find the average life expectancy and total population for each continent in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , avg ( country.LifeExpectancy )  , country.Continent from city  where  country.Continent = \"Europe\"  group by country.Continent "
    },
    {
        "input": "[struct _ sep0] Find the average life expectancy and total population for each continent in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , avg ( country.LifeExpectancy )  , country.Continent from city  where  country.Continent = \"Europe\"  group by country.Continent "
    },
    {
        "input": "[struct _ sep0] Find the average life expectancy and total population for each continent in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , avg ( country.LifeExpectancy )  , country.Continent from city  where  country.Continent = \"Asia\"  group by country.Continent "
    },
    {
        "input": "[struct _ sep0] Find the average life expectancy and total population for each continent in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , avg ( country.LifeExpectancy )  , country.Continent from city  where  country.Continent = \"Asia\"  group by country.Continent "
    },
    {
        "input": "[struct _ sep0] Find the average life expectancy and total population for each continent in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , avg ( country.LifeExpectancy )  , country.Continent from city  where  country.Continent = \"Africa\"  group by country.Continent "
    },
    {
        "input": "[struct _ sep0] Find the average life expectancy and total population for each continent in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , avg ( country.LifeExpectancy )  , country.Continent from city  where  country.Continent = \"Africa\"  group by country.Continent "
    },
    {
        "input": "[struct _ sep0] Find the average life expectancy and total population for each continent are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , avg ( country.LifeExpectancy )  , country.Continent from city  where  country.Continent = \"Asia\"  group by country.Continent "
    },
    {
        "input": "[struct _ sep0] Find the average life expectancy and total population for each continent in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , avg ( country.LifeExpectancy )  , country.Continent from city  where  country.Continent = \"Asia\"  group by country.Continent "
    },
    {
        "input": "[struct _ sep0] Find the average life expectancy and total population for each continent have a population of 80000 ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , avg ( country.LifeExpectancy )  , country.Continent from city  where  country.Population = \"80000\"  group by country.Continent "
    },
    {
        "input": "[struct _ sep0] Find the average life expectancy and total population for each continent have a population equal to 80000 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , avg ( country.LifeExpectancy )  , country.Continent from city  where  country.Population = \"80000\"  group by country.Continent "
    },
    {
        "input": "[struct _ sep0] What are the different continents and the total popuation and average life expectancy corresponding to each in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , avg ( country.LifeExpectancy )  , country.Continent from city  where  country.Region = \"Caribbean\"  group by country.Continent "
    },
    {
        "input": "[struct _ sep0] What are the different continents and the total popuation and average life expectancy corresponding to each in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , avg ( country.LifeExpectancy )  , country.Continent from city  where  country.Name = \"Brazil\"  group by country.Continent "
    },
    {
        "input": "[struct _ sep0] What are the different continents and the total popuation and average life expectancy corresponding to each in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , avg ( country.LifeExpectancy )  , country.Continent from city  where  country.Region = \"Central Africa\"  group by country.Continent "
    },
    {
        "input": "[struct _ sep0] What are the different continents and the total popuation and average life expectancy corresponding to each in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , avg ( country.LifeExpectancy )  , country.Continent from city  where  country.Region = \"Central Africa\"  group by country.Continent "
    },
    {
        "input": "[struct _ sep0] What are the different continents and the total popuation and average life expectancy corresponding to each in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , avg ( country.LifeExpectancy )  , country.Continent from city  where  country.Continent = \"Asia\"  group by country.Continent "
    },
    {
        "input": "[struct _ sep0] What are the different continents and the total popuation and average life expectancy corresponding to each in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , avg ( country.LifeExpectancy )  , country.Continent from city  where  country.Continent = \"Asia\"  group by country.Continent "
    },
    {
        "input": "[struct _ sep0] What are the different continents and the total popuation and average life expectancy corresponding to each in Asia or Europe . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , avg ( country.LifeExpectancy )  , country.Continent from city  where  country.Continent = \"Asia\"  or  country.Continent = \"Europe\"  group by country.Continent "
    },
    {
        "input": "[struct _ sep0] What are the different continents and the total popuation and average life expectancy corresponding to each in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , avg ( country.LifeExpectancy )  , country.Continent from city  where  country.Continent = \"Africa\"  group by country.Continent "
    },
    {
        "input": "[struct _ sep0] What are the different continents and the total popuation and average life expectancy corresponding to each in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , avg ( country.LifeExpectancy )  , country.Continent from city  where  country.Continent = \"Europe\"  group by country.Continent "
    },
    {
        "input": "[struct _ sep0] What are the different continents and the total popuation and average life expectancy corresponding to each in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , avg ( country.LifeExpectancy )  , country.Continent from city  where  country.Continent = \"Europe\"  group by country.Continent "
    },
    {
        "input": "[struct _ sep0] What are the different continents and the total popuation and average life expectancy corresponding to each in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , avg ( country.LifeExpectancy )  , country.Continent from city  where  country.Continent = \"Asia\"  group by country.Continent "
    },
    {
        "input": "[struct _ sep0] What are the different continents and the total popuation and average life expectancy corresponding to each in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , avg ( country.LifeExpectancy )  , country.Continent from city  where  country.Continent = \"Asia\"  group by country.Continent "
    },
    {
        "input": "[struct _ sep0] What are the different continents and the total popuation and average life expectancy corresponding to each in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , avg ( country.LifeExpectancy )  , country.Continent from city  where  country.Continent = \"Africa\"  group by country.Continent "
    },
    {
        "input": "[struct _ sep0] What are the different continents and the total popuation and average life expectancy corresponding to each in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , avg ( country.LifeExpectancy )  , country.Continent from city  where  country.Continent = \"Africa\"  group by country.Continent "
    },
    {
        "input": "[struct _ sep0] What are the different continents and the total popuation and average life expectancy corresponding to each in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , avg ( country.LifeExpectancy )  , country.Continent from city  where  country.Continent = \"Asia\"  group by country.Continent "
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries that became independent after 1950 ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  country.IndepYear > 1950 "
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries with the lowest life expectancy . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries in Asia or Europe . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  country.Continent = \"Asia\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries speak both English and Dutch ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, Dutch ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.Language = \"Dutch\" "
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries where either English or Dutch is the official language ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, Dutch ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\"  or  countrylanguage.Language = \"Dutch\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries have either English or Dutch as an official language ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, Dutch ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\"  or  countrylanguage.Language = \"Dutch\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries with the largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries where English is not the official language ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries in which English is not the official language . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries that do not speak English ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries with the smallest population ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries that has the lowest population . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries with the largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries that has the largest area . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries with the top 3 largest population ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  order by country.Population desc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries with the 3 lowest populations ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries with the fewest people . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are names of countries that became independent after 1950 ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950 "
    },
    {
        "input": "[struct _ sep0] What are names of countries have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What are names of countries have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What are names of countries in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] What are names of countries in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] What are names of countries in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What are names of countries in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What are names of countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are names of countries with the lowest life expectancy . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are names of countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are names of countries that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What are names of countries in Asia or Europe . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What are names of countries in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What are names of countries speak both English and Dutch ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, Dutch ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.Language = \"Dutch\" "
    },
    {
        "input": "[struct _ sep0] What are names of countries where either English or Dutch is the official language ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, Dutch ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\"  or  countrylanguage.Language = \"Dutch\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] What are names of countries have either English or Dutch as an official language ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, Dutch ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\"  or  countrylanguage.Language = \"Dutch\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] What are names of countries with the largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are names of countries where English is not the official language ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] What are names of countries in which English is not the official language . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] What are names of countries that do not speak English ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] What are names of countries in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What are names of countries in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What are names of countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are names of countries in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are names of countries in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What are names of countries in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What are names of countries with the smallest population ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are names of countries that has the lowest population . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are names of countries with the largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are names of countries that has the largest area . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are names of countries with the top 5 largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.SurfaceArea desc limit 5"
    },
    {
        "input": "[struct _ sep0] What are names of countries with the 3 lowest populations ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] What are names of countries with the fewest people . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] What are names of countries are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are names of countries in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the nations that were founded after 1950 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950 "
    },
    {
        "input": "[struct _ sep0] What are the names of the nations in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the nations in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the nations in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the nations in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the nations in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the nations with the lowest life expectancy . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names of the nations in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the nations in Asia or Europe . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the nations whose government is US Territory ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( US Territory ), headofstate, capital, code2 ( US ) | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.GovernmentForm = \"US Territory\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the nations which are considered US Territory . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( US Territory ), headofstate, capital, code2 ( US ) | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.GovernmentForm = \"US Territory\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the nations in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the nations that use English and Dutch ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, Dutch ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.Language = \"Dutch\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the nations speak both English and French ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, French ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.Language = \"French\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the nations that speak both English and French . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, French ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.Language = \"French\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the nations where both English and French are official languages ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, French ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\"  and  countrylanguage.Language = \"French\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the nations with the largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names of the nations that do not use English ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the nations in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the nations in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the nations in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the nations in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the nations in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the nations in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the nations with the smallest population ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names of the nations with the largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names of the nations with the top 5 largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.SurfaceArea desc limit 5"
    },
    {
        "input": "[struct _ sep0] What are the names of the nations with the top 3 largest population ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.Population desc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the names of the nations in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Return the names of the 3 countries with the lowest life expectancy . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.LifeExpectancy asc limit 3"
    },
    {
        "input": "[struct _ sep0] Return the names of the 3 countries with the largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.SurfaceArea desc limit 3"
    },
    {
        "input": "[struct _ sep0] Return the names of the 3 countries with the smallest population ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] Return the names of the 3 countries that has the lowest population . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] Return the names of the 3 countries with the largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.SurfaceArea desc limit 3"
    },
    {
        "input": "[struct _ sep0] Return the names of the 3 countries that has the largest area . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.SurfaceArea desc limit 3"
    },
    {
        "input": "[struct _ sep0] Return the names of the 3 countries with the top 5 largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.SurfaceArea desc limit 5"
    },
    {
        "input": "[struct _ sep0] Return the names of the 3 countries with the top 3 largest population ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  order by country.Population desc limit 3"
    },
    {
        "input": "[struct _ sep0] how many countries that became independent after 1950 ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.IndepYear > 1950 "
    },
    {
        "input": "[struct _ sep0] how many countries have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] how many countries have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] how many countries in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] how many countries in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] how many countries in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] how many countries in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] how many countries that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] how many countries in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] how many countries speak both English and Dutch ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, Dutch ), isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.Language = \"Dutch\" "
    },
    {
        "input": "[struct _ sep0] how many countries where English is not the official language ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] how many countries in which English is not the official language . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] how many countries that do not speak English ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] how many countries in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] how many countries in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] how many countries in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] how many countries in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] Count the number of countries that became independent after 1950 ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.IndepYear > 1950 "
    },
    {
        "input": "[struct _ sep0] Count the number of countries have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Count the number of countries have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Count the number of countries in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] Count the number of countries do the countires in the Caribbean cover together ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] Count the number of countries in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] Count the number of countries in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] Count the number of countries in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] Count the number of countries that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Count the number of countries in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] Count the number of countries are there in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] Count the number of countries speak both English and Dutch ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, Dutch ), isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.Language = \"Dutch\" "
    },
    {
        "input": "[struct _ sep0] Count the number of countries where English is not the official language ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] Count the number of countries in which English is not the official language . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] Count the number of countries that do not speak English ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] Count the number of countries in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] Count the number of countries in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] Count the number of countries in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] Count the number of countries in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] Count the number of countries have a population of 80000 ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] Count the number of countries have a population equal to 80000 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the countries that are in the continent of Europe and in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  and  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the countries that are in the continent of Europe and in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  and  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the countries that are in the continent of Europe and in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Europe ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  and  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the countries that are in the continent of Europe and in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Europe ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  and  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the countries that are in the continent of Europe and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the countries that are in the continent of Europe and with the lowest life expectancy . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names of the countries that are in the continent of Europe and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the countries that are in the continent of Europe and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the countries that are in the continent of Europe and French as official languages . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( French ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  and  countrylanguage.Language = \"French\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the countries that are in the continent of Europe and with the largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names of the countries that are in the continent of Europe and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the countries that are in the continent of Europe and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the countries that are in the continent of Europe and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the countries that are in the continent of Europe and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the countries that are in the continent of Europe and whose government forms are not Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  and  country.GovernmentForm != \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the countries that are in the continent of Europe and do not have Republic for governments . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  and  country.GovernmentForm != \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the countries that are in the continent of Europe and with the smallest population ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names of the countries that are in the continent of Europe and with the largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names of the countries that are in the continent of Europe and with the top 5 largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  order by country.SurfaceArea desc limit 5"
    },
    {
        "input": "[struct _ sep0] What are the names of the countries that are in the continent of Europe and with the top 3 largest population ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  order by country.Population desc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the names of the countries that are in the continent of Europe and with the 3 lowest populations ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the names of the countries that are in the continent of Europe and with the fewest people . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the names of the countries that are in the continent of Europe and in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the names of countries that are in Europe and in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  and  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] Give the names of countries that are in Europe and in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  and  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] Give the names of countries that are in Europe and in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Europe ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  and  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the names of countries that are in Europe and in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Europe ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  and  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the names of countries that are in Europe and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the names of countries that are in Europe and with the lowest life expectancy . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the names of countries that are in Europe and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the names of countries that are in Europe and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the names of countries that are in Europe and French as official languages . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( French ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  and  countrylanguage.Language = \"French\"  and  countrylanguage.IsOfficial = \"T\" "
    },
    {
        "input": "[struct _ sep0] Give the names of countries that are in Europe and with the largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the names of countries that are in Europe and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the names of countries that are in Europe and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the names of countries that are in Europe and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the names of countries that are in Europe and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the names of countries that are in Europe and whose government forms are not Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  and  country.GovernmentForm != \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Give the names of countries that are in Europe and do not have Republic for governments . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  and  country.GovernmentForm != \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Give the names of countries that are in Europe and with the smallest population ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the names of countries that are in Europe and with the largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the names of countries that are in Europe and with the top 5 largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  order by country.SurfaceArea desc limit 5"
    },
    {
        "input": "[struct _ sep0] Give the names of countries that are in Europe and with the top 3 largest population ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  order by country.Population desc limit 3"
    },
    {
        "input": "[struct _ sep0] Give the names of countries that are in Europe and with the 3 lowest populations ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] Give the names of countries that are in Europe and with the fewest people . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] Give the names of countries that are in Europe and in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the total population and average area of countries in the continent of North America in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name ( Americana ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( North America ), region ( North America, Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , avg ( country.SurfaceArea )  from city  where  country.Continent = \"North America\"  and  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] What is the total population and average area of countries in the continent of North America in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name ( Americana ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( North America ), region ( North America ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , avg ( country.SurfaceArea )  from city  where  country.Continent = \"North America\"  and  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] What is the total population and average area of countries in the continent of North America in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name ( Americana ), countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( North America, Africa ), region ( Central Africa, North America ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , avg ( country.SurfaceArea )  from city  where  country.Continent = \"North America\"  and  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the total population and average area of countries in the continent of North America in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name ( Americana ), countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( North America, Africa ), region ( Central Africa, North America ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , avg ( country.SurfaceArea )  from city  where  country.Continent = \"North America\"  and  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the total population and average surface area corresponding to countries in North America in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name ( Americana ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( North America ), region ( North America, Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , avg ( country.SurfaceArea )  from city  where  country.Continent = \"North America\"  and  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] Give the total population and average surface area corresponding to countries in North America in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name ( Americana ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( North America ), region ( North America ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , avg ( country.SurfaceArea )  from city  where  country.Continent = \"North America\"  and  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] Give the total population and average surface area corresponding to countries in North America in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name ( Americana ), countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( North America, Africa ), region ( Central Africa, North America ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , avg ( country.SurfaceArea )  from city  where  country.Continent = \"North America\"  and  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the total population and average surface area corresponding to countries in North America in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name ( Americana ), countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( North America, Africa ), region ( Central Africa, North America ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , avg ( country.SurfaceArea )  from city  where  country.Continent = \"North America\"  and  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the cities that speaks English ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select city.Name from city  where  countrylanguage.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] Return the names of cities live in Gelderland district ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Gelderland ), population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select city.Name from city  where  city.District = \"Gelderland\" "
    },
    {
        "input": "[struct _ sep0] Return the names of cities that speaks English ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select city.Name from city  where  countrylanguage.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] Return the names of cities have a population that is above the average population across all cities ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select city.Name from city  where  @.@ > avg ( city.Population )  "
    },
    {
        "input": "[struct _ sep0] Which language used in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] Which language are spoken in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] Which language used in the country the name of whose head of state is Beatrix . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate ( Beatrix ), capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  country.HeadOfState = \"Beatrix\" "
    },
    {
        "input": "[struct _ sep0] Give the language used in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] Give the language are spoken in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] Give the language used in the country the name of whose head of state is Beatrix . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate ( Beatrix ), capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  country.HeadOfState = \"Beatrix\" "
    },
    {
        "input": "[struct _ sep0] List the names of conductors whose nationalities are not ' USA ' ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality ( USA ), year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  conductor.Nationality != \"USA\" "
    },
    {
        "input": "[struct _ sep0] List the names of conductors that do not have the nationality ' USA ' . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality ( USA ), year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  conductor.Nationality != \"USA\" "
    },
    {
        "input": "[struct _ sep0] List the names of conductors in descending order of years of work . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc"
    },
    {
        "input": "[struct _ sep0] List the names of conductors , sorted descending by the number of years they have worked ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc"
    },
    {
        "input": "[struct _ sep0] List the names of conductors with the most years of work . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc limit 1"
    },
    {
        "input": "[struct _ sep0] List the names of conductors who has worked the greatest number of years ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc limit 1"
    },
    {
        "input": "[struct _ sep0] List the names of conductors that has conducted orchestras founded after 2008 . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  orchestra.Year_of_Founded > 2008 "
    },
    {
        "input": "[struct _ sep0] List the names of conductors who have conducted orchestras founded after the year 2008 ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  orchestra.Year_of_Founded > 2008 "
    },
    {
        "input": "[struct _ sep0] What are the names of conductors , in descending order of years of work . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc"
    },
    {
        "input": "[struct _ sep0] What are the names of conductors , with the most years of work . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names of conductors in ascending order of age . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Age asc"
    },
    {
        "input": "[struct _ sep0] What are the names of conductors in descending order of years of work . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc"
    },
    {
        "input": "[struct _ sep0] What are the names of conductors , sorted descending by the number of years they have worked ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc"
    },
    {
        "input": "[struct _ sep0] What are the names of conductors with the most years of work . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names of conductors who has worked the greatest number of years ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names of conductors that has conducted orchestras founded after 2008 . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  orchestra.Year_of_Founded > 2008 "
    },
    {
        "input": "[struct _ sep0] What are the names of conductors who have conducted orchestras founded after the year 2008 ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  orchestra.Year_of_Founded > 2008 "
    },
    {
        "input": "[struct _ sep0] Return the names of conductors in ascending order of age . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Age asc"
    },
    {
        "input": "[struct _ sep0] Return the names of conductors ordered by age ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Age asc"
    },
    {
        "input": "[struct _ sep0] Return the names of conductors in descending order of years of work . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc"
    },
    {
        "input": "[struct _ sep0] Return the names of conductors , sorted descending by the number of years they have worked ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc"
    },
    {
        "input": "[struct _ sep0] Return the names of conductors with the most years of work . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc limit 1"
    },
    {
        "input": "[struct _ sep0] Return the names of conductors who has worked the greatest number of years ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc limit 1"
    },
    {
        "input": "[struct _ sep0] Return the names of conductors that has conducted orchestras founded after 2008 . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  orchestra.Year_of_Founded > 2008 "
    },
    {
        "input": "[struct _ sep0] Return the names of conductors who have conducted orchestras founded after the year 2008 ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  orchestra.Year_of_Founded > 2008 "
    },
    {
        "input": "[struct _ sep0] Return the record companies of orchestras that have no performance . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select orchestra.Record_Company from conductor  where  @.@ not in performance.* "
    },
    {
        "input": "[struct _ sep0] Return the record companies of orchestras that do not have any performances ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select orchestra.Record_Company from conductor  where  @.@ not in performance.* "
    },
    {
        "input": "[struct _ sep0] Return the record companies of orchestras whose record format is ' CD ' or ' DVD ' . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format ( DVD, CD ) | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select orchestra.Record_Company from conductor  where  orchestra.Major_Record_Format = \"CD\"  or  orchestra.Major_Record_Format = \"DVD\" "
    },
    {
        "input": "[struct _ sep0] Return the record companies of orchestras that have CD or DVD as their record format . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format ( DVD, CD ) | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select orchestra.Record_Company from conductor  where  orchestra.Major_Record_Format = \"CD\"  or  orchestra.Major_Record_Format = \"DVD\" "
    },
    {
        "input": "[struct _ sep0] List names of conductors in ascending order of age . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Age asc"
    },
    {
        "input": "[struct _ sep0] List names of conductors whose nationalities are not ' USA ' ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality ( USA ), year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  conductor.Nationality != \"USA\" "
    },
    {
        "input": "[struct _ sep0] List names of conductors that do not have the nationality ' USA ' . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality ( USA ), year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  conductor.Nationality != \"USA\" "
    },
    {
        "input": "[struct _ sep0] List names of conductors with the most years of work . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc limit 1"
    },
    {
        "input": "[struct _ sep0] List names of conductors who has worked the greatest number of years ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc limit 1"
    },
    {
        "input": "[struct _ sep0] List names of conductors that has conducted orchestras founded after 2008 . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  orchestra.Year_of_Founded > 2008 "
    },
    {
        "input": "[struct _ sep0] List names of conductors who have conducted orchestras founded after the year 2008 ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  orchestra.Year_of_Founded > 2008 "
    },
    {
        "input": "[struct _ sep0] What are the names of conductors in ascending order of age . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Age asc"
    },
    {
        "input": "[struct _ sep0] What are the names of conductors whose nationalities are not ' USA ' ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality ( USA ), year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  conductor.Nationality != \"USA\" "
    },
    {
        "input": "[struct _ sep0] What are the names of conductors that do not have the nationality ' USA ' . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality ( USA ), year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  conductor.Nationality != \"USA\" "
    },
    {
        "input": "[struct _ sep0] What are the names of conductors with the most years of work . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names of conductors who has worked the greatest number of years ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names of conductors that has conducted orchestras founded after 2008 . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  orchestra.Year_of_Founded > 2008 "
    },
    {
        "input": "[struct _ sep0] What are the names of conductors who have conducted orchestras founded after the year 2008 ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  orchestra.Year_of_Founded > 2008 "
    },
    {
        "input": "[struct _ sep0] List the name of the conductor in ascending order of age . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Age asc"
    },
    {
        "input": "[struct _ sep0] List the name of the conductor ordered by age ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Age asc"
    },
    {
        "input": "[struct _ sep0] List the name of the conductor whose nationalities are not ' USA ' ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality ( USA ), year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  conductor.Nationality != \"USA\" "
    },
    {
        "input": "[struct _ sep0] List the name of the conductor that do not have the nationality ' USA ' . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality ( USA ), year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  conductor.Nationality != \"USA\" "
    },
    {
        "input": "[struct _ sep0] List the name of the conductor in descending order of years of work . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc"
    },
    {
        "input": "[struct _ sep0] List the name of the conductor , sorted descending by the number of years they have worked ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc"
    },
    {
        "input": "[struct _ sep0] List the name of the conductor that has conducted orchestras founded after 2008 . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  orchestra.Year_of_Founded > 2008 "
    },
    {
        "input": "[struct _ sep0] List the name of the conductor who have conducted orchestras founded after the year 2008 ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  orchestra.Year_of_Founded > 2008 "
    },
    {
        "input": "[struct _ sep0] What is the name of the conductor in ascending order of age . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Age asc"
    },
    {
        "input": "[struct _ sep0] What is the name of the conductor whose nationalities are not ' USA ' ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality ( USA ), year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  conductor.Nationality != \"USA\" "
    },
    {
        "input": "[struct _ sep0] What is the name of the conductor that do not have the nationality ' USA ' . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality ( USA ), year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  conductor.Nationality != \"USA\" "
    },
    {
        "input": "[struct _ sep0] What is the name of the conductor in descending order of years of work . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc"
    },
    {
        "input": "[struct _ sep0] What is the name of the conductor , sorted descending by the number of years they have worked ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc"
    },
    {
        "input": "[struct _ sep0] What is the name of the conductor that has conducted orchestras founded after 2008 . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  orchestra.Year_of_Founded > 2008 "
    },
    {
        "input": "[struct _ sep0] What is the name of the conductor who have conducted orchestras founded after the year 2008 ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  orchestra.Year_of_Founded > 2008 "
    },
    {
        "input": "[struct _ sep0] Show the names of conductors in ascending order of age . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Age asc"
    },
    {
        "input": "[struct _ sep0] Show the names of conductors whose nationalities are not ' USA ' ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality ( USA ), year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  conductor.Nationality != \"USA\" "
    },
    {
        "input": "[struct _ sep0] Show the names of conductors that do not have the nationality ' USA ' . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality ( USA ), year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  conductor.Nationality != \"USA\" "
    },
    {
        "input": "[struct _ sep0] Show the names of conductors in descending order of years of work . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc"
    },
    {
        "input": "[struct _ sep0] Show the names of conductors , sorted descending by the number of years they have worked ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc"
    },
    {
        "input": "[struct _ sep0] Show the names of conductors with the most years of work . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc limit 1"
    },
    {
        "input": "[struct _ sep0] Show the names of conductors who has worked the greatest number of years ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc limit 1"
    },
    {
        "input": "[struct _ sep0] Show the names of conductors that has conducted orchestras founded after 2008 . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  orchestra.Year_of_Founded > 2008 "
    },
    {
        "input": "[struct _ sep0] Show the names of conductors who have conducted orchestras founded after the year 2008 ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  orchestra.Year_of_Founded > 2008 "
    },
    {
        "input": "[struct _ sep0] What are the names of conductors in ascending order of age . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Age asc"
    },
    {
        "input": "[struct _ sep0] What are the names of conductors whose nationalities are not ' USA ' ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality ( USA ), year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  conductor.Nationality != \"USA\" "
    },
    {
        "input": "[struct _ sep0] What are the names of conductors that do not have the nationality ' USA ' . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality ( USA ), year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  conductor.Nationality != \"USA\" "
    },
    {
        "input": "[struct _ sep0] What are the names of conductors in descending order of years of work . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc"
    },
    {
        "input": "[struct _ sep0] What are the names of conductors , sorted descending by the number of years they have worked ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc"
    },
    {
        "input": "[struct _ sep0] What are the names of conductors with the most years of work . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names of conductors who has worked the greatest number of years ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names of conductors that has conducted orchestras founded after 2008 . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  orchestra.Year_of_Founded > 2008 "
    },
    {
        "input": "[struct _ sep0] What are the names of conductors who have conducted orchestras founded after the year 2008 ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  orchestra.Year_of_Founded > 2008 "
    },
    {
        "input": "[struct _ sep0] Show the name of the conductor in ascending order of age . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Age asc"
    },
    {
        "input": "[struct _ sep0] Show the name of the conductor whose nationalities are not ' USA ' ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality ( USA ), year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  conductor.Nationality != \"USA\" "
    },
    {
        "input": "[struct _ sep0] Show the name of the conductor that do not have the nationality ' USA ' . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality ( USA ), year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  conductor.Nationality != \"USA\" "
    },
    {
        "input": "[struct _ sep0] Show the name of the conductor in descending order of years of work . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc"
    },
    {
        "input": "[struct _ sep0] Show the name of the conductor , sorted descending by the number of years they have worked ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc"
    },
    {
        "input": "[struct _ sep0] Show the name of the conductor with the most years of work . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc limit 1"
    },
    {
        "input": "[struct _ sep0] Show the name of the conductor who has worked the greatest number of years ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc limit 1"
    },
    {
        "input": "[struct _ sep0] Show the name of the conductor that have conducted more than one orchestras . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  count ( orchestra.* )  > 1  group by orchestra.Conductor_ID "
    },
    {
        "input": "[struct _ sep0] Show the name of the conductor who have conducted at more than one orchestra ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  count ( orchestra.* )  > 1  group by orchestra.Conductor_ID "
    },
    {
        "input": "[struct _ sep0] Show the name of the conductor that has conducted orchestras founded after 2008 . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  orchestra.Year_of_Founded > 2008 "
    },
    {
        "input": "[struct _ sep0] Show the name of the conductor who have conducted orchestras founded after the year 2008 ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  orchestra.Year_of_Founded > 2008 "
    },
    {
        "input": "[struct _ sep0] What is the name of the conductor in ascending order of age . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Age asc"
    },
    {
        "input": "[struct _ sep0] What is the name of the conductor whose nationalities are not ' USA ' ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality ( USA ), year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  conductor.Nationality != \"USA\" "
    },
    {
        "input": "[struct _ sep0] What is the name of the conductor that do not have the nationality ' USA ' . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality ( USA ), year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  conductor.Nationality != \"USA\" "
    },
    {
        "input": "[struct _ sep0] What is the name of the conductor in descending order of years of work . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc"
    },
    {
        "input": "[struct _ sep0] What is the name of the conductor , sorted descending by the number of years they have worked ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc"
    },
    {
        "input": "[struct _ sep0] What is the name of the conductor with the most years of work . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the name of the conductor who has worked the greatest number of years ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the name of the conductor that have conducted more than one orchestras . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  count ( orchestra.* )  > 1  group by orchestra.Conductor_ID "
    },
    {
        "input": "[struct _ sep0] What is the name of the conductor who have conducted at more than one orchestra ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  count ( orchestra.* )  > 1  group by orchestra.Conductor_ID "
    },
    {
        "input": "[struct _ sep0] What is the name of the conductor that has conducted orchestras founded after 2008 . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  orchestra.Year_of_Founded > 2008 "
    },
    {
        "input": "[struct _ sep0] What is the name of the conductor who have conducted orchestras founded after the year 2008 ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  orchestra.Year_of_Founded > 2008 "
    },
    {
        "input": "[struct _ sep0] Please show the name of the conductor in ascending order of age . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Age asc"
    },
    {
        "input": "[struct _ sep0] Please show the name of the conductor whose nationalities are not ' USA ' ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality ( USA ), year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  conductor.Nationality != \"USA\" "
    },
    {
        "input": "[struct _ sep0] Please show the name of the conductor that do not have the nationality ' USA ' . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality ( USA ), year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  conductor.Nationality != \"USA\" "
    },
    {
        "input": "[struct _ sep0] Please show the name of the conductor in descending order of years of work . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc"
    },
    {
        "input": "[struct _ sep0] Please show the name of the conductor , sorted descending by the number of years they have worked ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc"
    },
    {
        "input": "[struct _ sep0] Please show the name of the conductor with the most years of work . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc limit 1"
    },
    {
        "input": "[struct _ sep0] Please show the name of the conductor who has worked the greatest number of years ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names of conductors in ascending order of age . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Age asc"
    },
    {
        "input": "[struct _ sep0] What are the names of conductors whose nationalities are not ' USA ' ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality ( USA ), year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  conductor.Nationality != \"USA\" "
    },
    {
        "input": "[struct _ sep0] What are the names of conductors that do not have the nationality ' USA ' . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality ( USA ), year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  conductor.Nationality != \"USA\" "
    },
    {
        "input": "[struct _ sep0] What are the names of conductors in descending order of years of work . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc"
    },
    {
        "input": "[struct _ sep0] What are the names of conductors , sorted descending by the number of years they have worked ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc"
    },
    {
        "input": "[struct _ sep0] What are the names of conductors with the most years of work . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names of conductors who has worked the greatest number of years ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc limit 1"
    },
    {
        "input": "[struct _ sep0] List the names of orchestras , sorted descending by the years in which they were founded . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select orchestra.Orchestra from conductor  order by orchestra.Year_of_Founded desc"
    },
    {
        "input": "[struct _ sep0] List the names of orchestras whose record format is ' CD ' or ' DVD ' . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format ( DVD, CD ) | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select orchestra.Orchestra from conductor  where  orchestra.Major_Record_Format = \"CD\"  or  orchestra.Major_Record_Format = \"DVD\" "
    },
    {
        "input": "[struct _ sep0] List the names of orchestras that have CD or DVD as their record format . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format ( DVD, CD ) | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select orchestra.Orchestra from conductor  where  orchestra.Major_Record_Format = \"CD\"  or  orchestra.Major_Record_Format = \"DVD\" "
    },
    {
        "input": "[struct _ sep0] What are the orchestras , sorted descending by the years in which they were founded . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select orchestra.Orchestra from conductor  order by orchestra.Year_of_Founded desc"
    },
    {
        "input": "[struct _ sep0] What are the orchestras whose record format is ' CD ' or ' DVD ' . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format ( DVD, CD ) | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select orchestra.Orchestra from conductor  where  orchestra.Major_Record_Format = \"CD\"  or  orchestra.Major_Record_Format = \"DVD\" "
    },
    {
        "input": "[struct _ sep0] What are the orchestras that have CD or DVD as their record format . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format ( DVD, CD ) | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select orchestra.Orchestra from conductor  where  orchestra.Major_Record_Format = \"CD\"  or  orchestra.Major_Record_Format = \"DVD\" "
    },
    {
        "input": "[struct _ sep0] Find the number of orchestras that have no performance . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select count ( orchestra.* )  from conductor  where  @.@ not in performance.* "
    },
    {
        "input": "[struct _ sep0] Find the number of orchestras that do not have any performances ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select count ( orchestra.* )  from conductor  where  @.@ not in performance.* "
    },
    {
        "input": "[struct _ sep0] Count the number of orchestras that have no performance . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select count ( orchestra.* )  from conductor  where  @.@ not in performance.* "
    },
    {
        "input": "[struct _ sep0] Count the number of orchestras that do not have any performances ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select count ( orchestra.* )  from conductor  where  @.@ not in performance.* "
    },
    {
        "input": "[struct _ sep0] Show the years in which orchestras , sorted descending by the years in which they were founded . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select orchestra.Year_of_Founded from conductor  order by orchestra.Year_of_Founded desc"
    },
    {
        "input": "[struct _ sep0] Show the years in which orchestras that have no performance . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select orchestra.Year_of_Founded from conductor  where  @.@ not in performance.* "
    },
    {
        "input": "[struct _ sep0] Show the years in which orchestras that do not have any performances ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select orchestra.Year_of_Founded from conductor  where  @.@ not in performance.* "
    },
    {
        "input": "[struct _ sep0] Show the years in which orchestras whose record format is ' CD ' or ' DVD ' . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format ( DVD, CD ) | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select orchestra.Year_of_Founded from conductor  where  orchestra.Major_Record_Format = \"CD\"  or  orchestra.Major_Record_Format = \"DVD\" "
    },
    {
        "input": "[struct _ sep0] Show the years in which orchestras that have CD or DVD as their record format . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format ( DVD, CD ) | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select orchestra.Year_of_Founded from conductor  where  orchestra.Major_Record_Format = \"CD\"  or  orchestra.Major_Record_Format = \"DVD\" "
    },
    {
        "input": "[struct _ sep0] What are years of founding for orchestras , sorted descending by the years in which they were founded . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select orchestra.Year_of_Founded from conductor  order by orchestra.Year_of_Founded desc"
    },
    {
        "input": "[struct _ sep0] What are years of founding for orchestras that have no performance . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select orchestra.Year_of_Founded from conductor  where  @.@ not in performance.* "
    },
    {
        "input": "[struct _ sep0] What are years of founding for orchestras that do not have any performances ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select orchestra.Year_of_Founded from conductor  where  @.@ not in performance.* "
    },
    {
        "input": "[struct _ sep0] What are years of founding for orchestras whose record format is ' CD ' or ' DVD ' . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format ( DVD, CD ) | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select orchestra.Year_of_Founded from conductor  where  orchestra.Major_Record_Format = \"CD\"  or  orchestra.Major_Record_Format = \"DVD\" "
    },
    {
        "input": "[struct _ sep0] What are years of founding for orchestras that have CD or DVD as their record format . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format ( DVD, CD ) | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select orchestra.Year_of_Founded from conductor  where  orchestra.Major_Record_Format = \"CD\"  or  orchestra.Major_Record_Format = \"DVD\" "
    },
    {
        "input": "[struct _ sep0] Return the grade for the high schooler in grade 10 . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Return the grade for the high schooler in grade 10 ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Return the grade for the high schooler are there in grade 9 or 10 ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  highschooler.grade = 9  or  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Return the grade for the high schooler in grades 9 or 10 . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  highschooler.grade = 9  or  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Show the names of all high schoolers named Kyle . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  highschooler.name = \"Kyle\" "
    },
    {
        "input": "[struct _ sep0] Show the names of all high schoolers named Kyle . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  highschooler.name = \"Kyle\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all high schoolers named Kyle . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  highschooler.name = \"Kyle\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all high schoolers named Kyle . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  highschooler.name = \"Kyle\" "
    },
    {
        "input": "[struct _ sep0] Show the ID of the high schooler in grade 10 . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.ID from highschooler  where  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Show the ID of the high schooler in grade 10 ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.ID from highschooler  where  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Show the ID of the high schooler are there in grade 9 or 10 ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.ID from highschooler  where  highschooler.grade = 9  or  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Show the ID of the high schooler in grades 9 or 10 . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.ID from highschooler  where  highschooler.grade = 9  or  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] How many high schoolers named Kyle . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select count ( highschooler.* )  from highschooler  where  highschooler.name = \"Kyle\" "
    },
    {
        "input": "[struct _ sep0] How many high schoolers named Kyle . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select count ( highschooler.* )  from highschooler  where  highschooler.name = \"Kyle\" "
    },
    {
        "input": "[struct _ sep0] Count the number of high schoolers named Kyle . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select count ( highschooler.* )  from highschooler  where  highschooler.name = \"Kyle\" "
    },
    {
        "input": "[struct _ sep0] Count the number of high schoolers named Kyle . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select count ( highschooler.* )  from highschooler  where  highschooler.name = \"Kyle\" "
    },
    {
        "input": "[struct _ sep0] Which grade in grade 10 . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Which grade in grade 10 ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Which grade in grades 9 or 10 . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  highschooler.grade = 9  or  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Which grade that have at least 4 students . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  count ( highschooler.* )  >= 4  group by highschooler.grade "
    },
    {
        "input": "[struct _ sep0] Which grade have 4 or more high schoolers ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  count ( highschooler.* )  >= 4  group by highschooler.grade "
    },
    {
        "input": "[struct _ sep0] Return the grade named Kyle . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  highschooler.name = \"Kyle\" "
    },
    {
        "input": "[struct _ sep0] Return the grade in grade 10 . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Return the grade in grade 10 ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Return the grade named Kyle . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  highschooler.name = \"Kyle\" "
    },
    {
        "input": "[struct _ sep0] Return the grade are there in grade 9 or 10 ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  highschooler.grade = 9  or  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Return the grade in grades 9 or 10 . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  highschooler.grade = 9  or  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Return the grade that have at least 4 students . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  count ( highschooler.* )  >= 4  group by highschooler.grade "
    },
    {
        "input": "[struct _ sep0] Return the grade have 4 or more high schoolers ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  count ( highschooler.* )  >= 4  group by highschooler.grade "
    },
    {
        "input": "[struct _ sep0] Show me all grades named Kyle . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  highschooler.name = \"Kyle\" "
    },
    {
        "input": "[struct _ sep0] Show me all grades in grade 10 . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Show me all grades in grade 10 ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Show me all grades named Kyle . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  highschooler.name = \"Kyle\" "
    },
    {
        "input": "[struct _ sep0] Show me all grades are there in grade 9 or 10 ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  highschooler.grade = 9  or  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Show me all grades in grades 9 or 10 . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  highschooler.grade = 9  or  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Which grades in grade 10 . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Which grades in grade 10 ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Which grades in grades 9 or 10 . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  highschooler.grade = 9  or  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] What is the name of the high schooler named Kyle . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  highschooler.name = \"Kyle\" "
    },
    {
        "input": "[struct _ sep0] What is the name of the high schooler in grade 10 . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] What is the name of the high schooler in grade 10 ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] What is the name of the high schooler named Kyle . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  highschooler.name = \"Kyle\" "
    },
    {
        "input": "[struct _ sep0] What is the name of the high schooler are there in grade 9 or 10 ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  highschooler.grade = 9  or  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] What is the name of the high schooler in grades 9 or 10 . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  highschooler.grade = 9  or  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] What is the name of the high schooler who have at least 3 friends . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  count ( friend.* )  >= 3  group by friend.student_id "
    },
    {
        "input": "[struct _ sep0] What is the name of the high schooler who have 3 or more friends ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  count ( friend.* )  >= 3  group by friend.student_id "
    },
    {
        "input": "[struct _ sep0] Return the name of the high school student who do not have any friends . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  except_  @.@ is friend.* "
    },
    {
        "input": "[struct _ sep0] Return the name of the high school student who do not have friends ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  except_  @.@ is friend.* "
    },
    {
        "input": "[struct _ sep0] Show the names of high schoolers named Kyle . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  highschooler.name = \"Kyle\" "
    },
    {
        "input": "[struct _ sep0] Show the names of high schoolers in grade 10 . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Show the names of high schoolers in grade 10 ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Show the names of high schoolers named Kyle . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  highschooler.name = \"Kyle\" "
    },
    {
        "input": "[struct _ sep0] Show the names of high schoolers are there in grade 9 or 10 ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  highschooler.grade = 9  or  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Show the names of high schoolers in grades 9 or 10 . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  highschooler.grade = 9  or  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] What are the names of high schoolers named Kyle . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  highschooler.name = \"Kyle\" "
    },
    {
        "input": "[struct _ sep0] What are the names of high schoolers in grade 10 . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] What are the names of high schoolers in grade 10 ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] What are the names of high schoolers named Kyle . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  highschooler.name = \"Kyle\" "
    },
    {
        "input": "[struct _ sep0] What are the names of high schoolers are there in grade 9 or 10 ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  highschooler.grade = 9  or  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] What are the names of high schoolers in grades 9 or 10 . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  highschooler.grade = 9  or  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Show ids of all students named Kyle . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.ID from highschooler  where  highschooler.name = \"Kyle\" "
    },
    {
        "input": "[struct _ sep0] Show ids of all students in grade 10 . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.ID from highschooler  where  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Show ids of all students in grade 10 ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.ID from highschooler  where  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Show ids of all students named Kyle . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.ID from highschooler  where  highschooler.name = \"Kyle\" "
    },
    {
        "input": "[struct _ sep0] Show ids of all students are there in grade 9 or 10 ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.ID from highschooler  where  highschooler.grade = 9  or  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Show ids of all students in grades 9 or 10 . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.ID from highschooler  where  highschooler.grade = 9  or  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] What are the ids of high school students in grade 10 . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.ID from highschooler  where  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] What are the ids of high school students in grade 10 ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.ID from highschooler  where  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] What are the ids of high school students in grades 9 or 10 . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.ID from highschooler  where  highschooler.grade = 9  or  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] What is the name of the high schooler named Kyle . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  highschooler.name = \"Kyle\" "
    },
    {
        "input": "[struct _ sep0] What is the name of the high schooler in grade 10 . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] What is the name of the high schooler in grade 10 ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] What is the name of the high schooler named Kyle . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  highschooler.name = \"Kyle\" "
    },
    {
        "input": "[struct _ sep0] What is the name of the high schooler are there in grade 9 or 10 ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  highschooler.grade = 9  or  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] What is the name of the high schooler in grades 9 or 10 . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  highschooler.grade = 9  or  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Give the name of the student who do not have any friends . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  except_  @.@ is friend.* "
    },
    {
        "input": "[struct _ sep0] Give the name of the student who do not have friends ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  except_  @.@ is friend.* "
    },
    {
        "input": "[struct _ sep0] Give the name of the student who have at least 2 likes . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  count ( likes.* )  >= 2  group by likes.student_id "
    },
    {
        "input": "[struct _ sep0] Give the name of the student who have 2 or more likes ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  count ( likes.* )  >= 2  group by likes.student_id "
    },
    {
        "input": "[struct _ sep0] Show the names of students who do not have any friends . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  except_  @.@ is friend.* "
    },
    {
        "input": "[struct _ sep0] Show the names of students who do not have friends ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  except_  @.@ is friend.* "
    },
    {
        "input": "[struct _ sep0] What are the names of students who do not have any friends . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  except_  @.@ is friend.* "
    },
    {
        "input": "[struct _ sep0] What are the names of students who do not have friends ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  except_  @.@ is friend.* "
    },
    {
        "input": "[struct _ sep0] What are the names of the dogs have an age below the average ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select dogs.name from breeds  where  @.@ < avg ( dogs.age )  "
    },
    {
        "input": "[struct _ sep0] Which first names are used for professionals who did not perform any treatment on dogs . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.first_name from breeds  where  except_  @.@ is treatments.* "
    },
    {
        "input": "[struct _ sep0] Which first names are used for professionals who have done treatment with cost below average ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.first_name from breeds  where  @.@ < avg ( treatments.cost_of_treatment )  "
    },
    {
        "input": "[struct _ sep0] Which first names are used for professionals who live in the state of Hawaii or the state of Wisconsin . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state ( Wisconsin ), zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state ( Wisconsin, Hawaii ), zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.first_name from breeds  where  professionals.state = \"Hawaii\"  or  professionals.state = \"Wisconsin\" "
    },
    {
        "input": "[struct _ sep0] Which first names are used for professionals living in either the state of Hawaii or the state of Wisconsin ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state ( Wisconsin ), zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state ( Wisconsin, Hawaii ), zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.first_name from breeds  where  professionals.state = \"Hawaii\"  or  professionals.state = \"Wisconsin\" "
    },
    {
        "input": "[struct _ sep0] Which first names are used for professionals living in a city that contains the substring ' West ' . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.first_name from breeds  where  professionals.city like \"%West%\" "
    },
    {
        "input": "[struct _ sep0] Which first names are used for professionals did not operate any treatment on dogs ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.first_name from breeds  where  @.@ not in treatments.* "
    },
    {
        "input": "[struct _ sep0] Which first names are used for professionals who have not treated any dogs . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.first_name from breeds  where  @.@ not in treatments.* "
    },
    {
        "input": "[struct _ sep0] Give me the id , role and email of the professionals or owners but are not used as dog names ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.professional_id , professionals.role_code , professionals.email_address from breeds  where  except_  @.@ is dogs.* "
    },
    {
        "input": "[struct _ sep0] Give me the id , role and email of the professionals who have done treatment with cost below average ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.professional_id , professionals.role_code , professionals.email_address from breeds  where  @.@ < avg ( treatments.cost_of_treatment )  "
    },
    {
        "input": "[struct _ sep0] Give me the id , role and email of the professionals who live in the state of Hawaii or the state of Wisconsin . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state ( Wisconsin ), zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state ( Wisconsin, Hawaii ), zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.professional_id , professionals.role_code , professionals.email_address from breeds  where  professionals.state = \"Hawaii\"  or  professionals.state = \"Wisconsin\" "
    },
    {
        "input": "[struct _ sep0] Give me the id , role and email of the professionals living in either the state of Hawaii or the state of Wisconsin ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state ( Wisconsin ), zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state ( Wisconsin, Hawaii ), zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.professional_id , professionals.role_code , professionals.email_address from breeds  where  professionals.state = \"Hawaii\"  or  professionals.state = \"Wisconsin\" "
    },
    {
        "input": "[struct _ sep0] Give me the id , role and email of the professionals living in a city that contains the substring ' West ' . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.professional_id , professionals.role_code , professionals.email_address from breeds  where  professionals.city like \"%West%\" "
    },
    {
        "input": "[struct _ sep0] Give me the id , role and email of the professionals did not operate any treatment on dogs ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.professional_id , professionals.role_code , professionals.email_address from breeds  where  @.@ not in treatments.* "
    },
    {
        "input": "[struct _ sep0] Give me the id , role and email of the professionals who have not treated any dogs . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.professional_id , professionals.role_code , professionals.email_address from breeds  where  @.@ not in treatments.* "
    },
    {
        "input": "[struct _ sep0] Return the owner id , first name and last name of the owner living in a state whose name contains the substring ' North ' . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select owners.owner_id , owners.first_name , owners.last_name from breeds  where  owners.state like \"%North%\" "
    },
    {
        "input": "[struct _ sep0] Return the owner id , first name and last name of the owner temporarily do not have any dogs ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select owners.owner_id , owners.first_name , owners.last_name from breeds  where  @.@ not in dogs.* "
    },
    {
        "input": "[struct _ sep0] Return the owner id , first name and last name of the owner who do not own any dogs at this moment . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select owners.owner_id , owners.first_name , owners.last_name from breeds  where  @.@ not in dogs.* "
    },
    {
        "input": "[struct _ sep0] What are the id , role , and first name of the professionals or owners but are not used as dog names ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.professional_id , professionals.role_code , professionals.first_name from breeds  where  except_  @.@ is dogs.* "
    },
    {
        "input": "[struct _ sep0] What are the id , role , and first name of the professionals who did not perform any treatment on dogs . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.professional_id , professionals.role_code , professionals.first_name from breeds  where  except_  @.@ is treatments.* "
    },
    {
        "input": "[struct _ sep0] What are the id , role , and first name of the professionals who have done treatment with cost below average ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.professional_id , professionals.role_code , professionals.first_name from breeds  where  @.@ < avg ( treatments.cost_of_treatment )  "
    },
    {
        "input": "[struct _ sep0] What are the id , role , and first name of the professionals who live in the state of Hawaii or the state of Wisconsin . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state ( Wisconsin ), zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state ( Wisconsin, Hawaii ), zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.professional_id , professionals.role_code , professionals.first_name from breeds  where  professionals.state = \"Hawaii\"  or  professionals.state = \"Wisconsin\" "
    },
    {
        "input": "[struct _ sep0] What are the id , role , and first name of the professionals living in either the state of Hawaii or the state of Wisconsin ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state ( Wisconsin ), zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state ( Wisconsin, Hawaii ), zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.professional_id , professionals.role_code , professionals.first_name from breeds  where  professionals.state = \"Hawaii\"  or  professionals.state = \"Wisconsin\" "
    },
    {
        "input": "[struct _ sep0] What are the id , role , and first name of the professionals living in a city that contains the substring ' West ' . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.professional_id , professionals.role_code , professionals.first_name from breeds  where  professionals.city like \"%West%\" "
    },
    {
        "input": "[struct _ sep0] What are the id , role , and first name of the professionals did not operate any treatment on dogs ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.professional_id , professionals.role_code , professionals.first_name from breeds  where  @.@ not in treatments.* "
    },
    {
        "input": "[struct _ sep0] What are the id , role , and first name of the professionals who have not treated any dogs . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.professional_id , professionals.role_code , professionals.first_name from breeds  where  @.@ not in treatments.* "
    },
    {
        "input": "[struct _ sep0] Tell me the owner id and last name of the owner living in a state whose name contains the substring ' North ' . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select owners.owner_id , owners.last_name from breeds  where  owners.state like \"%North%\" "
    },
    {
        "input": "[struct _ sep0] Tell me the owner id and last name of the owner temporarily do not have any dogs ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select owners.owner_id , owners.last_name from breeds  where  @.@ not in dogs.* "
    },
    {
        "input": "[struct _ sep0] Tell me the owner id and last name of the owner who do not own any dogs at this moment . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select owners.owner_id , owners.last_name from breeds  where  @.@ not in dogs.* "
    },
    {
        "input": "[struct _ sep0] Find the owner id and zip code of the owner living in a state whose name contains the substring ' North ' . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select owners.owner_id , owners.zip_code from breeds  where  owners.state like \"%North%\" "
    },
    {
        "input": "[struct _ sep0] Find the owner id and zip code of the owner temporarily do not have any dogs ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select owners.owner_id , owners.zip_code from breeds  where  @.@ not in dogs.* "
    },
    {
        "input": "[struct _ sep0] Find the owner id and zip code of the owner who do not own any dogs at this moment . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select owners.owner_id , owners.zip_code from breeds  where  @.@ not in dogs.* "
    },
    {
        "input": "[struct _ sep0] Find the id and cell phone of the professionals or owners but are not used as dog names ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.professional_id , professionals.cell_number from breeds  where  except_  @.@ is dogs.* "
    },
    {
        "input": "[struct _ sep0] Find the id and cell phone of the professionals who did not perform any treatment on dogs . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.professional_id , professionals.cell_number from breeds  where  except_  @.@ is treatments.* "
    },
    {
        "input": "[struct _ sep0] Find the id and cell phone of the professionals who have done treatment with cost below average ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.professional_id , professionals.cell_number from breeds  where  @.@ < avg ( treatments.cost_of_treatment )  "
    },
    {
        "input": "[struct _ sep0] Find the id and cell phone of the professionals who live in the state of Hawaii or the state of Wisconsin . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state ( Wisconsin ), zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state ( Wisconsin, Hawaii ), zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.professional_id , professionals.cell_number from breeds  where  professionals.state = \"Hawaii\"  or  professionals.state = \"Wisconsin\" "
    },
    {
        "input": "[struct _ sep0] Find the id and cell phone of the professionals living in either the state of Hawaii or the state of Wisconsin ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state ( Wisconsin ), zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state ( Wisconsin, Hawaii ), zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.professional_id , professionals.cell_number from breeds  where  professionals.state = \"Hawaii\"  or  professionals.state = \"Wisconsin\" "
    },
    {
        "input": "[struct _ sep0] Find the id and cell phone of the professionals living in a city that contains the substring ' West ' . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.professional_id , professionals.cell_number from breeds  where  professionals.city like \"%West%\" "
    },
    {
        "input": "[struct _ sep0] Find the id and cell phone of the professionals did not operate any treatment on dogs ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.professional_id , professionals.cell_number from breeds  where  @.@ not in treatments.* "
    },
    {
        "input": "[struct _ sep0] Find the id and cell phone of the professionals who have not treated any dogs . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.professional_id , professionals.cell_number from breeds  where  @.@ not in treatments.* "
    },
    {
        "input": "[struct _ sep0] What are the first name and last name of the professionals or owners but are not used as dog names ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select  distinct professionals.first_name , professionals.last_name from breeds  where  except_  @.@ is dogs.* "
    },
    {
        "input": "[struct _ sep0] What are the first name and last name of the professionals who did not perform any treatment on dogs . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select  distinct professionals.first_name , professionals.last_name from breeds  where  except_  @.@ is treatments.* "
    },
    {
        "input": "[struct _ sep0] What are the first name and last name of the professionals who live in the state of Hawaii or the state of Wisconsin . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state ( Wisconsin ), zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state ( Wisconsin, Hawaii ), zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select  distinct professionals.first_name , professionals.last_name from breeds  where  professionals.state = \"Hawaii\"  or  professionals.state = \"Wisconsin\" "
    },
    {
        "input": "[struct _ sep0] What are the first name and last name of the professionals living in either the state of Hawaii or the state of Wisconsin ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state ( Wisconsin ), zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state ( Wisconsin, Hawaii ), zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select  distinct professionals.first_name , professionals.last_name from breeds  where  professionals.state = \"Hawaii\"  or  professionals.state = \"Wisconsin\" "
    },
    {
        "input": "[struct _ sep0] What are the first name and last name of the professionals living in a city that contains the substring ' West ' . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select  distinct professionals.first_name , professionals.last_name from breeds  where  professionals.city like \"%West%\" "
    },
    {
        "input": "[struct _ sep0] What are the first name and last name of the professionals did not operate any treatment on dogs ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select  distinct professionals.first_name , professionals.last_name from breeds  where  @.@ not in treatments.* "
    },
    {
        "input": "[struct _ sep0] What are the first name and last name of the professionals who have not treated any dogs . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select  distinct professionals.first_name , professionals.last_name from breeds  where  @.@ not in treatments.* "
    },
    {
        "input": "[struct _ sep0] List the emails of the professionals or owners but are not used as dog names ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.email_address from breeds  where  except_  @.@ is dogs.* "
    },
    {
        "input": "[struct _ sep0] List the emails of the professionals who did not perform any treatment on dogs . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.email_address from breeds  where  except_  @.@ is treatments.* "
    },
    {
        "input": "[struct _ sep0] List the emails of the professionals who have done treatment with cost below average ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.email_address from breeds  where  @.@ < avg ( treatments.cost_of_treatment )  "
    },
    {
        "input": "[struct _ sep0] List the emails of the professionals living in a city that contains the substring ' West ' . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.email_address from breeds  where  professionals.city like \"%West%\" "
    },
    {
        "input": "[struct _ sep0] List the emails of the professionals did not operate any treatment on dogs ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.email_address from breeds  where  @.@ not in treatments.* "
    },
    {
        "input": "[struct _ sep0] List the emails of the professionals who have not treated any dogs . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.email_address from breeds  where  @.@ not in treatments.* "
    },
    {
        "input": "[struct _ sep0] What are the emails of the professionals or owners but are not used as dog names ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.email_address from breeds  where  except_  @.@ is dogs.* "
    },
    {
        "input": "[struct _ sep0] What are the emails of the professionals who did not perform any treatment on dogs . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.email_address from breeds  where  except_  @.@ is treatments.* "
    },
    {
        "input": "[struct _ sep0] What are the emails of the professionals who have done treatment with cost below average ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.email_address from breeds  where  @.@ < avg ( treatments.cost_of_treatment )  "
    },
    {
        "input": "[struct _ sep0] What are the emails of the professionals living in a city that contains the substring ' West ' . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.email_address from breeds  where  professionals.city like \"%West%\" "
    },
    {
        "input": "[struct _ sep0] What are the emails of the professionals did not operate any treatment on dogs ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.email_address from breeds  where  @.@ not in treatments.* "
    },
    {
        "input": "[struct _ sep0] What are the emails of the professionals who have not treated any dogs . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.email_address from breeds  where  @.@ not in treatments.* "
    },
    {
        "input": "[struct _ sep0] Find the role , street , city and state of the professionals or owners but are not used as dog names ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.role_code , professionals.street , professionals.city , professionals.state from breeds  where  except_  @.@ is dogs.* "
    },
    {
        "input": "[struct _ sep0] Find the role , street , city and state of the professionals who did not perform any treatment on dogs . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.role_code , professionals.street , professionals.city , professionals.state from breeds  where  except_  @.@ is treatments.* "
    },
    {
        "input": "[struct _ sep0] Find the role , street , city and state of the professionals who have done treatment with cost below average ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.role_code , professionals.street , professionals.city , professionals.state from breeds  where  @.@ < avg ( treatments.cost_of_treatment )  "
    },
    {
        "input": "[struct _ sep0] Find the role , street , city and state of the professionals who live in the state of Hawaii or the state of Wisconsin . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state ( Wisconsin ), zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state ( Wisconsin, Hawaii ), zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.role_code , professionals.street , professionals.city , professionals.state from breeds  where  professionals.state = \"Hawaii\"  or  professionals.state = \"Wisconsin\" "
    },
    {
        "input": "[struct _ sep0] Find the role , street , city and state of the professionals living in either the state of Hawaii or the state of Wisconsin ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state ( Wisconsin ), zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state ( Wisconsin, Hawaii ), zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.role_code , professionals.street , professionals.city , professionals.state from breeds  where  professionals.state = \"Hawaii\"  or  professionals.state = \"Wisconsin\" "
    },
    {
        "input": "[struct _ sep0] Find the role , street , city and state of the professionals did not operate any treatment on dogs ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.role_code , professionals.street , professionals.city , professionals.state from breeds  where  @.@ not in treatments.* "
    },
    {
        "input": "[struct _ sep0] Find the role , street , city and state of the professionals who have not treated any dogs . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.role_code , professionals.street , professionals.city , professionals.state from breeds  where  @.@ not in treatments.* "
    },
    {
        "input": "[struct _ sep0] Return the first name , last name and email of the owners temporarily do not have any dogs ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select owners.first_name , owners.last_name , owners.email_address from breeds  where  @.@ not in dogs.* "
    },
    {
        "input": "[struct _ sep0] Return the first name , last name and email of the owners who do not own any dogs at this moment . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select owners.first_name , owners.last_name , owners.email_address from breeds  where  @.@ not in dogs.* "
    },
    {
        "input": "[struct _ sep0] How many dogs for which the owner has not spend more than 1000 for treatment ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select count ( dogs.* )  from breeds  where  @.@ not in treatments.*  and  sum ( treatments.cost_of_treatment )  > 1000 "
    },
    {
        "input": "[struct _ sep0] How many dogs have not gone through any treatment ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select count ( dogs.* )  from breeds  where  @.@ not in treatments.* "
    },
    {
        "input": "[struct _ sep0] How many dogs that have not received any treatment . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select count ( dogs.* )  from breeds  where  @.@ not in treatments.* "
    },
    {
        "input": "[struct _ sep0] How many dogs have an age below the average ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select count ( dogs.* )  from breeds  where  @.@ < avg ( dogs.age )  "
    },
    {
        "input": "[struct _ sep0] Tell me the number of dogs have an age below the average ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select count ( dogs.* )  from breeds  where  @.@ < avg ( dogs.age )  "
    },
    {
        "input": "[struct _ sep0] How many owners living in a state whose name contains the substring ' North ' . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select count ( owners.* )  from breeds  where  owners.state like \"%North%\" "
    },
    {
        "input": "[struct _ sep0] Find the number of owners living in a state whose name contains the substring ' North ' . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select count ( owners.* )  from breeds  where  owners.state like \"%North%\" "
    },
    {
        "input": "[struct _ sep0] How many professionals who have done treatment with cost below average ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select count ( professionals.* )  from breeds  where  @.@ < avg ( treatments.cost_of_treatment )  "
    },
    {
        "input": "[struct _ sep0] How many professionals who live in the state of Hawaii or the state of Wisconsin . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state ( Wisconsin ), zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state ( Wisconsin, Hawaii ), zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select count ( professionals.* )  from breeds  where  professionals.state = \"Hawaii\"  or  professionals.state = \"Wisconsin\" "
    },
    {
        "input": "[struct _ sep0] How many professionals living in either the state of Hawaii or the state of Wisconsin ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state ( Wisconsin ), zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state ( Wisconsin, Hawaii ), zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select count ( professionals.* )  from breeds  where  professionals.state = \"Hawaii\"  or  professionals.state = \"Wisconsin\" "
    },
    {
        "input": "[struct _ sep0] How many professionals living in a city that contains the substring ' West ' . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select count ( professionals.* )  from breeds  where  professionals.city like \"%West%\" "
    },
    {
        "input": "[struct _ sep0] Find the number of professionals who have done treatment with cost below average ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select count ( professionals.* )  from breeds  where  @.@ < avg ( treatments.cost_of_treatment )  "
    },
    {
        "input": "[struct _ sep0] Find the number of professionals who live in the state of Hawaii or the state of Wisconsin . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state ( Wisconsin ), zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state ( Wisconsin, Hawaii ), zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select count ( professionals.* )  from breeds  where  professionals.state = \"Hawaii\"  or  professionals.state = \"Wisconsin\" "
    },
    {
        "input": "[struct _ sep0] Find the number of professionals living in either the state of Hawaii or the state of Wisconsin ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state ( Wisconsin ), zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state ( Wisconsin, Hawaii ), zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select count ( professionals.* )  from breeds  where  professionals.state = \"Hawaii\"  or  professionals.state = \"Wisconsin\" "
    },
    {
        "input": "[struct _ sep0] Find the number of professionals living in a city that contains the substring ' West ' . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select count ( professionals.* )  from breeds  where  professionals.city like \"%West%\" "
    },
    {
        "input": "[struct _ sep0] List the name of singers whose citizenship is not ' France ' . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship ( France ) | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Citizenship != \"France\" "
    },
    {
        "input": "[struct _ sep0] List the name of singers who are not France citizens ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship ( France ) | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Citizenship != \"France\" "
    },
    {
        "input": "[struct _ sep0] List the name of singers whose birth year is either 1948 or 1949 ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Birth_Year = 1948  or  singer.Birth_Year = 1949 "
    },
    {
        "input": "[struct _ sep0] List the name of singers whose birth years are either 1948 or 1949 ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Birth_Year = 1948  or  singer.Birth_Year = 1949 "
    },
    {
        "input": "[struct _ sep0] List the name of singers with the largest net worth ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  order by singer.Net_Worth_Millions desc limit 1"
    },
    {
        "input": "[struct _ sep0] List the name of singers who is worth the most ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  order by singer.Net_Worth_Millions desc limit 1"
    },
    {
        "input": "[struct _ sep0] List the name of singers that have songs with sales more than 300000 . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  song.Sales > 300000 "
    },
    {
        "input": "[struct _ sep0] List the name of singers that have sales more than 300000 ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  song.Sales > 300000 "
    },
    {
        "input": "[struct _ sep0] List the name of singers that have more than one song . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  count ( song.* )  > 1  group by singer.Name "
    },
    {
        "input": "[struct _ sep0] List the name of singers that have more than one songs ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  count ( song.* )  > 1  group by singer.Name "
    },
    {
        "input": "[struct _ sep0] List the name of singers that do not have any song . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  @.@ not in song.* "
    },
    {
        "input": "[struct _ sep0] What are the names of singers whose citizenship is not ' France ' . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship ( France ) | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Citizenship != \"France\" "
    },
    {
        "input": "[struct _ sep0] What are the names of singers who are not France citizens ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship ( France ) | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Citizenship != \"France\" "
    },
    {
        "input": "[struct _ sep0] What are the names of singers whose birth year is either 1948 or 1949 ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Birth_Year = 1948  or  singer.Birth_Year = 1949 "
    },
    {
        "input": "[struct _ sep0] What are the names of singers whose birth years are either 1948 or 1949 ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Birth_Year = 1948  or  singer.Birth_Year = 1949 "
    },
    {
        "input": "[struct _ sep0] What are the names of singers with the largest net worth ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  order by singer.Net_Worth_Millions desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names of singers who is worth the most ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  order by singer.Net_Worth_Millions desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names of singers that have songs with sales more than 300000 . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  song.Sales > 300000 "
    },
    {
        "input": "[struct _ sep0] What are the names of singers that have sales more than 300000 ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  song.Sales > 300000 "
    },
    {
        "input": "[struct _ sep0] What are the names of singers that have more than one song . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  count ( song.* )  > 1  group by singer.Name "
    },
    {
        "input": "[struct _ sep0] What are the names of singers that have more than one songs ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  count ( song.* )  > 1  group by singer.Name "
    },
    {
        "input": "[struct _ sep0] What are the names of singers that do not have any song . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  @.@ not in song.* "
    },
    {
        "input": "[struct _ sep0] List the name of singers in ascending order of net worth . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  order by singer.Net_Worth_Millions asc"
    },
    {
        "input": "[struct _ sep0] List the name of singers ordered by ascending net worth ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  order by singer.Net_Worth_Millions asc"
    },
    {
        "input": "[struct _ sep0] List the name of singers whose birth year is either 1948 or 1949 ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Birth_Year = 1948  or  singer.Birth_Year = 1949 "
    },
    {
        "input": "[struct _ sep0] List the name of singers whose birth years are either 1948 or 1949 ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Birth_Year = 1948  or  singer.Birth_Year = 1949 "
    },
    {
        "input": "[struct _ sep0] List the name of singers with the largest net worth ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  order by singer.Net_Worth_Millions desc limit 1"
    },
    {
        "input": "[struct _ sep0] List the name of singers who is worth the most ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  order by singer.Net_Worth_Millions desc limit 1"
    },
    {
        "input": "[struct _ sep0] List the name of singers that have songs with sales more than 300000 . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  song.Sales > 300000 "
    },
    {
        "input": "[struct _ sep0] List the name of singers that have sales more than 300000 ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  song.Sales > 300000 "
    },
    {
        "input": "[struct _ sep0] List the name of singers that have more than one song . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  count ( song.* )  > 1  group by singer.Name "
    },
    {
        "input": "[struct _ sep0] List the name of singers that have more than one songs ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  count ( song.* )  > 1  group by singer.Name "
    },
    {
        "input": "[struct _ sep0] List the name of singers that do not have any song . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  @.@ not in song.* "
    },
    {
        "input": "[struct _ sep0] What are the names of the singers in ascending order of net worth . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  order by singer.Net_Worth_Millions asc"
    },
    {
        "input": "[struct _ sep0] What are the names of the singers ordered by ascending net worth ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  order by singer.Net_Worth_Millions asc"
    },
    {
        "input": "[struct _ sep0] What are the names of the singers whose birth year is either 1948 or 1949 ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Birth_Year = 1948  or  singer.Birth_Year = 1949 "
    },
    {
        "input": "[struct _ sep0] What are the names of the singers whose birth years are either 1948 or 1949 ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Birth_Year = 1948  or  singer.Birth_Year = 1949 "
    },
    {
        "input": "[struct _ sep0] What are the names of the singers with the largest net worth ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  order by singer.Net_Worth_Millions desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names of the singers who is worth the most ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  order by singer.Net_Worth_Millions desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names of the singers that have songs with sales more than 300000 . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  song.Sales > 300000 "
    },
    {
        "input": "[struct _ sep0] What are the names of the singers that have sales more than 300000 ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  song.Sales > 300000 "
    },
    {
        "input": "[struct _ sep0] What are the names of the singers that have more than one song . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  count ( song.* )  > 1  group by singer.Name "
    },
    {
        "input": "[struct _ sep0] What are the names of the singers that have more than one songs ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  count ( song.* )  > 1  group by singer.Name "
    },
    {
        "input": "[struct _ sep0] What are the names of the singers that do not have any song . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  @.@ not in song.* "
    },
    {
        "input": "[struct _ sep0] Show the name of singers in ascending order of net worth . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  order by singer.Net_Worth_Millions asc"
    },
    {
        "input": "[struct _ sep0] Show the name of singers ordered by ascending net worth ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  order by singer.Net_Worth_Millions asc"
    },
    {
        "input": "[struct _ sep0] Show the name of singers whose citizenship is not ' France ' . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship ( France ) | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Citizenship != \"France\" "
    },
    {
        "input": "[struct _ sep0] Show the name of singers who are not France citizens ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship ( France ) | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Citizenship != \"France\" "
    },
    {
        "input": "[struct _ sep0] Show the name of singers with the largest net worth ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  order by singer.Net_Worth_Millions desc limit 1"
    },
    {
        "input": "[struct _ sep0] Show the name of singers who is worth the most ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  order by singer.Net_Worth_Millions desc limit 1"
    },
    {
        "input": "[struct _ sep0] Show the name of singers that have songs with sales more than 300000 . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  song.Sales > 300000 "
    },
    {
        "input": "[struct _ sep0] Show the name of singers that have sales more than 300000 ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  song.Sales > 300000 "
    },
    {
        "input": "[struct _ sep0] Show the name of singers that have more than one song . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  count ( song.* )  > 1  group by singer.Name "
    },
    {
        "input": "[struct _ sep0] Show the name of singers that have more than one songs ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  count ( song.* )  > 1  group by singer.Name "
    },
    {
        "input": "[struct _ sep0] Show the name of singers that do not have any song . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  @.@ not in song.* "
    },
    {
        "input": "[struct _ sep0] What are the names of the singers in ascending order of net worth . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  order by singer.Net_Worth_Millions asc"
    },
    {
        "input": "[struct _ sep0] What are the names of the singers ordered by ascending net worth ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  order by singer.Net_Worth_Millions asc"
    },
    {
        "input": "[struct _ sep0] What are the names of the singers whose citizenship is not ' France ' . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship ( France ) | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Citizenship != \"France\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the singers who are not France citizens ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship ( France ) | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Citizenship != \"France\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the singers with the largest net worth ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  order by singer.Net_Worth_Millions desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names of the singers who is worth the most ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  order by singer.Net_Worth_Millions desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names of the singers that have songs with sales more than 300000 . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  song.Sales > 300000 "
    },
    {
        "input": "[struct _ sep0] What are the names of the singers that have sales more than 300000 ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  song.Sales > 300000 "
    },
    {
        "input": "[struct _ sep0] What are the names of the singers that have more than one song . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  count ( song.* )  > 1  group by singer.Name "
    },
    {
        "input": "[struct _ sep0] What are the names of the singers that have more than one songs ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  count ( song.* )  > 1  group by singer.Name "
    },
    {
        "input": "[struct _ sep0] What are the names of the singers that do not have any song . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  @.@ not in song.* "
    },
    {
        "input": "[struct _ sep0] What is the name of the singer in ascending order of net worth . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  order by singer.Net_Worth_Millions asc"
    },
    {
        "input": "[struct _ sep0] What is the name of the singer ordered by ascending net worth ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  order by singer.Net_Worth_Millions asc"
    },
    {
        "input": "[struct _ sep0] What is the name of the singer whose citizenship is not ' France ' . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship ( France ) | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Citizenship != \"France\" "
    },
    {
        "input": "[struct _ sep0] What is the name of the singer who are not France citizens ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship ( France ) | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Citizenship != \"France\" "
    },
    {
        "input": "[struct _ sep0] What is the name of the singer whose birth year is either 1948 or 1949 ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Birth_Year = 1948  or  singer.Birth_Year = 1949 "
    },
    {
        "input": "[struct _ sep0] What is the name of the singer whose birth years are either 1948 or 1949 ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Birth_Year = 1948  or  singer.Birth_Year = 1949 "
    },
    {
        "input": "[struct _ sep0] What is the name of the singer that have songs with sales more than 300000 . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  song.Sales > 300000 "
    },
    {
        "input": "[struct _ sep0] What is the name of the singer that have sales more than 300000 ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  song.Sales > 300000 "
    },
    {
        "input": "[struct _ sep0] What is the name of the singer that have more than one song . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  count ( song.* )  > 1  group by singer.Name "
    },
    {
        "input": "[struct _ sep0] What is the name of the singer that have more than one songs ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  count ( song.* )  > 1  group by singer.Name "
    },
    {
        "input": "[struct _ sep0] What is the name of the singer that do not have any song . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  @.@ not in song.* "
    },
    {
        "input": "[struct _ sep0] What is the name of the singer in ascending order of net worth . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  order by singer.Net_Worth_Millions asc"
    },
    {
        "input": "[struct _ sep0] What is the name of the singer ordered by ascending net worth ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  order by singer.Net_Worth_Millions asc"
    },
    {
        "input": "[struct _ sep0] What is the name of the singer whose citizenship is not ' France ' . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship ( France ) | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Citizenship != \"France\" "
    },
    {
        "input": "[struct _ sep0] What is the name of the singer who are not France citizens ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship ( France ) | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Citizenship != \"France\" "
    },
    {
        "input": "[struct _ sep0] What is the name of the singer whose birth year is either 1948 or 1949 ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Birth_Year = 1948  or  singer.Birth_Year = 1949 "
    },
    {
        "input": "[struct _ sep0] What is the name of the singer whose birth years are either 1948 or 1949 ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Birth_Year = 1948  or  singer.Birth_Year = 1949 "
    },
    {
        "input": "[struct _ sep0] What is the name of the singer that have songs with sales more than 300000 . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  song.Sales > 300000 "
    },
    {
        "input": "[struct _ sep0] What is the name of the singer that have sales more than 300000 ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  song.Sales > 300000 "
    },
    {
        "input": "[struct _ sep0] What is the name of the singer that have more than one song . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  count ( song.* )  > 1  group by singer.Name "
    },
    {
        "input": "[struct _ sep0] What is the name of the singer that have more than one songs ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  count ( song.* )  > 1  group by singer.Name "
    },
    {
        "input": "[struct _ sep0] What is the name of the singer that do not have any song . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  @.@ not in song.* "
    },
    {
        "input": "[struct _ sep0] Show distinct names of singers in ascending order of net worth . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select  distinct singer.Name from singer  order by singer.Net_Worth_Millions asc"
    },
    {
        "input": "[struct _ sep0] Show distinct names of singers ordered by ascending net worth ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select  distinct singer.Name from singer  order by singer.Net_Worth_Millions asc"
    },
    {
        "input": "[struct _ sep0] Show distinct names of singers whose citizenship is not ' France ' . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship ( France ) | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select  distinct singer.Name from singer  where  singer.Citizenship != \"France\" "
    },
    {
        "input": "[struct _ sep0] Show distinct names of singers who are not France citizens ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship ( France ) | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select  distinct singer.Name from singer  where  singer.Citizenship != \"France\" "
    },
    {
        "input": "[struct _ sep0] Show distinct names of singers whose birth year is either 1948 or 1949 ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select  distinct singer.Name from singer  where  singer.Birth_Year = 1948  or  singer.Birth_Year = 1949 "
    },
    {
        "input": "[struct _ sep0] Show distinct names of singers whose birth years are either 1948 or 1949 ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select  distinct singer.Name from singer  where  singer.Birth_Year = 1948  or  singer.Birth_Year = 1949 "
    },
    {
        "input": "[struct _ sep0] Show distinct names of singers with the largest net worth ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select  distinct singer.Name from singer  order by singer.Net_Worth_Millions desc limit 1"
    },
    {
        "input": "[struct _ sep0] Show distinct names of singers who is worth the most ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select  distinct singer.Name from singer  order by singer.Net_Worth_Millions desc limit 1"
    },
    {
        "input": "[struct _ sep0] Show distinct names of singers that do not have any song . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select  distinct singer.Name from singer  where  @.@ not in song.* "
    },
    {
        "input": "[struct _ sep0] what are the different names of the singers in ascending order of net worth . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select  distinct singer.Name from singer  order by singer.Net_Worth_Millions asc"
    },
    {
        "input": "[struct _ sep0] what are the different names of the singers ordered by ascending net worth ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select  distinct singer.Name from singer  order by singer.Net_Worth_Millions asc"
    },
    {
        "input": "[struct _ sep0] what are the different names of the singers whose citizenship is not ' France ' . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship ( France ) | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select  distinct singer.Name from singer  where  singer.Citizenship != \"France\" "
    },
    {
        "input": "[struct _ sep0] what are the different names of the singers who are not France citizens ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship ( France ) | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select  distinct singer.Name from singer  where  singer.Citizenship != \"France\" "
    },
    {
        "input": "[struct _ sep0] what are the different names of the singers whose birth year is either 1948 or 1949 ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select  distinct singer.Name from singer  where  singer.Birth_Year = 1948  or  singer.Birth_Year = 1949 "
    },
    {
        "input": "[struct _ sep0] what are the different names of the singers whose birth years are either 1948 or 1949 ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select  distinct singer.Name from singer  where  singer.Birth_Year = 1948  or  singer.Birth_Year = 1949 "
    },
    {
        "input": "[struct _ sep0] what are the different names of the singers with the largest net worth ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select  distinct singer.Name from singer  order by singer.Net_Worth_Millions desc limit 1"
    },
    {
        "input": "[struct _ sep0] what are the different names of the singers who is worth the most ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select  distinct singer.Name from singer  order by singer.Net_Worth_Millions desc limit 1"
    },
    {
        "input": "[struct _ sep0] what are the different names of the singers that do not have any song . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select  distinct singer.Name from singer  where  @.@ not in song.* "
    },
    {
        "input": "[struct _ sep0] Show the names of singers in ascending order of net worth . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  order by singer.Net_Worth_Millions asc"
    },
    {
        "input": "[struct _ sep0] Show the names of singers ordered by ascending net worth ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  order by singer.Net_Worth_Millions asc"
    },
    {
        "input": "[struct _ sep0] Show the names of singers whose citizenship is not ' France ' . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship ( France ) | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Citizenship != \"France\" "
    },
    {
        "input": "[struct _ sep0] Show the names of singers who are not France citizens ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship ( France ) | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Citizenship != \"France\" "
    },
    {
        "input": "[struct _ sep0] Show the names of singers whose birth year is either 1948 or 1949 ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Birth_Year = 1948  or  singer.Birth_Year = 1949 "
    },
    {
        "input": "[struct _ sep0] Show the names of singers whose birth years are either 1948 or 1949 ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Birth_Year = 1948  or  singer.Birth_Year = 1949 "
    },
    {
        "input": "[struct _ sep0] Show the names of singers with the largest net worth ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  order by singer.Net_Worth_Millions desc limit 1"
    },
    {
        "input": "[struct _ sep0] Show the names of singers who is worth the most ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  order by singer.Net_Worth_Millions desc limit 1"
    },
    {
        "input": "[struct _ sep0] Show the names of singers that have songs with sales more than 300000 . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  song.Sales > 300000 "
    },
    {
        "input": "[struct _ sep0] Show the names of singers that have sales more than 300000 ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  song.Sales > 300000 "
    },
    {
        "input": "[struct _ sep0] Show the names of singers that do not have any song . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  @.@ not in song.* "
    },
    {
        "input": "[struct _ sep0] What are the names of the singers in ascending order of net worth . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  order by singer.Net_Worth_Millions asc"
    },
    {
        "input": "[struct _ sep0] What are the names of the singers ordered by ascending net worth ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  order by singer.Net_Worth_Millions asc"
    },
    {
        "input": "[struct _ sep0] What are the names of the singers whose citizenship is not ' France ' . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship ( France ) | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Citizenship != \"France\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the singers who are not France citizens ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship ( France ) | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Citizenship != \"France\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the singers whose birth year is either 1948 or 1949 ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Birth_Year = 1948  or  singer.Birth_Year = 1949 "
    },
    {
        "input": "[struct _ sep0] What are the names of the singers whose birth years are either 1948 or 1949 ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Birth_Year = 1948  or  singer.Birth_Year = 1949 "
    },
    {
        "input": "[struct _ sep0] What are the names of the singers with the largest net worth ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  order by singer.Net_Worth_Millions desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names of the singers who is worth the most ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  order by singer.Net_Worth_Millions desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names of the singers that have songs with sales more than 300000 . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  song.Sales > 300000 "
    },
    {
        "input": "[struct _ sep0] What are the names of the singers that have sales more than 300000 ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  song.Sales > 300000 "
    },
    {
        "input": "[struct _ sep0] What are the names of the singers that do not have any song . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  @.@ not in song.* "
    },
    {
        "input": "[struct _ sep0] List the name of singers in ascending order of net worth . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  order by singer.Net_Worth_Millions asc"
    },
    {
        "input": "[struct _ sep0] List the name of singers ordered by ascending net worth ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  order by singer.Net_Worth_Millions asc"
    },
    {
        "input": "[struct _ sep0] List the name of singers whose citizenship is not ' France ' . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship ( France ) | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Citizenship != \"France\" "
    },
    {
        "input": "[struct _ sep0] List the name of singers who are not France citizens ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship ( France ) | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Citizenship != \"France\" "
    },
    {
        "input": "[struct _ sep0] List the name of singers whose birth year is either 1948 or 1949 ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Birth_Year = 1948  or  singer.Birth_Year = 1949 "
    },
    {
        "input": "[struct _ sep0] List the name of singers whose birth years are either 1948 or 1949 ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Birth_Year = 1948  or  singer.Birth_Year = 1949 "
    },
    {
        "input": "[struct _ sep0] List the name of singers with the largest net worth ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  order by singer.Net_Worth_Millions desc limit 1"
    },
    {
        "input": "[struct _ sep0] List the name of singers who is worth the most ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  order by singer.Net_Worth_Millions desc limit 1"
    },
    {
        "input": "[struct _ sep0] List the name of singers that have songs with sales more than 300000 . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  song.Sales > 300000 "
    },
    {
        "input": "[struct _ sep0] List the name of singers that have sales more than 300000 ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  song.Sales > 300000 "
    },
    {
        "input": "[struct _ sep0] List the name of singers that have more than one song . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  count ( song.* )  > 1  group by singer.Name "
    },
    {
        "input": "[struct _ sep0] List the name of singers that have more than one songs ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  count ( song.* )  > 1  group by singer.Name "
    },
    {
        "input": "[struct _ sep0] What is the sname of every sing in ascending order of net worth . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  order by singer.Net_Worth_Millions asc"
    },
    {
        "input": "[struct _ sep0] What is the sname of every sing with the largest net worth ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  order by singer.Net_Worth_Millions desc limit 1"
    },
    {
        "input": "[struct _ sep0] Show the citizenship shared by singers with birth year before 1945 and in ascending order of net worth . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Citizenship from singer  where  singer.Birth_Year < 1945  order by singer.Net_Worth_Millions asc"
    },
    {
        "input": "[struct _ sep0] Show the citizenship shared by singers with birth year before 1945 and with the largest net worth ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Citizenship from singer  where  singer.Birth_Year < 1945  order by singer.Net_Worth_Millions desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the citizenships that are shared by singers with a birth year before 1945 in ascending order of net worth . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Citizenship from singer  where  singer.Birth_Year < 1945  order by singer.Net_Worth_Millions asc"
    },
    {
        "input": "[struct _ sep0] What are the citizenships that are shared by singers with a birth year before 1945 with the largest net worth ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Citizenship from singer  where  singer.Birth_Year < 1945  order by singer.Net_Worth_Millions desc limit 1"
    }
]