[
    {
        "input": "[struct _ sep0] What are all distinct countries where singers above age 20 are from , ordered by age from the oldest to the youngest . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select  distinct singer.Country from stadium  where  singer.Age > 20  order by singer.Age desc"
    },
    {
        "input": "[struct _ sep0] What are the different countries with singers above age 20 , ordered by age from the oldest to the youngest . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select  distinct singer.Country from stadium  where  singer.Age > 20  order by singer.Age desc"
    },
    {
        "input": "[struct _ sep0] Show countries where a singer above age 40 and a singer below 30 are from , ordered by age from the oldest to the youngest . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Country from stadium  where  singer.Age > 40  and  singer.Age < 30  order by singer.Age desc"
    },
    {
        "input": "[struct _ sep0] what is the name and nation of the singer who have a song having ' Hey ' in its name , ordered by age from the oldest to the youngest . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name , singer.Country from stadium  where  singer.Song_Name like \"%Hey%\"  order by singer.Age desc"
    },
    {
        "input": "[struct _ sep0] What is the name and country of origin of every singer who has a song with the word ' Hey ' in its title , ordered by age from the oldest to the youngest . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name , singer.Country from stadium  where  singer.Song_Name like \"%Hey%\"  order by singer.Age desc"
    },
    {
        "input": "[struct _ sep0] What are all distinct countries where singers above age 20 are from , in descending order of age ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select  distinct singer.Country from stadium  where  singer.Age > 20  order by singer.Age desc"
    },
    {
        "input": "[struct _ sep0] What are the different countries with singers above age 20 , in descending order of age ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select  distinct singer.Country from stadium  where  singer.Age > 20  order by singer.Age desc"
    },
    {
        "input": "[struct _ sep0] Show countries where a singer above age 40 and a singer below 30 are from , in descending order of age ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Country from stadium  where  singer.Age > 40  and  singer.Age < 30  order by singer.Age desc"
    },
    {
        "input": "[struct _ sep0] List all singer names in concerts in year 2014 , in descending order of age ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name from stadium  where  concert.Year = 2014  order by singer.Age desc"
    },
    {
        "input": "[struct _ sep0] what is the name and nation of the singer who have a song having ' Hey ' in its name , in descending order of age ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name , singer.Country from stadium  where  singer.Song_Name like \"%Hey%\"  order by singer.Age desc"
    },
    {
        "input": "[struct _ sep0] What is the name and country of origin of every singer who has a song with the word ' Hey ' in its title , in descending order of age ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name , singer.Country from stadium  where  singer.Song_Name like \"%Hey%\"  order by singer.Age desc"
    },
    {
        "input": "[struct _ sep0] What is the total number of singers , from France ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country ( France ), song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select count ( singer.* )  from stadium  where  singer.Country = \"France\" "
    },
    {
        "input": "[struct _ sep0] What are the different countries with singers above age 20 and from France ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country ( France ), song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select  distinct singer.Country from stadium  where  singer.Age > 20  and  singer.Country = \"France\" "
    },
    {
        "input": "[struct _ sep0] What are the different countries with singers above age 20 or from France ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country ( France ), song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select  distinct singer.Country from stadium  where  singer.Age > 20  or  singer.Country = \"France\" "
    },
    {
        "input": "[struct _ sep0] List all singer names in concerts in year 2014 and from France ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country ( France ), song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name from stadium  where  concert.Year = 2014  and  singer.Country = \"France\" "
    },
    {
        "input": "[struct _ sep0] List all singer names in concerts in year 2014 or from France ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country ( France ), song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name from stadium  where  concert.Year = 2014  or  singer.Country = \"France\" "
    },
    {
        "input": "[struct _ sep0] Show all countries and the number of singers in each country , where singers above age 20 are from ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Country , count ( singer.* )  from stadium  where  singer.Age > 20  group by singer.Country "
    },
    {
        "input": "[struct _ sep0] How many singers are from each country , where singers above age 20 are from ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select count ( singer.* )  , singer.Country from stadium  where  singer.Age > 20  group by singer.Country "
    },
    {
        "input": "[struct _ sep0] What is the total number of singers , above age 20 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select count ( singer.* )  from stadium  where  singer.Age > 20 "
    },
    {
        "input": "[struct _ sep0] What is the average , minimum , and maximum age of all singers from France and above age 20 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country ( France ), song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select avg ( singer.Age )  , min ( singer.Age )  , max ( singer.Age )  from stadium  where  singer.Country = \"France\"  and  singer.Age > 20 "
    },
    {
        "input": "[struct _ sep0] What is the average , minimum , and maximum age of all singers from France or above age 20 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country ( France ), song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select avg ( singer.Age )  , min ( singer.Age )  , max ( singer.Age )  from stadium  where  singer.Country = \"France\"  or  singer.Age > 20 "
    },
    {
        "input": "[struct _ sep0] List all singer names in concerts in year 2014 and above age 20 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name from stadium  where  concert.Year = 2014  and  singer.Age > 20 "
    },
    {
        "input": "[struct _ sep0] List all singer names in concerts in year 2014 or above age 20 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name from stadium  where  concert.Year = 2014  or  singer.Age > 20 "
    },
    {
        "input": "[struct _ sep0] What is the total number of singers , above the average age . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select count ( singer.* )  from stadium  where  @.@ > avg ( singer.Age )  "
    },
    {
        "input": "[struct _ sep0] What is the average , minimum , and maximum age of all singers from France and above the average age . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country ( France ), song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select avg ( singer.Age )  , min ( singer.Age )  , max ( singer.Age )  from stadium  where  singer.Country = \"France\"  and  @.@ > avg ( singer.Age )  "
    },
    {
        "input": "[struct _ sep0] What is the average , minimum , and maximum age of all singers from France or above the average age . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country ( France ), song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select avg ( singer.Age )  , min ( singer.Age )  , max ( singer.Age )  from stadium  where  singer.Country = \"France\"  or  @.@ > avg ( singer.Age )  "
    },
    {
        "input": "[struct _ sep0] What are the different countries with singers above age 20 and above the average age . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select  distinct singer.Country from stadium  where  singer.Age > 20  and  @.@ > avg ( singer.Age )  "
    },
    {
        "input": "[struct _ sep0] What are the different countries with singers above age 20 or above the average age . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select  distinct singer.Country from stadium  where  singer.Age > 20  or  @.@ > avg ( singer.Age )  "
    },
    {
        "input": "[struct _ sep0] List all singer names in concerts in year 2014 and above the average age . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name from stadium  where  concert.Year = 2014  and  @.@ > avg ( singer.Age )  "
    },
    {
        "input": "[struct _ sep0] List all singer names in concerts in year 2014 or above the average age . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name from stadium  where  concert.Year = 2014  or  @.@ > avg ( singer.Age )  "
    },
    {
        "input": "[struct _ sep0] What is the total number of singers , who are older than average ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select count ( singer.* )  from stadium  where  @.@ > avg ( singer.Age )  "
    },
    {
        "input": "[struct _ sep0] What are the names of the singers who performed in a concert in 2014 and who are older than average ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name from stadium  where  concert.Year = 2014  and  @.@ > avg ( singer.Age )  "
    },
    {
        "input": "[struct _ sep0] What are the names of the singers who performed in a concert in 2014 or who are older than average ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name from stadium  where  concert.Year = 2014  or  @.@ > avg ( singer.Age )  "
    },
    {
        "input": "[struct _ sep0] what is the name and nation of the singer who have a song having ' Hey ' in its name and who are older than average ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name , singer.Country from stadium  where  singer.Song_Name like \"%Hey%\"  and  @.@ > avg ( singer.Age )  "
    },
    {
        "input": "[struct _ sep0] what is the name and nation of the singer who have a song having ' Hey ' in its name or who are older than average ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name , singer.Country from stadium  where  singer.Song_Name like \"%Hey%\"  or  @.@ > avg ( singer.Age )  "
    },
    {
        "input": "[struct _ sep0] What is the name and country of origin of every singer who has a song with the word ' Hey ' in its title and who are older than average ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name , singer.Country from stadium  where  singer.Song_Name like \"%Hey%\"  and  @.@ > avg ( singer.Age )  "
    },
    {
        "input": "[struct _ sep0] What is the name and country of origin of every singer who has a song with the word ' Hey ' in its title or who are older than average ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name , singer.Country from stadium  where  singer.Song_Name like \"%Hey%\"  or  @.@ > avg ( singer.Age )  "
    },
    {
        "input": "[struct _ sep0] What is the maximum capacity and the average of all stadiums , with a capacity between 5000 and 10000 . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select avg ( stadium.Capacity )  , max ( stadium.Capacity )  from stadium  where  stadium.Capacity between 5000 and 10000 "
    },
    {
        "input": "[struct _ sep0] What is the average and maximum capacities for all stadiums , with a capacity between 5000 and 10000 . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select avg ( stadium.Capacity )  , max ( stadium.Capacity )  from stadium  where  stadium.Capacity between 5000 and 10000 "
    },
    {
        "input": "[struct _ sep0] What is the name and capacity for the stadium with highest average attendance and with a capacity between 5000 and 10000 . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name , stadium.Capacity from stadium  where  stadium.Capacity between 5000 and 10000  order by stadium.Average desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the name and capacity for the stadium with the highest average attendance and with a capacity between 5000 and 10000 . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name , stadium.Capacity from stadium  where  stadium.Capacity between 5000 and 10000  order by stadium.Average desc limit 1"
    },
    {
        "input": "[struct _ sep0] Show the stadium name and capacity with most number of concerts in year 2014 or after and with a capacity between 5000 and 10000 . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name , stadium.Capacity from stadium  where  concert.Year >= 2014  and  stadium.Capacity between 5000 and 10000  group by stadium.Stadium_ID  order by count ( concert.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Show the stadium name and capacity with most number of concerts in year 2014 or after or with a capacity between 5000 and 10000 . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name , stadium.Capacity from stadium  where  concert.Year >= 2014  or  stadium.Capacity between 5000 and 10000  group by stadium.Stadium_ID  order by count ( concert.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the name and capacity of the stadium with the most concerts after 2013 and with a capacity between 5000 and 10000 . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name , stadium.Capacity from stadium  where  concert.Year > 2013  and  stadium.Capacity between 5000 and 10000  group by stadium.Stadium_ID  order by count ( concert.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the name and capacity of the stadium with the most concerts after 2013 or with a capacity between 5000 and 10000 . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name , stadium.Capacity from stadium  where  concert.Year > 2013  or  stadium.Capacity between 5000 and 10000  group by stadium.Stadium_ID  order by count ( concert.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the name and capacity for the stadium with highest average attendance and with capacity between 5000 and 10000 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name , stadium.Capacity from stadium  where  stadium.Capacity between 5000 and 10000  order by stadium.Average desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the name and capacity for the stadium with the highest average attendance and with capacity between 5000 and 10000 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name , stadium.Capacity from stadium  where  stadium.Capacity between 5000 and 10000  order by stadium.Average desc limit 1"
    },
    {
        "input": "[struct _ sep0] Show the stadium name and capacity with most number of concerts in year 2014 or after and with capacity between 5000 and 10000 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name , stadium.Capacity from stadium  where  concert.Year >= 2014  and  stadium.Capacity between 5000 and 10000  group by stadium.Stadium_ID  order by count ( concert.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Show the stadium name and capacity with most number of concerts in year 2014 or after or with capacity between 5000 and 10000 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name , stadium.Capacity from stadium  where  concert.Year >= 2014  or  stadium.Capacity between 5000 and 10000  group by stadium.Stadium_ID  order by count ( concert.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the name and capacity of the stadium with the most concerts after 2013 and with capacity between 5000 and 10000 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name , stadium.Capacity from stadium  where  concert.Year > 2013  and  stadium.Capacity between 5000 and 10000  group by stadium.Stadium_ID  order by count ( concert.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the name and capacity of the stadium with the most concerts after 2013 or with capacity between 5000 and 10000 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name , stadium.Capacity from stadium  where  concert.Year > 2013  or  stadium.Capacity between 5000 and 10000  group by stadium.Stadium_ID  order by count ( concert.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Show location and name for all stadiums with a capacity between 5000 and 10000 and with highest average attendance ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Location , stadium.Name from stadium  where  stadium.Capacity between 5000 and 10000  order by stadium.Average desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the locations and names of all stations with capacity between 5000 and 10000 and with highest average attendance ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Location , stadium.Name from stadium  where  stadium.Capacity between 5000 and 10000  order by stadium.Average desc limit 1"
    },
    {
        "input": "[struct _ sep0] Show location and name for all stadiums with a capacity between 5000 and 10000 and with the highest average attendance ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Location , stadium.Name from stadium  where  stadium.Capacity between 5000 and 10000  order by stadium.Average desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the locations and names of all stations with capacity between 5000 and 10000 and with the highest average attendance ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Location , stadium.Name from stadium  where  stadium.Capacity between 5000 and 10000  order by stadium.Average desc limit 1"
    },
    {
        "input": "[struct _ sep0] Show location and name for all stadiums with a capacity between 5000 and 10000 and in year 2014 or after . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Location , stadium.Name from stadium  where  stadium.Capacity between 5000 and 10000  and  concert.Year >= 2014 "
    },
    {
        "input": "[struct _ sep0] Show location and name for all stadiums with a capacity between 5000 and 10000 or in year 2014 or after . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Location , stadium.Name from stadium  where  stadium.Capacity between 5000 and 10000  or  concert.Year >= 2014 "
    },
    {
        "input": "[struct _ sep0] What are the locations and names of all stations with capacity between 5000 and 10000 and in year 2014 or after . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Location , stadium.Name from stadium  where  stadium.Capacity between 5000 and 10000  and  concert.Year >= 2014 "
    },
    {
        "input": "[struct _ sep0] What are the locations and names of all stations with capacity between 5000 and 10000 or in year 2014 or after . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Location , stadium.Name from stadium  where  stadium.Capacity between 5000 and 10000  or  concert.Year >= 2014 "
    },
    {
        "input": "[struct _ sep0] What is the name and capacity for the stadium with highest average attendance and in year 2014 or after . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name , stadium.Capacity from stadium  where  concert.Year >= 2014  order by stadium.Average desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the name and capacity for the stadium with the highest average attendance and in year 2014 or after . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name , stadium.Capacity from stadium  where  concert.Year >= 2014  order by stadium.Average desc limit 1"
    },
    {
        "input": "[struct _ sep0] Show location and name for all stadiums with a capacity between 5000 and 10000 and after 2013 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Location , stadium.Name from stadium  where  stadium.Capacity between 5000 and 10000  and  concert.Year > 2013 "
    },
    {
        "input": "[struct _ sep0] Show location and name for all stadiums with a capacity between 5000 and 10000 or after 2013 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Location , stadium.Name from stadium  where  stadium.Capacity between 5000 and 10000  or  concert.Year > 2013 "
    },
    {
        "input": "[struct _ sep0] What are the locations and names of all stations with capacity between 5000 and 10000 and after 2013 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Location , stadium.Name from stadium  where  stadium.Capacity between 5000 and 10000  and  concert.Year > 2013 "
    },
    {
        "input": "[struct _ sep0] What are the locations and names of all stations with capacity between 5000 and 10000 or after 2013 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Location , stadium.Name from stadium  where  stadium.Capacity between 5000 and 10000  or  concert.Year > 2013 "
    },
    {
        "input": "[struct _ sep0] What is the name and capacity for the stadium with highest average attendance and after 2013 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name , stadium.Capacity from stadium  where  concert.Year > 2013  order by stadium.Average desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the name and capacity for the stadium with the highest average attendance and after 2013 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name , stadium.Capacity from stadium  where  concert.Year > 2013  order by stadium.Average desc limit 1"
    },
    {
        "input": "[struct _ sep0] Show location and name for all stadiums with a capacity between 5000 and 10000 and without any concert . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Location , stadium.Name from stadium  where  stadium.Capacity between 5000 and 10000  and  @.@ not in concert.* "
    },
    {
        "input": "[struct _ sep0] Show location and name for all stadiums with a capacity between 5000 and 10000 or without any concert . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Location , stadium.Name from stadium  where  stadium.Capacity between 5000 and 10000  or  @.@ not in concert.* "
    },
    {
        "input": "[struct _ sep0] What are the locations and names of all stations with capacity between 5000 and 10000 and without any concert . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Location , stadium.Name from stadium  where  stadium.Capacity between 5000 and 10000  and  @.@ not in concert.* "
    },
    {
        "input": "[struct _ sep0] What are the locations and names of all stations with capacity between 5000 and 10000 or without any concert . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Location , stadium.Name from stadium  where  stadium.Capacity between 5000 and 10000  or  @.@ not in concert.* "
    },
    {
        "input": "[struct _ sep0] Show location and name for all stadiums with a capacity between 5000 and 10000 and without any concerts ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Location , stadium.Name from stadium  where  stadium.Capacity between 5000 and 10000  and  @.@ not in concert.* "
    },
    {
        "input": "[struct _ sep0] Show location and name for all stadiums with a capacity between 5000 and 10000 or without any concerts ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Location , stadium.Name from stadium  where  stadium.Capacity between 5000 and 10000  or  @.@ not in concert.* "
    },
    {
        "input": "[struct _ sep0] What are the locations and names of all stations with capacity between 5000 and 10000 and without any concerts ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Location , stadium.Name from stadium  where  stadium.Capacity between 5000 and 10000  and  @.@ not in concert.* "
    },
    {
        "input": "[struct _ sep0] What are the locations and names of all stations with capacity between 5000 and 10000 or without any concerts ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Location , stadium.Name from stadium  where  stadium.Capacity between 5000 and 10000  or  @.@ not in concert.* "
    },
    {
        "input": "[struct _ sep0] What is the maximum capacity and the average of all stadiums , without any concerts ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select avg ( stadium.Capacity )  , max ( stadium.Capacity )  from stadium  where  @.@ not in concert.* "
    },
    {
        "input": "[struct _ sep0] What is the average and maximum capacities for all stadiums , without any concerts ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select avg ( stadium.Capacity )  , max ( stadium.Capacity )  from stadium  where  @.@ not in concert.* "
    },
    {
        "input": "[struct _ sep0] Show all countries and the number of singers in each country , where a singer above age 40 and ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Country , count ( singer.* )  from stadium  where  singer.Age > 40  group by singer.Country "
    },
    {
        "input": "[struct _ sep0] How many singers are from each country , where a singer above age 40 and ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select count ( singer.* )  , singer.Country from stadium  where  singer.Age > 40  group by singer.Country "
    },
    {
        "input": "[struct _ sep0] Show location and name for all stadiums with a capacity between 5000 and 10000 and except for stadiums having a concert ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Location , stadium.Name from stadium  where  stadium.Capacity between 5000 and 10000  except_  @.@ join concert.* "
    },
    {
        "input": "[struct _ sep0] Show location and name for all stadiums with a capacity between 5000 and 10000 or except for stadiums having a concert ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Location , stadium.Name from stadium  where  stadium.Capacity between 5000 and 10000  except_  @.@ join concert.* "
    },
    {
        "input": "[struct _ sep0] What are the locations and names of all stations with capacity between 5000 and 10000 and except for stadiums having a concert ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Location , stadium.Name from stadium  where  stadium.Capacity between 5000 and 10000  except_  @.@ join concert.* "
    },
    {
        "input": "[struct _ sep0] What are the locations and names of all stations with capacity between 5000 and 10000 or except for stadiums having a concert ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Location , stadium.Name from stadium  where  stadium.Capacity between 5000 and 10000  except_  @.@ join concert.* "
    },
    {
        "input": "[struct _ sep0] Show location and name for all stadiums with a capacity between 5000 and 10000 and in year 2014 . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Location , stadium.Name from stadium  where  stadium.Capacity between 5000 and 10000  and  concert.Year = 2014 "
    },
    {
        "input": "[struct _ sep0] Show location and name for all stadiums with a capacity between 5000 and 10000 or in year 2014 . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Location , stadium.Name from stadium  where  stadium.Capacity between 5000 and 10000  or  concert.Year = 2014 "
    },
    {
        "input": "[struct _ sep0] What are the locations and names of all stations with capacity between 5000 and 10000 and in year 2014 . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Location , stadium.Name from stadium  where  stadium.Capacity between 5000 and 10000  and  concert.Year = 2014 "
    },
    {
        "input": "[struct _ sep0] What are the locations and names of all stations with capacity between 5000 and 10000 or in year 2014 . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Location , stadium.Name from stadium  where  stadium.Capacity between 5000 and 10000  or  concert.Year = 2014 "
    },
    {
        "input": "[struct _ sep0] What is the name and capacity for the stadium with highest average attendance and in year 2014 . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name , stadium.Capacity from stadium  where  concert.Year = 2014  order by stadium.Average desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the name and capacity for the stadium with the highest average attendance and in year 2014 . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name , stadium.Capacity from stadium  where  concert.Year = 2014  order by stadium.Average desc limit 1"
    },
    {
        "input": "[struct _ sep0] Show location and name for all stadiums with a capacity between 5000 and 10000 and in 2014 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Location , stadium.Name from stadium  where  stadium.Capacity between 5000 and 10000  and  concert.Year = 2014 "
    },
    {
        "input": "[struct _ sep0] Show location and name for all stadiums with a capacity between 5000 and 10000 or in 2014 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Location , stadium.Name from stadium  where  stadium.Capacity between 5000 and 10000  or  concert.Year = 2014 "
    },
    {
        "input": "[struct _ sep0] What are the locations and names of all stations with capacity between 5000 and 10000 and in 2014 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Location , stadium.Name from stadium  where  stadium.Capacity between 5000 and 10000  and  concert.Year = 2014 "
    },
    {
        "input": "[struct _ sep0] What are the locations and names of all stations with capacity between 5000 and 10000 or in 2014 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Location , stadium.Name from stadium  where  stadium.Capacity between 5000 and 10000  or  concert.Year = 2014 "
    },
    {
        "input": "[struct _ sep0] What is the name and capacity for the stadium with highest average attendance and in 2014 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name , stadium.Capacity from stadium  where  concert.Year = 2014  order by stadium.Average desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the name and capacity for the stadium with the highest average attendance and in 2014 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select stadium.Name , stadium.Capacity from stadium  where  concert.Year = 2014  order by stadium.Average desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the average , minimum , and maximum age of all singers from France and in concerts in year 2014 . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country ( France ), song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select avg ( singer.Age )  , min ( singer.Age )  , max ( singer.Age )  from stadium  where  singer.Country = \"France\"  and  concert.Year = 2014 "
    },
    {
        "input": "[struct _ sep0] What are the different countries with singers above age 20 and in concerts in year 2014 . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select  distinct singer.Country from stadium  where  singer.Age > 20  and  concert.Year = 2014 "
    },
    {
        "input": "[struct _ sep0] What are the different countries with singers above age 20 or in concerts in year 2014 . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select  distinct singer.Country from stadium  where  singer.Age > 20  or  concert.Year = 2014 "
    },
    {
        "input": "[struct _ sep0] What is the total number of singers , who performed in a concert in 2014 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select count ( singer.* )  from stadium  where  concert.Year = 2014 "
    },
    {
        "input": "[struct _ sep0] what is the name and nation of the singer who have a song having ' Hey ' in its name and who performed in a concert in 2014 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name , singer.Country from stadium  where  singer.Song_Name like \"%Hey%\"  and  concert.Year = 2014 "
    },
    {
        "input": "[struct _ sep0] what is the name and nation of the singer who have a song having ' Hey ' in its name or who performed in a concert in 2014 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name , singer.Country from stadium  where  singer.Song_Name like \"%Hey%\"  or  concert.Year = 2014 "
    },
    {
        "input": "[struct _ sep0] What is the name and country of origin of every singer who has a song with the word ' Hey ' in its title and who performed in a concert in 2014 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name , singer.Country from stadium  where  singer.Song_Name like \"%Hey%\"  and  concert.Year = 2014 "
    },
    {
        "input": "[struct _ sep0] What is the name and country of origin of every singer who has a song with the word ' Hey ' in its title or who performed in a concert in 2014 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name , singer.Country from stadium  where  singer.Song_Name like \"%Hey%\"  or  concert.Year = 2014 "
    },
    {
        "input": "[struct _ sep0] What is the total number of singers , who have a song having ' Hey ' in its name ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select count ( singer.* )  from stadium  where  singer.Song_Name like \"%Hey%\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the singers who performed in a concert in 2014 and who have a song having ' Hey ' in its name ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name from stadium  where  concert.Year = 2014  and  singer.Song_Name like \"%Hey%\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the singers who performed in a concert in 2014 or who have a song having ' Hey ' in its name ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name from stadium  where  concert.Year = 2014  or  singer.Song_Name like \"%Hey%\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of singers , who has a song with the word ' Hey ' in its title ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select count ( singer.* )  from stadium  where  singer.Song_Name like \"%Hey%\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the singers who performed in a concert in 2014 and who has a song with the word ' Hey ' in its title ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name from stadium  where  concert.Year = 2014  and  singer.Song_Name like \"%Hey%\" "
    },
    {
        "input": "[struct _ sep0] What are the names of the singers who performed in a concert in 2014 or who has a song with the word ' Hey ' in its title ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select singer.Name from stadium  where  concert.Year = 2014  or  singer.Song_Name like \"%Hey%\" "
    },
    {
        "input": "[struct _ sep0] What is the maximum capacity and the average of all stadiums , which some concerts happened in the years of both 2014 and 2015 . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select avg ( stadium.Capacity )  , max ( stadium.Capacity )  from stadium  where  concert.Year = 2014  and  concert.Year = 2015 "
    },
    {
        "input": "[struct _ sep0] What is the average and maximum capacities for all stadiums , which some concerts happened in the years of both 2014 and 2015 . [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select avg ( stadium.Capacity )  , max ( stadium.Capacity )  from stadium  where  concert.Year = 2014  and  concert.Year = 2015 "
    },
    {
        "input": "[struct _ sep0] What is the maximum capacity and the average of all stadiums , that had concerts that occurred in both 2014 and 2015 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select avg ( stadium.Capacity )  , max ( stadium.Capacity )  from stadium  where  concert.Year = 2014  and  concert.Year = 2015 "
    },
    {
        "input": "[struct _ sep0] What is the average and maximum capacities for all stadiums , that had concerts that occurred in both 2014 and 2015 ? [/struct _ sep0]| concert _ singer | stadium : stadium _ id, location, name, capacity, highest, lowest, average | singer : singer _ id, name, country, song _ name, song _ release _ year, age, is _ male | concert : concert _ id, concert _ name, theme, stadium _ id, year | singer _ in _ concert : concert _ id, singer _ id",
        "gold_natsql": "select avg ( stadium.Capacity )  , max ( stadium.Capacity )  from stadium  where  concert.Year = 2014  and  concert.Year = 2015 "
    },
    {
        "input": "[struct _ sep0] List the maximum weight and type for each type of pet , whose weight is heavier than 10 . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select max ( pets.weight )  , pets.PetType from student  where  pets.weight > 10  group by pets.PetType "
    },
    {
        "input": "[struct _ sep0] Find the number of distinct type of pets , whose weight is heavier than 10 . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select count (  distinct pets.PetType )  from student  where  pets.weight > 10 "
    },
    {
        "input": "[struct _ sep0] Find the id and weight of all pets whose age is older than 1 and whose weight is heavier than 10 . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select pets.PetID , pets.weight from student  where  pets.pet_age > 1  and  pets.weight > 10 "
    },
    {
        "input": "[struct _ sep0] Find the id and weight of all pets whose age is older than 1 or whose weight is heavier than 10 . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select pets.PetID , pets.weight from student  where  pets.pet_age > 1  or  pets.weight > 10 "
    },
    {
        "input": "[struct _ sep0] Find the average and maximum age for each type of pet , whose weight is heavier than 10 . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select avg ( pets.pet_age )  , max ( pets.pet_age )  , pets.PetType from student  where  pets.weight > 10  group by pets.PetType "
    },
    {
        "input": "[struct _ sep0] What is the average weight for each type of pet , whose weight is heavier than 10 . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select avg ( pets.weight )  , pets.PetType from student  where  pets.weight > 10  group by pets.PetType "
    },
    {
        "input": "[struct _ sep0] List the maximum weight and type for each type of pet that have a greater weight than 10 ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select max ( pets.weight )  , pets.PetType from student  where  pets.weight > 10  group by pets.PetType "
    },
    {
        "input": "[struct _ sep0] Find the number of distinct type of pets that have a greater weight than 10 ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select count (  distinct pets.PetType )  from student  where  pets.weight > 10 "
    },
    {
        "input": "[struct _ sep0] Find the average and maximum age for each type of pet that have a greater weight than 10 ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select avg ( pets.pet_age )  , max ( pets.pet_age )  , pets.PetType from student  where  pets.weight > 10  group by pets.PetType "
    },
    {
        "input": "[struct _ sep0] What is the average weight for each type of pet that have a greater weight than 10 ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select avg ( pets.weight )  , pets.PetType from student  where  pets.weight > 10  group by pets.PetType "
    },
    {
        "input": "[struct _ sep0] List the maximum weight and type for each type of pet , that are raised by female students ( with sex F ) . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select max ( pets.weight )  , pets.PetType from student  where  student.Sex = \"F\"  group by pets.PetType "
    },
    {
        "input": "[struct _ sep0] How many pets are owned by students that have an age greater than 20 and that are raised by female students ( with sex F ) . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select count ( has_pet.* )  from student  where  student.Age > 20  and  student.Sex = \"F\" "
    },
    {
        "input": "[struct _ sep0] How many pets are owned by students that have an age greater than 20 or that are raised by female students ( with sex F ) . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select count ( has_pet.* )  from student  where  student.Age > 20  or  student.Sex = \"F\" "
    },
    {
        "input": "[struct _ sep0] Find the number of distinct type of pets , that are raised by female students ( with sex F ) . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select count (  distinct pets.PetType )  from student  where  student.Sex = \"F\" "
    },
    {
        "input": "[struct _ sep0] Find the average and maximum age for each type of pet , that are raised by female students ( with sex F ) . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select avg ( pets.pet_age )  , max ( pets.pet_age )  , pets.PetType from student  where  student.Sex = \"F\"  group by pets.PetType "
    },
    {
        "input": "[struct _ sep0] What is the average weight for each type of pet , that are raised by female students ( with sex F ) . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select avg ( pets.weight )  , pets.PetType from student  where  student.Sex = \"F\"  group by pets.PetType "
    },
    {
        "input": "[struct _ sep0] How many pets have a greater weight than 10 and are raised by female students ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select count ( pets.* )  from student  where  pets.weight > 10  and  student.Sex = \"F\" "
    },
    {
        "input": "[struct _ sep0] List the maximum weight and type for each type of pet that are raised by female students ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select max ( pets.weight )  , pets.PetType from student  where  student.Sex = \"F\"  group by pets.PetType "
    },
    {
        "input": "[struct _ sep0] Find number of pets owned by students who are older than 20 and are raised by female students ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select count ( has_pet.* )  from student  where  student.Age > 20  and  student.Sex = \"F\" "
    },
    {
        "input": "[struct _ sep0] Find number of pets owned by students who are older than 20 or are raised by female students ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select count ( has_pet.* )  from student  where  student.Age > 20  or  student.Sex = \"F\" "
    },
    {
        "input": "[struct _ sep0] Find the number of distinct type of pets that are raised by female students ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select count (  distinct pets.PetType )  from student  where  student.Sex = \"F\" "
    },
    {
        "input": "[struct _ sep0] Find the average and maximum age for each type of pet that are raised by female students ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select avg ( pets.pet_age )  , max ( pets.pet_age )  , pets.PetType from student  where  student.Sex = \"F\"  group by pets.PetType "
    },
    {
        "input": "[struct _ sep0] What is the average weight for each type of pet that are raised by female students ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select avg ( pets.weight )  , pets.PetType from student  where  student.Sex = \"F\"  group by pets.PetType "
    },
    {
        "input": "[struct _ sep0] Find the first name and gender of student who have more than one pet and who have cat or dog pet . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( dog, cat ), pet _ age, weight",
        "gold_natsql": "select student.Fname , student.Sex from student  where  count ( has_pet.* )  > 1  and  pets.PetType = \"cat\"  or  pets.PetType = \"dog\"  group by student.StuID "
    },
    {
        "input": "[struct _ sep0] What is the first name and gender of the all the students who have more than one pet and who have cat or dog pet . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( dog, cat ), pet _ age, weight",
        "gold_natsql": "select student.Fname , student.Sex from student  where  count ( has_pet.* )  > 1  and  pets.PetType = \"cat\"  or  pets.PetType = \"dog\"  group by student.StuID "
    },
    {
        "input": "[struct _ sep0] Find the first name and gender of student who have more than one pet and who has a cat or dog as a pet ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( dog, cat ), pet _ age, weight",
        "gold_natsql": "select student.Fname , student.Sex from student  where  count ( has_pet.* )  > 1  and  pets.PetType = \"cat\"  or  pets.PetType = \"dog\"  group by student.StuID "
    },
    {
        "input": "[struct _ sep0] What is the first name and gender of the all the students who have more than one pet and who has a cat or dog as a pet ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( dog, cat ), pet _ age, weight",
        "gold_natsql": "select student.Fname , student.Sex from student  where  count ( has_pet.* )  > 1  and  pets.PetType = \"cat\"  or  pets.PetType = \"dog\"  group by student.StuID "
    },
    {
        "input": "[struct _ sep0] Find the first name and gender of student who have more than one pet and who have both cat and dog pets . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( dog, cat ), pet _ age, weight",
        "gold_natsql": "select student.Fname , student.Sex from student  where  count ( has_pet.* )  > 1  and  pets.PetType = \"cat\"  and  pets.PetType = \"dog\"  group by student.StuID "
    },
    {
        "input": "[struct _ sep0] What is the first name and gender of the all the students who have more than one pet and who have both cat and dog pets . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( dog, cat ), pet _ age, weight",
        "gold_natsql": "select student.Fname , student.Sex from student  where  count ( has_pet.* )  > 1  and  pets.PetType = \"cat\"  and  pets.PetType = \"dog\"  group by student.StuID "
    },
    {
        "input": "[struct _ sep0] Find the first name and gender of student who have more than one pet and who have both cat and dog as pets ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( dog, cat ), pet _ age, weight",
        "gold_natsql": "select student.Fname , student.Sex from student  where  count ( has_pet.* )  > 1  and  pets.PetType = \"cat\"  and  pets.PetType = \"dog\"  group by student.StuID "
    },
    {
        "input": "[struct _ sep0] What is the first name and gender of the all the students who have more than one pet and who have both cat and dog as pets ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( dog, cat ), pet _ age, weight",
        "gold_natsql": "select student.Fname , student.Sex from student  where  count ( has_pet.* )  > 1  and  pets.PetType = \"cat\"  and  pets.PetType = \"dog\"  group by student.StuID "
    },
    {
        "input": "[struct _ sep0] Find the first name and gender of student who have more than one pet and who do not have a cat pet . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( cat ), pet _ age, weight",
        "gold_natsql": "select student.Fname , student.Sex from student  where  count ( has_pet.* )  > 1  and  @.@ not in student.*  and  pets.PetType = \"cat\"  group by student.StuID "
    },
    {
        "input": "[struct _ sep0] What is the first name and gender of the all the students who have more than one pet and who do not have a cat pet . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( cat ), pet _ age, weight",
        "gold_natsql": "select student.Fname , student.Sex from student  where  count ( has_pet.* )  > 1  and  @.@ not in student.*  and  pets.PetType = \"cat\"  group by student.StuID "
    },
    {
        "input": "[struct _ sep0] Find the first name and gender of student who have more than one pet and who does not own a cat as a pet , [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( cat ), pet _ age, weight",
        "gold_natsql": "select student.Fname , student.Sex from student  where  count ( has_pet.* )  > 1  and  @.@ not in student.*  and  pets.PetType = \"cat\"  group by student.StuID "
    },
    {
        "input": "[struct _ sep0] What is the first name and gender of the all the students who have more than one pet and who does not own a cat as a pet , [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( cat ), pet _ age, weight",
        "gold_natsql": "select student.Fname , student.Sex from student  where  count ( has_pet.* )  > 1  and  @.@ not in student.*  and  pets.PetType = \"cat\"  group by student.StuID "
    },
    {
        "input": "[struct _ sep0] What is the id and weight of every pet who is older than 1 and who have a dog ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( dog ), pet _ age, weight",
        "gold_natsql": "select pets.PetID , pets.weight from student  where  pets.pet_age > 1  and  pets.PetType = \"dog\" "
    },
    {
        "input": "[struct _ sep0] What is the id and weight of every pet who is older than 1 or who have a dog ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( dog ), pet _ age, weight",
        "gold_natsql": "select pets.PetID , pets.weight from student  where  pets.pet_age > 1  or  pets.PetType = \"dog\" "
    },
    {
        "input": "[struct _ sep0] Find the first name and gender of student who have more than one pet and who have a dog ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( dog ), pet _ age, weight",
        "gold_natsql": "select student.Fname , student.Sex from student  where  count ( has_pet.* )  > 1  and  pets.PetType = \"dog\"  group by student.StuID "
    },
    {
        "input": "[struct _ sep0] Find the first name and gender of student who have more than one pet or who have a dog ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( dog ), pet _ age, weight",
        "gold_natsql": "select student.Fname , student.Sex from student  where  count ( has_pet.* )  > 1  or  pets.PetType = \"dog\"  group by student.StuID "
    },
    {
        "input": "[struct _ sep0] What is the first name and gender of the all the students who have more than one pet and who have a dog ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( dog ), pet _ age, weight",
        "gold_natsql": "select student.Fname , student.Sex from student  where  count ( has_pet.* )  > 1  and  pets.PetType = \"dog\"  group by student.StuID "
    },
    {
        "input": "[struct _ sep0] What is the first name and gender of the all the students who have more than one pet or who have a dog ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( dog ), pet _ age, weight",
        "gold_natsql": "select student.Fname , student.Sex from student  where  count ( has_pet.* )  > 1  or  pets.PetType = \"dog\"  group by student.StuID "
    },
    {
        "input": "[struct _ sep0] What is the id and weight of every pet who is older than 1 and who has a dog ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( dog ), pet _ age, weight",
        "gold_natsql": "select pets.PetID , pets.weight from student  where  pets.pet_age > 1  and  pets.PetType = \"dog\" "
    },
    {
        "input": "[struct _ sep0] What is the id and weight of every pet who is older than 1 or who has a dog ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( dog ), pet _ age, weight",
        "gold_natsql": "select pets.PetID , pets.weight from student  where  pets.pet_age > 1  or  pets.PetType = \"dog\" "
    },
    {
        "input": "[struct _ sep0] Find the first name and gender of student who have more than one pet and who has a dog ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( dog ), pet _ age, weight",
        "gold_natsql": "select student.Fname , student.Sex from student  where  count ( has_pet.* )  > 1  and  pets.PetType = \"dog\"  group by student.StuID "
    },
    {
        "input": "[struct _ sep0] Find the first name and gender of student who have more than one pet or who has a dog ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( dog ), pet _ age, weight",
        "gold_natsql": "select student.Fname , student.Sex from student  where  count ( has_pet.* )  > 1  or  pets.PetType = \"dog\"  group by student.StuID "
    },
    {
        "input": "[struct _ sep0] What is the first name and gender of the all the students who have more than one pet and who has a dog ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( dog ), pet _ age, weight",
        "gold_natsql": "select student.Fname , student.Sex from student  where  count ( has_pet.* )  > 1  and  pets.PetType = \"dog\"  group by student.StuID "
    },
    {
        "input": "[struct _ sep0] What is the first name and gender of the all the students who have more than one pet or who has a dog ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( dog ), pet _ age, weight",
        "gold_natsql": "select student.Fname , student.Sex from student  where  count ( has_pet.* )  > 1  or  pets.PetType = \"dog\"  group by student.StuID "
    },
    {
        "input": "[struct _ sep0] Find the number of pets whose weight is heavier than 10 and whose age is older than 1 . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select count ( pets.* )  from student  where  pets.weight > 10  and  pets.pet_age > 1 "
    },
    {
        "input": "[struct _ sep0] Find the number of pets whose weight is heavier than 10 or whose age is older than 1 . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select count ( pets.* )  from student  where  pets.weight > 10  or  pets.pet_age > 1 "
    },
    {
        "input": "[struct _ sep0] List the maximum weight and type for each type of pet , whose age is older than 1 . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select max ( pets.weight )  , pets.PetType from student  where  pets.pet_age > 1  group by pets.PetType "
    },
    {
        "input": "[struct _ sep0] Find the number of distinct type of pets , whose age is older than 1 . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select count (  distinct pets.PetType )  from student  where  pets.pet_age > 1 "
    },
    {
        "input": "[struct _ sep0] Find the average and maximum age for each type of pet , whose age is older than 1 . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select avg ( pets.pet_age )  , max ( pets.pet_age )  , pets.PetType from student  where  pets.pet_age > 1  group by pets.PetType "
    },
    {
        "input": "[struct _ sep0] What is the average weight for each type of pet , whose age is older than 1 . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select avg ( pets.weight )  , pets.PetType from student  where  pets.pet_age > 1  group by pets.PetType "
    },
    {
        "input": "[struct _ sep0] List the maximum weight and type for each type of pet , who is older than 1 ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select max ( pets.weight )  , pets.PetType from student  where  pets.pet_age > 1  group by pets.PetType "
    },
    {
        "input": "[struct _ sep0] Find the number of distinct type of pets , who is older than 1 ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select count (  distinct pets.PetType )  from student  where  pets.pet_age > 1 "
    },
    {
        "input": "[struct _ sep0] Find the average and maximum age for each type of pet , who is older than 1 ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select avg ( pets.pet_age )  , max ( pets.pet_age )  , pets.PetType from student  where  pets.pet_age > 1  group by pets.PetType "
    },
    {
        "input": "[struct _ sep0] What is the average weight for each type of pet , who is older than 1 ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select avg ( pets.weight )  , pets.PetType from student  where  pets.pet_age > 1  group by pets.PetType "
    },
    {
        "input": "[struct _ sep0] What is the id and weight of every pet who is older than 1 and who has a cat ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( cat ), pet _ age, weight",
        "gold_natsql": "select pets.PetID , pets.weight from student  where  pets.pet_age > 1  and  pets.PetType = \"cat\" "
    },
    {
        "input": "[struct _ sep0] What is the id and weight of every pet who is older than 1 or who has a cat ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( cat ), pet _ age, weight",
        "gold_natsql": "select pets.PetID , pets.weight from student  where  pets.pet_age > 1  or  pets.PetType = \"cat\" "
    },
    {
        "input": "[struct _ sep0] Find the first name and gender of student who have more than one pet and who has a cat ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( cat ), pet _ age, weight",
        "gold_natsql": "select student.Fname , student.Sex from student  where  count ( has_pet.* )  > 1  and  pets.PetType = \"cat\"  group by student.StuID "
    },
    {
        "input": "[struct _ sep0] Find the first name and gender of student who have more than one pet or who has a cat ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( cat ), pet _ age, weight",
        "gold_natsql": "select student.Fname , student.Sex from student  where  count ( has_pet.* )  > 1  or  pets.PetType = \"cat\"  group by student.StuID "
    },
    {
        "input": "[struct _ sep0] What is the first name and gender of the all the students who have more than one pet and who has a cat ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( cat ), pet _ age, weight",
        "gold_natsql": "select student.Fname , student.Sex from student  where  count ( has_pet.* )  > 1  and  pets.PetType = \"cat\"  group by student.StuID "
    },
    {
        "input": "[struct _ sep0] What is the first name and gender of the all the students who have more than one pet or who has a cat ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( cat ), pet _ age, weight",
        "gold_natsql": "select student.Fname , student.Sex from student  where  count ( has_pet.* )  > 1  or  pets.PetType = \"cat\"  group by student.StuID "
    },
    {
        "input": "[struct _ sep0] What is the id and weight of every pet who is older than 1 and who has a cat ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( cat ), pet _ age, weight",
        "gold_natsql": "select pets.PetID , pets.weight from student  where  pets.pet_age > 1  and  pets.PetType = \"cat\" "
    },
    {
        "input": "[struct _ sep0] What is the id and weight of every pet who is older than 1 or who has a cat ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( cat ), pet _ age, weight",
        "gold_natsql": "select pets.PetID , pets.weight from student  where  pets.pet_age > 1  or  pets.PetType = \"cat\" "
    },
    {
        "input": "[struct _ sep0] Find the first name and gender of student who have more than one pet and who has a cat ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( cat ), pet _ age, weight",
        "gold_natsql": "select student.Fname , student.Sex from student  where  count ( has_pet.* )  > 1  and  pets.PetType = \"cat\"  group by student.StuID "
    },
    {
        "input": "[struct _ sep0] Find the first name and gender of student who have more than one pet or who has a cat ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( cat ), pet _ age, weight",
        "gold_natsql": "select student.Fname , student.Sex from student  where  count ( has_pet.* )  > 1  or  pets.PetType = \"cat\"  group by student.StuID "
    },
    {
        "input": "[struct _ sep0] What is the first name and gender of the all the students who have more than one pet and who has a cat ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( cat ), pet _ age, weight",
        "gold_natsql": "select student.Fname , student.Sex from student  where  count ( has_pet.* )  > 1  and  pets.PetType = \"cat\"  group by student.StuID "
    },
    {
        "input": "[struct _ sep0] What is the first name and gender of the all the students who have more than one pet or who has a cat ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype ( cat ), pet _ age, weight",
        "gold_natsql": "select student.Fname , student.Sex from student  where  count ( has_pet.* )  > 1  or  pets.PetType = \"cat\"  group by student.StuID "
    },
    {
        "input": "[struct _ sep0] Find the first name and gender of student who have more than one pet and who do not have any pet . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select student.Fname , student.Sex from student  where  count ( has_pet.* )  > 1  and  @.@ not in student.*  and  @.@ join has_pet.*  group by student.StuID "
    },
    {
        "input": "[struct _ sep0] What is the first name and gender of the all the students who have more than one pet and who do not have any pet . [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select student.Fname , student.Sex from student  where  count ( has_pet.* )  > 1  and  @.@ not in student.*  and  @.@ join has_pet.*  group by student.StuID "
    },
    {
        "input": "[struct _ sep0] Find the first name and gender of student who have more than one pet and who do not own any pets ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select student.Fname , student.Sex from student  where  count ( has_pet.* )  > 1  and  @.@ not in student.*  and  @.@ join has_pet.*  group by student.StuID "
    },
    {
        "input": "[struct _ sep0] What is the first name and gender of the all the students who have more than one pet and who do not own any pets ? [/struct _ sep0]| pets _ 1 | student : stuid, lname, fname, age, sex, major, advisor, city _ code | has _ pet : stuid, petid | pets : petid, pettype, pet _ age, weight",
        "gold_natsql": "select student.Fname , student.Sex from student  where  count ( has_pet.* )  > 1  and  @.@ not in student.*  and  @.@ join has_pet.*  group by student.StuID "
    },
    {
        "input": "[struct _ sep0] How many car models are produced in the usa and are the produced after 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  countries.CountryName = \"usa\"  and  cars_data.Year > 1980 "
    },
    {
        "input": "[struct _ sep0] How many car models are produced in the usa or are the produced after 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  countries.CountryName = \"usa\"  or  cars_data.Year > 1980 "
    },
    {
        "input": "[struct _ sep0] What is the count of the car models produced in the usa and are the produced after 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  countries.CountryName = \"usa\"  and  cars_data.Year > 1980 "
    },
    {
        "input": "[struct _ sep0] What is the count of the car models produced in the usa or are the produced after 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  countries.CountryName = \"usa\"  or  cars_data.Year > 1980 "
    },
    {
        "input": "[struct _ sep0] What are all the makers and models that are the produced after 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select model_list.Maker , model_list.Model from continents  where  cars_data.Year > 1980 "
    },
    {
        "input": "[struct _ sep0] What are the makers and models that are the produced after 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select model_list.Maker , model_list.Model from continents  where  cars_data.Year > 1980 "
    },
    {
        "input": "[struct _ sep0] What is the maximum horsepower and the make of the car models with 3 cylinders and are the produced after 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower , car_names.Make from continents  where  cars_data.Cylinders = 3  and  cars_data.Year > 1980  order by cars_data.Horsepower desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the maximum horsepower and the make of the car models with 3 cylinders or are the produced after 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower , car_names.Make from continents  where  cars_data.Cylinders = 3  or  cars_data.Year > 1980  order by cars_data.Horsepower desc limit 1"
    },
    {
        "input": "[struct _ sep0] How many cars have more than 4 cylinders and are the produced after 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4  and  cars_data.Year > 1980 "
    },
    {
        "input": "[struct _ sep0] How many cars have more than 4 cylinders or are the produced after 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4  or  cars_data.Year > 1980 "
    },
    {
        "input": "[struct _ sep0] How many car models were produced by the maker with full name American Motor Company and are the produced after 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  car_makers.FullName = \"American Motor Company\"  and  cars_data.Year > 1980 "
    },
    {
        "input": "[struct _ sep0] How many car models were produced by the maker with full name American Motor Company or are the produced after 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  car_makers.FullName = \"American Motor Company\"  or  cars_data.Year > 1980 "
    },
    {
        "input": "[struct _ sep0] What is the number of car models created by the car maker American Motor Company and are the produced after 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  car_makers.FullName = \"American Motor Company\"  and  cars_data.Year > 1980 "
    },
    {
        "input": "[struct _ sep0] What is the number of car models created by the car maker American Motor Company or are the produced after 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  car_makers.FullName = \"American Motor Company\"  or  cars_data.Year > 1980 "
    },
    {
        "input": "[struct _ sep0] How many cars has over 6 cylinders and are the produced after 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 6  and  cars_data.Year > 1980 "
    },
    {
        "input": "[struct _ sep0] How many cars has over 6 cylinders or are the produced after 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 6  or  cars_data.Year > 1980 "
    },
    {
        "input": "[struct _ sep0] How many car models are produced in the usa and produced after 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  countries.CountryName = \"usa\"  and  cars_data.Year > 1980 "
    },
    {
        "input": "[struct _ sep0] How many car models are produced in the usa or produced after 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  countries.CountryName = \"usa\"  or  cars_data.Year > 1980 "
    },
    {
        "input": "[struct _ sep0] What is the count of the car models produced in the usa and produced after 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  countries.CountryName = \"usa\"  and  cars_data.Year > 1980 "
    },
    {
        "input": "[struct _ sep0] What is the count of the car models produced in the usa or produced after 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  countries.CountryName = \"usa\"  or  cars_data.Year > 1980 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon ( mpg ) of the cars with 4 cylinders and produced after 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Cylinders = 4  and  cars_data.Year > 1980 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon ( mpg ) of the cars with 4 cylinders or produced after 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Cylinders = 4  or  cars_data.Year > 1980 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon of all the cars with 4 cylinders and produced after 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Cylinders = 4  and  cars_data.Year > 1980 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon of all the cars with 4 cylinders or produced after 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Cylinders = 4  or  cars_data.Year > 1980 "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars with horsepower more than 150 and produced after 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  and  cars_data.Year > 1980 "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars with horsepower more than 150 or produced after 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  or  cars_data.Year > 1980 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with a horsepower greater than 150 and produced after 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  and  cars_data.Year > 1980 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with a horsepower greater than 150 or produced after 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  or  cars_data.Year > 1980 "
    },
    {
        "input": "[struct _ sep0] How many cars have more than 4 cylinders and produced after 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4  and  cars_data.Year > 1980 "
    },
    {
        "input": "[struct _ sep0] How many cars have more than 4 cylinders or produced after 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4  or  cars_data.Year > 1980 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with more than 4 cylinders and produced after 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4  and  cars_data.Year > 1980 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with more than 4 cylinders or produced after 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4  or  cars_data.Year > 1980 "
    },
    {
        "input": "[struct _ sep0] How many car models were produced by the maker with full name American Motor Company and produced after 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  car_makers.FullName = \"American Motor Company\"  and  cars_data.Year > 1980 "
    },
    {
        "input": "[struct _ sep0] How many car models were produced by the maker with full name American Motor Company or produced after 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  car_makers.FullName = \"American Motor Company\"  or  cars_data.Year > 1980 "
    },
    {
        "input": "[struct _ sep0] What is the number of car models created by the car maker American Motor Company and produced after 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  car_makers.FullName = \"American Motor Company\"  and  cars_data.Year > 1980 "
    },
    {
        "input": "[struct _ sep0] What is the number of car models created by the car maker American Motor Company or produced after 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  car_makers.FullName = \"American Motor Company\"  or  cars_data.Year > 1980 "
    },
    {
        "input": "[struct _ sep0] How many cars has over 6 cylinders and produced after 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 6  and  cars_data.Year > 1980 "
    },
    {
        "input": "[struct _ sep0] How many cars has over 6 cylinders or produced after 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 6  or  cars_data.Year > 1980 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon ( mpg ) of the cars with 4 cylinders and make amc hornet sportabout (sw) ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Cylinders = 4  and  car_names.Make = \"amc hornet sportabout (sw)\" "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon of all the cars with 4 cylinders and make amc hornet sportabout (sw) ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Cylinders = 4  and  car_names.Make = \"amc hornet sportabout (sw)\" "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars with horsepower more than 150 and make amc hornet sportabout (sw) ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  and  car_names.Make = \"amc hornet sportabout (sw)\" "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with a horsepower greater than 150 and make amc hornet sportabout (sw) ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  and  car_names.Make = \"amc hornet sportabout (sw)\" "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower of the cars before 1980 and make amc hornet sportabout (sw) ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  and  car_names.Make = \"amc hornet sportabout (sw)\" "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower for all cars produced before 1980 and make amc hornet sportabout (sw) ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  and  car_names.Make = \"amc hornet sportabout (sw)\" "
    },
    {
        "input": "[struct _ sep0] How many cars have more than 4 cylinders and make amc hornet sportabout (sw) ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4  and  car_names.Make = \"amc hornet sportabout (sw)\" "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with more than 4 cylinders and make amc hornet sportabout (sw) ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4  and  car_names.Make = \"amc hornet sportabout (sw)\" "
    },
    {
        "input": "[struct _ sep0] how many cars were produced in 1980 and make amc hornet sportabout (sw) ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1980  and  car_names.Make = \"amc hornet sportabout (sw)\" "
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car with the largest accelerate and make amc hornet sportabout (sw) ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  car_names.Make = \"amc hornet sportabout (sw)\"  order by cars_data.Accelerate desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car with the greatest accelerate and make amc hornet sportabout (sw) ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  car_names.Make = \"amc hornet sportabout (sw)\"  order by cars_data.Accelerate desc limit 1"
    },
    {
        "input": "[struct _ sep0] How many cars has over 6 cylinders and make amc hornet sportabout (sw) ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 6  and  car_names.Make = \"amc hornet sportabout (sw)\" "
    },
    {
        "input": "[struct _ sep0] What are the names and ids of all makers with more than 3 models and are there in france ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( france ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select car_makers.FullName , car_makers.Id from continents  where  count ( model_list.* )  > 3  and  countries.CountryName = \"france\"  group by car_makers.Id "
    },
    {
        "input": "[struct _ sep0] What are the names and ids of all makers with more than 3 models or are there in france ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( france ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select car_makers.FullName , car_makers.Id from continents  where  count ( model_list.* )  > 3  or  countries.CountryName = \"france\"  group by car_makers.Id "
    },
    {
        "input": "[struct _ sep0] What are the names and ids of all makers with more than 3 models and in france ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( france ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select car_makers.FullName , car_makers.Id from continents  where  count ( model_list.* )  > 3  and  countries.CountryName = \"france\"  group by car_makers.Id "
    },
    {
        "input": "[struct _ sep0] What are the names and ids of all makers with more than 3 models or in france ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( france ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select car_makers.FullName , car_makers.Id from continents  where  count ( model_list.* )  > 3  or  countries.CountryName = \"france\"  group by car_makers.Id "
    },
    {
        "input": "[struct _ sep0] Which distinct car models are the produced after 1980 and are produced in the usa ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  and  countries.CountryName = \"usa\" "
    },
    {
        "input": "[struct _ sep0] Which distinct car models are the produced after 1980 or are produced in the usa ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  or  countries.CountryName = \"usa\" "
    },
    {
        "input": "[struct _ sep0] What are the different models for the cars produced after 1980 and are produced in the usa ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  and  countries.CountryName = \"usa\" "
    },
    {
        "input": "[struct _ sep0] What are the different models for the cars produced after 1980 or are produced in the usa ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  or  countries.CountryName = \"usa\" "
    },
    {
        "input": "[struct _ sep0] What are all the makers and models that are produced in the usa ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select model_list.Maker , model_list.Model from continents  where  countries.CountryName = \"usa\" "
    },
    {
        "input": "[struct _ sep0] What are the makers and models that are produced in the usa ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select model_list.Maker , model_list.Model from continents  where  countries.CountryName = \"usa\" "
    },
    {
        "input": "[struct _ sep0] How many car models were produced by the maker with full name American Motor Company and are produced in the usa ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  car_makers.FullName = \"American Motor Company\"  and  countries.CountryName = \"usa\" "
    },
    {
        "input": "[struct _ sep0] How many car models were produced by the maker with full name American Motor Company or are produced in the usa ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  car_makers.FullName = \"American Motor Company\"  or  countries.CountryName = \"usa\" "
    },
    {
        "input": "[struct _ sep0] What is the number of car models created by the car maker American Motor Company and are produced in the usa ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  car_makers.FullName = \"American Motor Company\"  and  countries.CountryName = \"usa\" "
    },
    {
        "input": "[struct _ sep0] What is the number of car models created by the car maker American Motor Company or are produced in the usa ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  car_makers.FullName = \"American Motor Company\"  or  countries.CountryName = \"usa\" "
    },
    {
        "input": "[struct _ sep0] Which distinct car models are the produced after 1980 and produced in the usa ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  and  countries.CountryName = \"usa\" "
    },
    {
        "input": "[struct _ sep0] Which distinct car models are the produced after 1980 or produced in the usa ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  or  countries.CountryName = \"usa\" "
    },
    {
        "input": "[struct _ sep0] What are the different models for the cars produced after 1980 and produced in the usa ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  and  countries.CountryName = \"usa\" "
    },
    {
        "input": "[struct _ sep0] What are the different models for the cars produced after 1980 or produced in the usa ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  or  countries.CountryName = \"usa\" "
    },
    {
        "input": "[struct _ sep0] What are all the makers and models that produced in the usa ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select model_list.Maker , model_list.Model from continents  where  countries.CountryName = \"usa\" "
    },
    {
        "input": "[struct _ sep0] What are the makers and models that produced in the usa ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select model_list.Maker , model_list.Model from continents  where  countries.CountryName = \"usa\" "
    },
    {
        "input": "[struct _ sep0] How many car models were produced by the maker with full name American Motor Company and produced in the usa ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  car_makers.FullName = \"American Motor Company\"  and  countries.CountryName = \"usa\" "
    },
    {
        "input": "[struct _ sep0] How many car models were produced by the maker with full name American Motor Company or produced in the usa ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  car_makers.FullName = \"American Motor Company\"  or  countries.CountryName = \"usa\" "
    },
    {
        "input": "[struct _ sep0] What is the number of car models created by the car maker American Motor Company and produced in the usa ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  car_makers.FullName = \"American Motor Company\"  and  countries.CountryName = \"usa\" "
    },
    {
        "input": "[struct _ sep0] What is the number of car models created by the car maker American Motor Company or produced in the usa ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  car_makers.FullName = \"American Motor Company\"  or  countries.CountryName = \"usa\" "
    },
    {
        "input": "[struct _ sep0] What are the different models for the cars produced after 1980 and with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  and  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] What are the different models for the cars produced after 1980 or with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  or  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car make amc hornet sportabout (sw) and with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  where  car_names.Make = \"amc hornet sportabout (sw)\"  and  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car make amc hornet sportabout (sw) or with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  where  car_names.Make = \"amc hornet sportabout (sw)\"  or  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars with horsepower more than 150 and with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  and  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars with horsepower more than 150 or with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  or  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with a horsepower greater than 150 and with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  and  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with a horsepower greater than 150 or with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  or  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower of the cars before 1980 and with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  and  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower of the cars before 1980 or with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  or  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower for all cars produced before 1980 and with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  and  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower for all cars produced before 1980 or with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  or  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] how many cars were produced in 1980 and with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1980  and  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] how many cars were produced in 1980 or with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1980  or  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car with the largest accelerate and with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Cylinders = 4  order by cars_data.Accelerate desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car with the greatest accelerate and with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Cylinders = 4  order by cars_data.Accelerate desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the different models for the cars produced after 1980 and with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  and  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] What are the different models for the cars produced after 1980 or with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  or  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car make amc hornet sportabout (sw) and with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  where  car_names.Make = \"amc hornet sportabout (sw)\"  and  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car make amc hornet sportabout (sw) or with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  where  car_names.Make = \"amc hornet sportabout (sw)\"  or  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars with horsepower more than 150 and with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  and  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars with horsepower more than 150 or with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  or  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with a horsepower greater than 150 and with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  and  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with a horsepower greater than 150 or with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  or  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower of the cars before 1980 and with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  and  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower of the cars before 1980 or with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  or  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower for all cars produced before 1980 and with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  and  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower for all cars produced before 1980 or with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  or  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] how many cars were produced in 1980 and with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1980  and  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] how many cars were produced in 1980 or with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1980  or  cars_data.Cylinders = 4 "
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car with the largest accelerate and with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Cylinders = 4  order by cars_data.Accelerate desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car with the greatest accelerate and with 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Cylinders = 4  order by cars_data.Accelerate desc limit 1"
    },
    {
        "input": "[struct _ sep0] Which distinct car models are the produced after 1980 and produced with 8 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  and  cars_data.Cylinders = 8 "
    },
    {
        "input": "[struct _ sep0] Which distinct car models are the produced after 1980 or produced with 8 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  or  cars_data.Cylinders = 8 "
    },
    {
        "input": "[struct _ sep0] What are the different models for the cars produced after 1980 and produced with 8 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  and  cars_data.Cylinders = 8 "
    },
    {
        "input": "[struct _ sep0] What are the different models for the cars produced after 1980 or produced with 8 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  or  cars_data.Cylinders = 8 "
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car make amc hornet sportabout (sw) and produced with 8 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  where  car_names.Make = \"amc hornet sportabout (sw)\"  and  cars_data.Cylinders = 8 "
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car make amc hornet sportabout (sw) or produced with 8 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  where  car_names.Make = \"amc hornet sportabout (sw)\"  or  cars_data.Cylinders = 8 "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars with horsepower more than 150 and produced with 8 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  and  cars_data.Cylinders = 8 "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars with horsepower more than 150 or produced with 8 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  or  cars_data.Cylinders = 8 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with a horsepower greater than 150 and produced with 8 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  and  cars_data.Cylinders = 8 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with a horsepower greater than 150 or produced with 8 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  or  cars_data.Cylinders = 8 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower of the cars before 1980 and produced with 8 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  and  cars_data.Cylinders = 8 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower of the cars before 1980 or produced with 8 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  or  cars_data.Cylinders = 8 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower for all cars produced before 1980 and produced with 8 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  and  cars_data.Cylinders = 8 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower for all cars produced before 1980 or produced with 8 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  or  cars_data.Cylinders = 8 "
    },
    {
        "input": "[struct _ sep0] how many cars were produced in 1980 and produced with 8 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1980  and  cars_data.Cylinders = 8 "
    },
    {
        "input": "[struct _ sep0] how many cars were produced in 1980 or produced with 8 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1980  or  cars_data.Cylinders = 8 "
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car with the largest accelerate and produced with 8 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Cylinders = 8  order by cars_data.Accelerate desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car with the greatest accelerate and produced with 8 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Cylinders = 8  order by cars_data.Accelerate desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon ( mpg ) of the cars with 4 cylinders and on 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Cylinders = 4  and  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon ( mpg ) of the cars with 4 cylinders or on 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Cylinders = 4  or  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon of all the cars with 4 cylinders and on 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Cylinders = 4  and  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon of all the cars with 4 cylinders or on 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Cylinders = 4  or  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars with horsepower more than 150 and on 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  and  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars with horsepower more than 150 or on 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  or  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with a horsepower greater than 150 and on 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  and  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with a horsepower greater than 150 or on 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  or  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] What is the maximum horsepower and the make of the car models with 3 cylinders and on 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower , car_names.Make from continents  where  cars_data.Cylinders = 3  and  cars_data.Year = 1974  order by cars_data.Horsepower desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the maximum horsepower and the make of the car models with 3 cylinders or on 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower , car_names.Make from continents  where  cars_data.Cylinders = 3  or  cars_data.Year = 1974  order by cars_data.Horsepower desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the maximum accelerate for different number of cylinders , on 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select max ( cars_data.Accelerate )  , cars_data.Cylinders from continents  where  cars_data.Year = 1974  group by cars_data.Cylinders "
    },
    {
        "input": "[struct _ sep0] What is the maximum accelerate for all the different cylinders , on 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select max ( cars_data.Accelerate )  , cars_data.Cylinders from continents  where  cars_data.Year = 1974  group by cars_data.Cylinders "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with more than 4 cylinders and on 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4  and  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with more than 4 cylinders or on 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4  or  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car with the largest accelerate and on 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Year = 1974  order by cars_data.Accelerate desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car with the greatest accelerate and on 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Year = 1974  order by cars_data.Accelerate desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the different models for the cars produced after 1980 and with 8 cylinders produced ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  and  cars_data.Cylinders = 8 "
    },
    {
        "input": "[struct _ sep0] What are the different models for the cars produced after 1980 or with 8 cylinders produced ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  or  cars_data.Cylinders = 8 "
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car make amc hornet sportabout (sw) and with 8 cylinders produced ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  where  car_names.Make = \"amc hornet sportabout (sw)\"  and  cars_data.Cylinders = 8 "
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car make amc hornet sportabout (sw) or with 8 cylinders produced ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  where  car_names.Make = \"amc hornet sportabout (sw)\"  or  cars_data.Cylinders = 8 "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars with horsepower more than 150 and with 8 cylinders produced ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  and  cars_data.Cylinders = 8 "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars with horsepower more than 150 or with 8 cylinders produced ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  or  cars_data.Cylinders = 8 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with a horsepower greater than 150 and with 8 cylinders produced ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  and  cars_data.Cylinders = 8 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with a horsepower greater than 150 or with 8 cylinders produced ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  or  cars_data.Cylinders = 8 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower of the cars before 1980 and with 8 cylinders produced ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  and  cars_data.Cylinders = 8 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower of the cars before 1980 or with 8 cylinders produced ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  or  cars_data.Cylinders = 8 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower for all cars produced before 1980 and with 8 cylinders produced ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  and  cars_data.Cylinders = 8 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower for all cars produced before 1980 or with 8 cylinders produced ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  or  cars_data.Cylinders = 8 "
    },
    {
        "input": "[struct _ sep0] how many cars were produced in 1980 and with 8 cylinders produced ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1980  and  cars_data.Cylinders = 8 "
    },
    {
        "input": "[struct _ sep0] how many cars were produced in 1980 or with 8 cylinders produced ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1980  or  cars_data.Cylinders = 8 "
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car with the largest accelerate and with 8 cylinders produced ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Cylinders = 8  order by cars_data.Accelerate desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car with the greatest accelerate and with 8 cylinders produced ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Cylinders = 8  order by cars_data.Accelerate desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon ( mpg ) of the cars with 4 cylinders and in 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Cylinders = 4  and  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon ( mpg ) of the cars with 4 cylinders or in 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Cylinders = 4  or  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon of all the cars with 4 cylinders and in 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Cylinders = 4  and  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon of all the cars with 4 cylinders or in 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Cylinders = 4  or  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars with horsepower more than 150 and in 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  and  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars with horsepower more than 150 or in 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  or  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with a horsepower greater than 150 and in 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  and  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with a horsepower greater than 150 or in 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  or  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] What is the maximum horsepower and the make of the car models with 3 cylinders and in 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower , car_names.Make from continents  where  cars_data.Cylinders = 3  and  cars_data.Year = 1974  order by cars_data.Horsepower desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the maximum horsepower and the make of the car models with 3 cylinders or in 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower , car_names.Make from continents  where  cars_data.Cylinders = 3  or  cars_data.Year = 1974  order by cars_data.Horsepower desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the number of cars with more than 4 cylinders and in 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4  and  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with more than 4 cylinders or in 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4  or  cars_data.Year = 1974 "
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car with the largest accelerate and in 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Year = 1974  order by cars_data.Accelerate desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car with the greatest accelerate and in 1974 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Year = 1974  order by cars_data.Accelerate desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the different models for the cars produced after 1980 and with horsepower more than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  and  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What are the different models for the cars produced after 1980 or with horsepower more than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  or  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car make amc hornet sportabout (sw) and with horsepower more than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  where  car_names.Make = \"amc hornet sportabout (sw)\"  and  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car make amc hornet sportabout (sw) or with horsepower more than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  where  car_names.Make = \"amc hornet sportabout (sw)\"  or  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon ( mpg ) of the cars with 4 cylinders and with horsepower more than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Cylinders = 4  and  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon ( mpg ) of the cars with 4 cylinders or with horsepower more than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Cylinders = 4  or  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon of all the cars with 4 cylinders and with horsepower more than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Cylinders = 4  and  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon of all the cars with 4 cylinders or with horsepower more than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Cylinders = 4  or  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower of the cars before 1980 and with horsepower more than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  and  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower of the cars before 1980 or with horsepower more than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  or  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower for all cars produced before 1980 and with horsepower more than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  and  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower for all cars produced before 1980 or with horsepower more than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  or  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] How many cars have more than 4 cylinders and with horsepower more than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4  and  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] How many cars have more than 4 cylinders or with horsepower more than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4  or  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with more than 4 cylinders and with horsepower more than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4  and  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with more than 4 cylinders or with horsepower more than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4  or  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] how many cars were produced in 1980 and with horsepower more than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1980  and  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] how many cars were produced in 1980 or with horsepower more than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1980  or  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car with the largest accelerate and with horsepower more than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Horsepower > 150  order by cars_data.Accelerate desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car with the greatest accelerate and with horsepower more than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Horsepower > 150  order by cars_data.Accelerate desc limit 1"
    },
    {
        "input": "[struct _ sep0] How many cars has over 6 cylinders and with horsepower more than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 6  and  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] How many cars has over 6 cylinders or with horsepower more than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 6  or  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What are the different models for the cars produced after 1980 and with a horsepower greater than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  and  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What are the different models for the cars produced after 1980 or with a horsepower greater than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  or  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car make amc hornet sportabout (sw) and with a horsepower greater than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  where  car_names.Make = \"amc hornet sportabout (sw)\"  and  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car make amc hornet sportabout (sw) or with a horsepower greater than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  where  car_names.Make = \"amc hornet sportabout (sw)\"  or  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon ( mpg ) of the cars with 4 cylinders and with a horsepower greater than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Cylinders = 4  and  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon ( mpg ) of the cars with 4 cylinders or with a horsepower greater than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Cylinders = 4  or  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon of all the cars with 4 cylinders and with a horsepower greater than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Cylinders = 4  and  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon of all the cars with 4 cylinders or with a horsepower greater than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Cylinders = 4  or  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower of the cars before 1980 and with a horsepower greater than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  and  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower of the cars before 1980 or with a horsepower greater than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  or  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower for all cars produced before 1980 and with a horsepower greater than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  and  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower for all cars produced before 1980 or with a horsepower greater than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  or  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] How many cars have more than 4 cylinders and with a horsepower greater than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4  and  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] How many cars have more than 4 cylinders or with a horsepower greater than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4  or  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with more than 4 cylinders and with a horsepower greater than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4  and  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with more than 4 cylinders or with a horsepower greater than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4  or  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] how many cars were produced in 1980 and with a horsepower greater than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1980  and  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] how many cars were produced in 1980 or with a horsepower greater than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1980  or  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car with the largest accelerate and with a horsepower greater than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Horsepower > 150  order by cars_data.Accelerate desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car with the greatest accelerate and with a horsepower greater than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Horsepower > 150  order by cars_data.Accelerate desc limit 1"
    },
    {
        "input": "[struct _ sep0] How many cars has over 6 cylinders and with a horsepower greater than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 6  and  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] How many cars has over 6 cylinders or with a horsepower greater than 150 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 6  or  cars_data.Horsepower > 150 "
    },
    {
        "input": "[struct _ sep0] What is the name of the country with the most car makers and in europe ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( europe ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select countries.CountryName from continents  where  continents.Continent = \"europe\"  group by car_makers.Country  order by count ( car_makers.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names and ids of all countries with at least one car maker and in europe ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( europe ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select countries.CountryName , countries.CountryId from continents  where  count ( car_makers.* )  >= 1  and  continents.Continent = \"europe\"  group by countries.CountryId "
    },
    {
        "input": "[struct _ sep0] What are the names and ids of all countries with at least one car maker or in europe ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( europe ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select countries.CountryName , countries.CountryId from continents  where  count ( car_makers.* )  >= 1  or  continents.Continent = \"europe\"  group by countries.CountryId "
    },
    {
        "input": "[struct _ sep0] How many countries has more than 2 car makers and in europe ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( europe ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( countries.* )  from continents  where  count ( car_makers.* )  > 2  and  continents.Continent = \"europe\"  group by countries.CountryId "
    },
    {
        "input": "[struct _ sep0] What is the number of countries with more than 2 car makers and in europe ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( europe ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( countries.* )  from continents  where  count ( car_makers.* )  > 2  and  continents.Continent = \"europe\"  group by countries.CountryId "
    },
    {
        "input": "[struct _ sep0] Which distinct car models are the produced after 1980 and with 3 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  and  cars_data.Cylinders = 3 "
    },
    {
        "input": "[struct _ sep0] Which distinct car models are the produced after 1980 or with 3 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  or  cars_data.Cylinders = 3 "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars with horsepower more than 150 and with 3 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  and  cars_data.Cylinders = 3 "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars with horsepower more than 150 or with 3 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  or  cars_data.Cylinders = 3 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with a horsepower greater than 150 and with 3 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  and  cars_data.Cylinders = 3 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with a horsepower greater than 150 or with 3 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  or  cars_data.Cylinders = 3 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower of the cars before 1980 and with 3 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  and  cars_data.Cylinders = 3 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower of the cars before 1980 or with 3 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  or  cars_data.Cylinders = 3 "
    },
    {
        "input": "[struct _ sep0] Which distinct car models are the produced after 1980 and with 3 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  and  cars_data.Cylinders = 3 "
    },
    {
        "input": "[struct _ sep0] Which distinct car models are the produced after 1980 or with 3 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  or  cars_data.Cylinders = 3 "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars with horsepower more than 150 and with 3 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  and  cars_data.Cylinders = 3 "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars with horsepower more than 150 or with 3 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  or  cars_data.Cylinders = 3 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with a horsepower greater than 150 and with 3 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  and  cars_data.Cylinders = 3 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with a horsepower greater than 150 or with 3 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  or  cars_data.Cylinders = 3 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower of the cars before 1980 and with 3 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  and  cars_data.Cylinders = 3 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower of the cars before 1980 or with 3 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  or  cars_data.Cylinders = 3 "
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car make amc hornet sportabout (sw) and before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  where  car_names.Make = \"amc hornet sportabout (sw)\"  and  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car make amc hornet sportabout (sw) or before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  where  car_names.Make = \"amc hornet sportabout (sw)\"  or  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon ( mpg ) of the cars with 4 cylinders and before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Cylinders = 4  and  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon ( mpg ) of the cars with 4 cylinders or before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Cylinders = 4  or  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon of all the cars with 4 cylinders and before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Cylinders = 4  and  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon of all the cars with 4 cylinders or before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Cylinders = 4  or  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars with horsepower more than 150 and before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  and  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars with horsepower more than 150 or before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  or  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with a horsepower greater than 150 and before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  and  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with a horsepower greater than 150 or before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  or  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] What is the maximum horsepower and the make of the car models with 3 cylinders and before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower , car_names.Make from continents  where  cars_data.Cylinders = 3  and  cars_data.Year < 1980  order by cars_data.Horsepower desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the maximum horsepower and the make of the car models with 3 cylinders or before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower , car_names.Make from continents  where  cars_data.Cylinders = 3  or  cars_data.Year < 1980  order by cars_data.Horsepower desc limit 1"
    },
    {
        "input": "[struct _ sep0] How many cars have more than 4 cylinders and before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4  and  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] How many cars have more than 4 cylinders or before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4  or  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with more than 4 cylinders and before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4  and  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with more than 4 cylinders or before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4  or  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car with the largest accelerate and before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Year < 1980  order by cars_data.Accelerate desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car with the greatest accelerate and before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Year < 1980  order by cars_data.Accelerate desc limit 1"
    },
    {
        "input": "[struct _ sep0] How many cars has over 6 cylinders and before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 6  and  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] How many cars has over 6 cylinders or before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 6  or  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car make amc hornet sportabout (sw) and produced before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  where  car_names.Make = \"amc hornet sportabout (sw)\"  and  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car make amc hornet sportabout (sw) or produced before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  where  car_names.Make = \"amc hornet sportabout (sw)\"  or  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon ( mpg ) of the cars with 4 cylinders and produced before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Cylinders = 4  and  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon ( mpg ) of the cars with 4 cylinders or produced before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Cylinders = 4  or  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon of all the cars with 4 cylinders and produced before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Cylinders = 4  and  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon of all the cars with 4 cylinders or produced before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Cylinders = 4  or  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars with horsepower more than 150 and produced before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  and  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars with horsepower more than 150 or produced before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  or  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with a horsepower greater than 150 and produced before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  and  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with a horsepower greater than 150 or produced before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  or  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] How many cars have more than 4 cylinders and produced before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4  and  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] How many cars have more than 4 cylinders or produced before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4  or  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with more than 4 cylinders and produced before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4  and  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with more than 4 cylinders or produced before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4  or  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car with the largest accelerate and produced before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Year < 1980  order by cars_data.Accelerate desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car with the greatest accelerate and produced before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Year < 1980  order by cars_data.Accelerate desc limit 1"
    },
    {
        "input": "[struct _ sep0] How many cars has over 6 cylinders and produced before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 6  and  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] How many cars has over 6 cylinders or produced before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 6  or  cars_data.Year < 1980 "
    },
    {
        "input": "[struct _ sep0] Which distinct car models are the produced after 1980 and have more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  and  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] Which distinct car models are the produced after 1980 or have more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  or  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] What are the different models for the cars produced after 1980 and have more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  and  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] What are the different models for the cars produced after 1980 or have more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  or  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car make amc hornet sportabout (sw) and have more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  where  car_names.Make = \"amc hornet sportabout (sw)\"  and  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car make amc hornet sportabout (sw) or have more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  where  car_names.Make = \"amc hornet sportabout (sw)\"  or  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars with horsepower more than 150 and have more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  and  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars with horsepower more than 150 or have more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  or  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with a horsepower greater than 150 and have more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  and  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with a horsepower greater than 150 or have more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  or  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower of the cars before 1980 and have more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  and  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower of the cars before 1980 or have more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  or  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower for all cars produced before 1980 and have more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  and  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower for all cars produced before 1980 or have more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  or  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] how many cars were produced in 1980 and have more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1980  and  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] how many cars were produced in 1980 or have more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1980  or  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car with the largest accelerate and have more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Cylinders > 4  order by cars_data.Accelerate desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car with the greatest accelerate and have more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Cylinders > 4  order by cars_data.Accelerate desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the different models for the cars produced after 1980 and with more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  and  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] What are the different models for the cars produced after 1980 or with more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  or  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car make amc hornet sportabout (sw) and with more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  where  car_names.Make = \"amc hornet sportabout (sw)\"  and  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car make amc hornet sportabout (sw) or with more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  where  car_names.Make = \"amc hornet sportabout (sw)\"  or  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars with horsepower more than 150 and with more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  and  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars with horsepower more than 150 or with more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  or  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with a horsepower greater than 150 and with more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  and  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with a horsepower greater than 150 or with more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  or  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower of the cars before 1980 and with more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  and  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower of the cars before 1980 or with more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  or  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower for all cars produced before 1980 and with more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  and  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower for all cars produced before 1980 or with more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  or  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] how many cars were produced in 1980 and with more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1980  and  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] how many cars were produced in 1980 or with more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1980  or  cars_data.Cylinders > 4 "
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car with the largest accelerate and with more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Cylinders > 4  order by cars_data.Accelerate desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car with the greatest accelerate and with more than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Cylinders > 4  order by cars_data.Accelerate desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car make amc hornet sportabout (sw) and were produced in 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  where  car_names.Make = \"amc hornet sportabout (sw)\"  and  cars_data.Year = 1980 "
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car make amc hornet sportabout (sw) or were produced in 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  where  car_names.Make = \"amc hornet sportabout (sw)\"  or  cars_data.Year = 1980 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon ( mpg ) of the cars with 4 cylinders and were produced in 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Cylinders = 4  and  cars_data.Year = 1980 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon ( mpg ) of the cars with 4 cylinders or were produced in 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Cylinders = 4  or  cars_data.Year = 1980 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon of all the cars with 4 cylinders and were produced in 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Cylinders = 4  and  cars_data.Year = 1980 "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon of all the cars with 4 cylinders or were produced in 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Cylinders = 4  or  cars_data.Year = 1980 "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars with horsepower more than 150 and were produced in 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  and  cars_data.Year = 1980 "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars with horsepower more than 150 or were produced in 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  or  cars_data.Year = 1980 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with a horsepower greater than 150 and were produced in 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  and  cars_data.Year = 1980 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with a horsepower greater than 150 or were produced in 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  or  cars_data.Year = 1980 "
    },
    {
        "input": "[struct _ sep0] How many cars have more than 4 cylinders and were produced in 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4  and  cars_data.Year = 1980 "
    },
    {
        "input": "[struct _ sep0] How many cars have more than 4 cylinders or were produced in 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4  or  cars_data.Year = 1980 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with more than 4 cylinders and were produced in 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4  and  cars_data.Year = 1980 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with more than 4 cylinders or were produced in 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4  or  cars_data.Year = 1980 "
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car with the largest accelerate and were produced in 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Year = 1980  order by cars_data.Accelerate desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car with the greatest accelerate and were produced in 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Year = 1980  order by cars_data.Accelerate desc limit 1"
    },
    {
        "input": "[struct _ sep0] How many cars has over 6 cylinders and were produced in 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 6  and  cars_data.Year = 1980 "
    },
    {
        "input": "[struct _ sep0] How many cars has over 6 cylinders or were produced in 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 6  or  cars_data.Year = 1980 "
    },
    {
        "input": "[struct _ sep0] Which distinct car models are the produced after 1980 and were produced by the maker with full name American Motor Company ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  and  car_makers.FullName = \"American Motor Company\" "
    },
    {
        "input": "[struct _ sep0] Which distinct car models are the produced after 1980 or were produced by the maker with full name American Motor Company ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  or  car_makers.FullName = \"American Motor Company\" "
    },
    {
        "input": "[struct _ sep0] What are the different models for the cars produced after 1980 and were produced by the maker with full name American Motor Company ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  and  car_makers.FullName = \"American Motor Company\" "
    },
    {
        "input": "[struct _ sep0] What are the different models for the cars produced after 1980 or were produced by the maker with full name American Motor Company ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  or  car_makers.FullName = \"American Motor Company\" "
    },
    {
        "input": "[struct _ sep0] How many car models are produced in the usa and were produced by the maker with full name American Motor Company ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  countries.CountryName = \"usa\"  and  car_makers.FullName = \"American Motor Company\" "
    },
    {
        "input": "[struct _ sep0] How many car models are produced in the usa or were produced by the maker with full name American Motor Company ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  countries.CountryName = \"usa\"  or  car_makers.FullName = \"American Motor Company\" "
    },
    {
        "input": "[struct _ sep0] What is the count of the car models produced in the usa and were produced by the maker with full name American Motor Company ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  countries.CountryName = \"usa\"  and  car_makers.FullName = \"American Motor Company\" "
    },
    {
        "input": "[struct _ sep0] What is the count of the car models produced in the usa or were produced by the maker with full name American Motor Company ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  countries.CountryName = \"usa\"  or  car_makers.FullName = \"American Motor Company\" "
    },
    {
        "input": "[struct _ sep0] What are all the makers and models that were produced by the maker with full name American Motor Company ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select model_list.Maker , model_list.Model from continents  where  car_makers.FullName = \"American Motor Company\" "
    },
    {
        "input": "[struct _ sep0] What are the makers and models that were produced by the maker with full name American Motor Company ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select model_list.Maker , model_list.Model from continents  where  car_makers.FullName = \"American Motor Company\" "
    },
    {
        "input": "[struct _ sep0] How many countries has more than 2 car makers and were produced by the maker with full name American Motor Company ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( countries.* )  from continents  where  count ( car_makers.* )  > 2  and  car_makers.FullName = \"American Motor Company\"  group by countries.CountryId "
    },
    {
        "input": "[struct _ sep0] Which distinct car models are the produced after 1980 and created by the car maker American Motor Company ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  and  car_makers.FullName = \"American Motor Company\" "
    },
    {
        "input": "[struct _ sep0] Which distinct car models are the produced after 1980 or created by the car maker American Motor Company ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  or  car_makers.FullName = \"American Motor Company\" "
    },
    {
        "input": "[struct _ sep0] What are the different models for the cars produced after 1980 and created by the car maker American Motor Company ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  and  car_makers.FullName = \"American Motor Company\" "
    },
    {
        "input": "[struct _ sep0] What are the different models for the cars produced after 1980 or created by the car maker American Motor Company ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  or  car_makers.FullName = \"American Motor Company\" "
    },
    {
        "input": "[struct _ sep0] How many car models are produced in the usa and created by the car maker American Motor Company ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  countries.CountryName = \"usa\"  and  car_makers.FullName = \"American Motor Company\" "
    },
    {
        "input": "[struct _ sep0] How many car models are produced in the usa or created by the car maker American Motor Company ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  countries.CountryName = \"usa\"  or  car_makers.FullName = \"American Motor Company\" "
    },
    {
        "input": "[struct _ sep0] What is the count of the car models produced in the usa and created by the car maker American Motor Company ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  countries.CountryName = \"usa\"  and  car_makers.FullName = \"American Motor Company\" "
    },
    {
        "input": "[struct _ sep0] What is the count of the car models produced in the usa or created by the car maker American Motor Company ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  countries.CountryName = \"usa\"  or  car_makers.FullName = \"American Motor Company\" "
    },
    {
        "input": "[struct _ sep0] What are all the makers and models that created by the car maker American Motor Company ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select model_list.Maker , model_list.Model from continents  where  car_makers.FullName = \"American Motor Company\" "
    },
    {
        "input": "[struct _ sep0] What are the makers and models that created by the car maker American Motor Company ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select model_list.Maker , model_list.Model from continents  where  car_makers.FullName = \"American Motor Company\" "
    },
    {
        "input": "[struct _ sep0] How many countries has more than 2 car makers and created by the car maker American Motor Company ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( countries.* )  from continents  where  count ( car_makers.* )  > 2  and  car_makers.FullName = \"American Motor Company\"  group by countries.CountryId "
    },
    {
        "input": "[struct _ sep0] Which distinct car models are the produced after 1980 and are produced by maker with the full name General Motors or ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( General Motors ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  and  car_makers.FullName = \"General Motors\" "
    },
    {
        "input": "[struct _ sep0] Which distinct car models are the produced after 1980 or are produced by maker with the full name General Motors or ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( General Motors ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  or  car_makers.FullName = \"General Motors\" "
    },
    {
        "input": "[struct _ sep0] What are the different models for the cars produced after 1980 and are produced by maker with the full name General Motors or ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( General Motors ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  and  car_makers.FullName = \"General Motors\" "
    },
    {
        "input": "[struct _ sep0] What are the different models for the cars produced after 1980 or are produced by maker with the full name General Motors or ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( General Motors ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  or  car_makers.FullName = \"General Motors\" "
    },
    {
        "input": "[struct _ sep0] How many car models are produced in the usa and are produced by maker with the full name General Motors or ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname ( General Motors ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  countries.CountryName = \"usa\"  and  car_makers.FullName = \"General Motors\" "
    },
    {
        "input": "[struct _ sep0] How many car models are produced in the usa or are produced by maker with the full name General Motors or ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname ( General Motors ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  countries.CountryName = \"usa\"  or  car_makers.FullName = \"General Motors\" "
    },
    {
        "input": "[struct _ sep0] What is the count of the car models produced in the usa and are produced by maker with the full name General Motors or ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname ( General Motors ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  countries.CountryName = \"usa\"  and  car_makers.FullName = \"General Motors\" "
    },
    {
        "input": "[struct _ sep0] What is the count of the car models produced in the usa or are produced by maker with the full name General Motors or ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname ( General Motors ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  countries.CountryName = \"usa\"  or  car_makers.FullName = \"General Motors\" "
    },
    {
        "input": "[struct _ sep0] What are all the makers and models that are produced by maker with the full name General Motors or ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( General Motors ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select model_list.Maker , model_list.Model from continents  where  car_makers.FullName = \"General Motors\" "
    },
    {
        "input": "[struct _ sep0] What are the makers and models that are produced by maker with the full name General Motors or ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( General Motors ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select model_list.Maker , model_list.Model from continents  where  car_makers.FullName = \"General Motors\" "
    },
    {
        "input": "[struct _ sep0] How many countries has more than 2 car makers and are produced by maker with the full name General Motors or ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( General Motors ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( countries.* )  from continents  where  count ( car_makers.* )  > 2  and  car_makers.FullName = \"General Motors\"  group by countries.CountryId "
    },
    {
        "input": "[struct _ sep0] Which distinct car models are the produced after 1980 and weighing more than 3500 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  and  cars_data.Weight > 3500 "
    },
    {
        "input": "[struct _ sep0] Which distinct car models are the produced after 1980 or weighing more than 3500 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  or  cars_data.Weight > 3500 "
    },
    {
        "input": "[struct _ sep0] What are the different models for the cars produced after 1980 and weighing more than 3500 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  and  cars_data.Weight > 3500 "
    },
    {
        "input": "[struct _ sep0] What are the different models for the cars produced after 1980 or weighing more than 3500 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  or  cars_data.Weight > 3500 "
    },
    {
        "input": "[struct _ sep0] How many car models are produced in the usa and weighing more than 3500 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  countries.CountryName = \"usa\"  and  cars_data.Weight > 3500 "
    },
    {
        "input": "[struct _ sep0] How many car models are produced in the usa or weighing more than 3500 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  countries.CountryName = \"usa\"  or  cars_data.Weight > 3500 "
    },
    {
        "input": "[struct _ sep0] What is the count of the car models produced in the usa and weighing more than 3500 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  countries.CountryName = \"usa\"  and  cars_data.Weight > 3500 "
    },
    {
        "input": "[struct _ sep0] What is the count of the car models produced in the usa or weighing more than 3500 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  countries.CountryName = \"usa\"  or  cars_data.Weight > 3500 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower for all cars produced before 1980 and weighing more than 3500 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  and  cars_data.Weight > 3500 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower for all cars produced before 1980 or weighing more than 3500 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  or  cars_data.Weight > 3500 "
    },
    {
        "input": "[struct _ sep0] How many cars have more than 4 cylinders and weighing more than 3500 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4  and  cars_data.Weight > 3500 "
    },
    {
        "input": "[struct _ sep0] How many cars have more than 4 cylinders or weighing more than 3500 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4  or  cars_data.Weight > 3500 "
    },
    {
        "input": "[struct _ sep0] how many cars were produced in 1980 and weighing more than 3500 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1980  and  cars_data.Weight > 3500 "
    },
    {
        "input": "[struct _ sep0] how many cars were produced in 1980 or weighing more than 3500 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1980  or  cars_data.Weight > 3500 "
    },
    {
        "input": "[struct _ sep0] How many car models were produced by the maker with full name American Motor Company and weighing more than 3500 ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  car_makers.FullName = \"American Motor Company\"  and  cars_data.Weight > 3500 "
    },
    {
        "input": "[struct _ sep0] How many car models were produced by the maker with full name American Motor Company or weighing more than 3500 ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  car_makers.FullName = \"American Motor Company\"  or  cars_data.Weight > 3500 "
    },
    {
        "input": "[struct _ sep0] What is the number of car models created by the car maker American Motor Company and weighing more than 3500 ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  car_makers.FullName = \"American Motor Company\"  and  cars_data.Weight > 3500 "
    },
    {
        "input": "[struct _ sep0] What is the number of car models created by the car maker American Motor Company or weighing more than 3500 ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  car_makers.FullName = \"American Motor Company\"  or  cars_data.Weight > 3500 "
    },
    {
        "input": "[struct _ sep0] How many cars has over 6 cylinders and weighing more than 3500 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 6  and  cars_data.Weight > 3500 "
    },
    {
        "input": "[struct _ sep0] How many cars has over 6 cylinders or weighing more than 3500 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 6  or  cars_data.Weight > 3500 "
    },
    {
        "input": "[struct _ sep0] Which distinct car models are the produced after 1980 and created by either the car maker General Motors or ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( General Motors ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  and  car_makers.FullName = \"General Motors\" "
    },
    {
        "input": "[struct _ sep0] Which distinct car models are the produced after 1980 or created by either the car maker General Motors or ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( General Motors ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  or  car_makers.FullName = \"General Motors\" "
    },
    {
        "input": "[struct _ sep0] What are the different models for the cars produced after 1980 and created by either the car maker General Motors or ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( General Motors ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  and  car_makers.FullName = \"General Motors\" "
    },
    {
        "input": "[struct _ sep0] What are the different models for the cars produced after 1980 or created by either the car maker General Motors or ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( General Motors ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  or  car_makers.FullName = \"General Motors\" "
    },
    {
        "input": "[struct _ sep0] How many car models are produced in the usa and created by either the car maker General Motors or ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname ( General Motors ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  countries.CountryName = \"usa\"  and  car_makers.FullName = \"General Motors\" "
    },
    {
        "input": "[struct _ sep0] How many car models are produced in the usa or created by either the car maker General Motors or ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname ( General Motors ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  countries.CountryName = \"usa\"  or  car_makers.FullName = \"General Motors\" "
    },
    {
        "input": "[struct _ sep0] What is the count of the car models produced in the usa and created by either the car maker General Motors or ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname ( General Motors ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  countries.CountryName = \"usa\"  and  car_makers.FullName = \"General Motors\" "
    },
    {
        "input": "[struct _ sep0] What is the count of the car models produced in the usa or created by either the car maker General Motors or ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname ( General Motors ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  countries.CountryName = \"usa\"  or  car_makers.FullName = \"General Motors\" "
    },
    {
        "input": "[struct _ sep0] What are all the makers and models that created by either the car maker General Motors or ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( General Motors ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select model_list.Maker , model_list.Model from continents  where  car_makers.FullName = \"General Motors\" "
    },
    {
        "input": "[struct _ sep0] What are the makers and models that created by either the car maker General Motors or ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( General Motors ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select model_list.Maker , model_list.Model from continents  where  car_makers.FullName = \"General Motors\" "
    },
    {
        "input": "[struct _ sep0] How many countries has more than 2 car makers and created by either the car maker General Motors or ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( General Motors ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( countries.* )  from continents  where  count ( car_makers.* )  > 2  and  car_makers.FullName = \"General Motors\"  group by countries.CountryId "
    },
    {
        "input": "[struct _ sep0] Which distinct car models are the produced after 1980 and weighed more than 3500 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  and  cars_data.Weight > 3500 "
    },
    {
        "input": "[struct _ sep0] Which distinct car models are the produced after 1980 or weighed more than 3500 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  or  cars_data.Weight > 3500 "
    },
    {
        "input": "[struct _ sep0] What are the different models for the cars produced after 1980 and weighed more than 3500 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  and  cars_data.Weight > 3500 "
    },
    {
        "input": "[struct _ sep0] What are the different models for the cars produced after 1980 or weighed more than 3500 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  or  cars_data.Weight > 3500 "
    },
    {
        "input": "[struct _ sep0] How many car models are produced in the usa and weighed more than 3500 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  countries.CountryName = \"usa\"  and  cars_data.Weight > 3500 "
    },
    {
        "input": "[struct _ sep0] How many car models are produced in the usa or weighed more than 3500 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  countries.CountryName = \"usa\"  or  cars_data.Weight > 3500 "
    },
    {
        "input": "[struct _ sep0] What is the count of the car models produced in the usa and weighed more than 3500 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  countries.CountryName = \"usa\"  and  cars_data.Weight > 3500 "
    },
    {
        "input": "[struct _ sep0] What is the count of the car models produced in the usa or weighed more than 3500 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  countries.CountryName = \"usa\"  or  cars_data.Weight > 3500 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower for all cars produced before 1980 and weighed more than 3500 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  and  cars_data.Weight > 3500 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower for all cars produced before 1980 or weighed more than 3500 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  or  cars_data.Weight > 3500 "
    },
    {
        "input": "[struct _ sep0] How many cars have more than 4 cylinders and weighed more than 3500 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4  and  cars_data.Weight > 3500 "
    },
    {
        "input": "[struct _ sep0] How many cars have more than 4 cylinders or weighed more than 3500 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4  or  cars_data.Weight > 3500 "
    },
    {
        "input": "[struct _ sep0] how many cars were produced in 1980 and weighed more than 3500 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1980  and  cars_data.Weight > 3500 "
    },
    {
        "input": "[struct _ sep0] how many cars were produced in 1980 or weighed more than 3500 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1980  or  cars_data.Weight > 3500 "
    },
    {
        "input": "[struct _ sep0] How many car models were produced by the maker with full name American Motor Company and weighed more than 3500 ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  car_makers.FullName = \"American Motor Company\"  and  cars_data.Weight > 3500 "
    },
    {
        "input": "[struct _ sep0] How many car models were produced by the maker with full name American Motor Company or weighed more than 3500 ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  car_makers.FullName = \"American Motor Company\"  or  cars_data.Weight > 3500 "
    },
    {
        "input": "[struct _ sep0] What is the number of car models created by the car maker American Motor Company and weighed more than 3500 ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  car_makers.FullName = \"American Motor Company\"  and  cars_data.Weight > 3500 "
    },
    {
        "input": "[struct _ sep0] What is the number of car models created by the car maker American Motor Company or weighed more than 3500 ? [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  car_makers.FullName = \"American Motor Company\"  or  cars_data.Weight > 3500 "
    },
    {
        "input": "[struct _ sep0] How many cars has over 6 cylinders and weighed more than 3500 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 6  and  cars_data.Weight > 3500 "
    },
    {
        "input": "[struct _ sep0] How many cars has over 6 cylinders or weighed more than 3500 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 6  or  cars_data.Weight > 3500 "
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car make amc hornet sportabout (sw) and weighing no less than 3000 and no more than 4000 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  where  car_names.Make = \"amc hornet sportabout (sw)\"  and  cars_data.Weight > 3000  and  cars_data.Weight < 4000 "
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car make amc hornet sportabout (sw) and with the largest accelerate ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  where  car_names.Make = \"amc hornet sportabout (sw)\"  order by cars_data.Accelerate desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car make amc hornet sportabout (sw) and with the greatest accelerate ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  where  car_names.Make = \"amc hornet sportabout (sw)\"  order by cars_data.Accelerate desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car make amc hornet sportabout (sw) and with the least accelerate have ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  where  car_names.Make = \"amc hornet sportabout (sw)\"  order by cars_data.Accelerate asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car make amc hornet sportabout (sw) and does the version with least accelerate have ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  where  car_names.Make = \"amc hornet sportabout (sw)\"  order by cars_data.Accelerate asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car make amc hornet sportabout (sw) and have a larger accelerate than the car ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  where  car_names.Make = \"amc hornet sportabout (sw)\"  and  @.@ > cars_data.Accelerate "
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car make amc hornet sportabout (sw) or have a larger accelerate than the car ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  where  car_names.Make = \"amc hornet sportabout (sw)\"  or  @.@ > cars_data.Accelerate "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon ( mpg ) of the cars with 4 cylinders and have a larger accelerate than the car ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Cylinders = 4  and  @.@ > cars_data.Accelerate "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon ( mpg ) of the cars with 4 cylinders or have a larger accelerate than the car ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Cylinders = 4  or  @.@ > cars_data.Accelerate "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon of all the cars with 4 cylinders and have a larger accelerate than the car ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Cylinders = 4  and  @.@ > cars_data.Accelerate "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon of all the cars with 4 cylinders or have a larger accelerate than the car ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Cylinders = 4  or  @.@ > cars_data.Accelerate "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars with horsepower more than 150 and have a larger accelerate than the car ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  and  @.@ > cars_data.Accelerate "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars with horsepower more than 150 or have a larger accelerate than the car ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  or  @.@ > cars_data.Accelerate "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with a horsepower greater than 150 and have a larger accelerate than the car ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  and  @.@ > cars_data.Accelerate "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with a horsepower greater than 150 or have a larger accelerate than the car ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  or  @.@ > cars_data.Accelerate "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower of the cars before 1980 and have a larger accelerate than the car ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  and  @.@ > cars_data.Accelerate "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower of the cars before 1980 or have a larger accelerate than the car ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  or  @.@ > cars_data.Accelerate "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower for all cars produced before 1980 and have a larger accelerate than the car ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  and  @.@ > cars_data.Accelerate "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower for all cars produced before 1980 or have a larger accelerate than the car ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  or  @.@ > cars_data.Accelerate "
    },
    {
        "input": "[struct _ sep0] How many cars have more than 4 cylinders and have a larger accelerate than the car ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4  and  @.@ > cars_data.Accelerate "
    },
    {
        "input": "[struct _ sep0] How many cars have more than 4 cylinders or have a larger accelerate than the car ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4  or  @.@ > cars_data.Accelerate "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with more than 4 cylinders and have a larger accelerate than the car ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4  and  @.@ > cars_data.Accelerate "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with more than 4 cylinders or have a larger accelerate than the car ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4  or  @.@ > cars_data.Accelerate "
    },
    {
        "input": "[struct _ sep0] how many cars were produced in 1980 and have a larger accelerate than the car ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1980  and  @.@ > cars_data.Accelerate "
    },
    {
        "input": "[struct _ sep0] how many cars were produced in 1980 or have a larger accelerate than the car ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1980  or  @.@ > cars_data.Accelerate "
    },
    {
        "input": "[struct _ sep0] How many cars has over 6 cylinders and have a larger accelerate than the car ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 6  and  @.@ > cars_data.Accelerate "
    },
    {
        "input": "[struct _ sep0] How many cars has over 6 cylinders or have a larger accelerate than the car ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 6  or  @.@ > cars_data.Accelerate "
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car make amc hornet sportabout (sw) and with the largest horsepower ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  where  car_names.Make = \"amc hornet sportabout (sw)\"  order by cars_data.Horsepower desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car make amc hornet sportabout (sw) and with a greater accelerate than the one ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  where  car_names.Make = \"amc hornet sportabout (sw)\"  and  @.@ > cars_data.Accelerate "
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car make amc hornet sportabout (sw) or with a greater accelerate than the one ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  where  car_names.Make = \"amc hornet sportabout (sw)\"  or  @.@ > cars_data.Accelerate "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon ( mpg ) of the cars with 4 cylinders and with a greater accelerate than the one ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Cylinders = 4  and  @.@ > cars_data.Accelerate "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon ( mpg ) of the cars with 4 cylinders or with a greater accelerate than the one ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Cylinders = 4  or  @.@ > cars_data.Accelerate "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon of all the cars with 4 cylinders and with a greater accelerate than the one ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Cylinders = 4  and  @.@ > cars_data.Accelerate "
    },
    {
        "input": "[struct _ sep0] What is the average miles per gallon of all the cars with 4 cylinders or with a greater accelerate than the one ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.MPG )  from continents  where  cars_data.Cylinders = 4  or  @.@ > cars_data.Accelerate "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars with horsepower more than 150 and with a greater accelerate than the one ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  and  @.@ > cars_data.Accelerate "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars with horsepower more than 150 or with a greater accelerate than the one ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  or  @.@ > cars_data.Accelerate "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with a horsepower greater than 150 and with a greater accelerate than the one ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  and  @.@ > cars_data.Accelerate "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with a horsepower greater than 150 or with a greater accelerate than the one ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  or  @.@ > cars_data.Accelerate "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower of the cars before 1980 and with a greater accelerate than the one ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  and  @.@ > cars_data.Accelerate "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower of the cars before 1980 or with a greater accelerate than the one ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  or  @.@ > cars_data.Accelerate "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower for all cars produced before 1980 and with a greater accelerate than the one ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  and  @.@ > cars_data.Accelerate "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower for all cars produced before 1980 or with a greater accelerate than the one ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  or  @.@ > cars_data.Accelerate "
    },
    {
        "input": "[struct _ sep0] How many cars have more than 4 cylinders and with a greater accelerate than the one ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4  and  @.@ > cars_data.Accelerate "
    },
    {
        "input": "[struct _ sep0] How many cars have more than 4 cylinders or with a greater accelerate than the one ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4  or  @.@ > cars_data.Accelerate "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with more than 4 cylinders and with a greater accelerate than the one ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4  and  @.@ > cars_data.Accelerate "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with more than 4 cylinders or with a greater accelerate than the one ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4  or  @.@ > cars_data.Accelerate "
    },
    {
        "input": "[struct _ sep0] how many cars were produced in 1980 and with a greater accelerate than the one ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1980  and  @.@ > cars_data.Accelerate "
    },
    {
        "input": "[struct _ sep0] how many cars were produced in 1980 or with a greater accelerate than the one ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1980  or  @.@ > cars_data.Accelerate "
    },
    {
        "input": "[struct _ sep0] How many cars has over 6 cylinders and with a greater accelerate than the one ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 6  and  @.@ > cars_data.Accelerate "
    },
    {
        "input": "[struct _ sep0] How many cars has over 6 cylinders or with a greater accelerate than the one ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 6  or  @.@ > cars_data.Accelerate "
    },
    {
        "input": "[struct _ sep0] Which distinct car models are the produced after 1980 and has over 6 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  and  cars_data.Cylinders > 6 "
    },
    {
        "input": "[struct _ sep0] Which distinct car models are the produced after 1980 or has over 6 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  or  cars_data.Cylinders > 6 "
    },
    {
        "input": "[struct _ sep0] What are the different models for the cars produced after 1980 and has over 6 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  and  cars_data.Cylinders > 6 "
    },
    {
        "input": "[struct _ sep0] What are the different models for the cars produced after 1980 or has over 6 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  or  cars_data.Cylinders > 6 "
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car make amc hornet sportabout (sw) and has over 6 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  where  car_names.Make = \"amc hornet sportabout (sw)\"  and  cars_data.Cylinders > 6 "
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car make amc hornet sportabout (sw) or has over 6 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  where  car_names.Make = \"amc hornet sportabout (sw)\"  or  cars_data.Cylinders > 6 "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars with horsepower more than 150 and has over 6 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  and  cars_data.Cylinders > 6 "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars with horsepower more than 150 or has over 6 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  or  cars_data.Cylinders > 6 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with a horsepower greater than 150 and has over 6 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  and  cars_data.Cylinders > 6 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with a horsepower greater than 150 or has over 6 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  or  cars_data.Cylinders > 6 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower of the cars before 1980 and has over 6 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  and  cars_data.Cylinders > 6 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower of the cars before 1980 or has over 6 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  or  cars_data.Cylinders > 6 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower for all cars produced before 1980 and has over 6 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  and  cars_data.Cylinders > 6 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower for all cars produced before 1980 or has over 6 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  or  cars_data.Cylinders > 6 "
    },
    {
        "input": "[struct _ sep0] how many cars were produced in 1980 and has over 6 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1980  and  cars_data.Cylinders > 6 "
    },
    {
        "input": "[struct _ sep0] how many cars were produced in 1980 or has over 6 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1980  or  cars_data.Cylinders > 6 "
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car with the largest accelerate and has over 6 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Cylinders > 6  order by cars_data.Accelerate desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car with the greatest accelerate and has over 6 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Cylinders > 6  order by cars_data.Accelerate desc limit 1"
    },
    {
        "input": "[struct _ sep0] Which model of the car has the minimum horsepower and do not have more than 3 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select car_names.Model from continents  where  cars_data.Cylinders <= 3  order by cars_data.Horsepower asc limit 1"
    },
    {
        "input": "[struct _ sep0] Which distinct car models are the produced after 1980 and do not have more than 3 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  and  cars_data.Cylinders <= 3 "
    },
    {
        "input": "[struct _ sep0] Which distinct car models are the produced after 1980 or do not have more than 3 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  or  cars_data.Cylinders <= 3 "
    },
    {
        "input": "[struct _ sep0] What are the different models for the cars produced after 1980 and do not have more than 3 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  and  cars_data.Cylinders <= 3 "
    },
    {
        "input": "[struct _ sep0] What are the different models for the cars produced after 1980 or do not have more than 3 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  or  cars_data.Cylinders <= 3 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower for all cars produced before 1980 and do not have more than 3 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  and  cars_data.Cylinders <= 3 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower for all cars produced before 1980 or do not have more than 3 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  or  cars_data.Cylinders <= 3 "
    },
    {
        "input": "[struct _ sep0] Which model has the most version ( make ) of cars and do not have more than 3 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select car_names.Model from continents  where  cars_data.Cylinders <= 3  group by car_names.Model  order by count ( car_names.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] What model has the most different versions and do not have more than 3 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select car_names.Model from continents  where  cars_data.Cylinders <= 3  group by car_names.Model  order by count ( car_names.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] how many cars were produced in 1980 and do not have more than 3 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1980  and  cars_data.Cylinders <= 3 "
    },
    {
        "input": "[struct _ sep0] how many cars were produced in 1980 or do not have more than 3 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1980  or  cars_data.Cylinders <= 3 "
    },
    {
        "input": "[struct _ sep0] What is the model of the car with the smallest amount of horsepower and with less than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select car_names.Model from continents  where  cars_data.Cylinders < 4  order by cars_data.Horsepower asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the number of the cars with horsepower more than 150 and with less than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  and  cars_data.Cylinders < 4 "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars with horsepower more than 150 or with less than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  or  cars_data.Cylinders < 4 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with a horsepower greater than 150 and with less than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  and  cars_data.Cylinders < 4 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with a horsepower greater than 150 or with less than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  or  cars_data.Cylinders < 4 "
    },
    {
        "input": "[struct _ sep0] What is the car model with the highest mpg and with less than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select car_names.Model from continents  where  cars_data.Cylinders < 4  order by cars_data.MPG desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the average horsepower of the cars before 1980 and with less than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  and  cars_data.Cylinders < 4 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower of the cars before 1980 or with less than 4 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  or  cars_data.Cylinders < 4 "
    },
    {
        "input": "[struct _ sep0] What are the different models for the cars produced after 1980 and with 8 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  and  cars_data.Cylinders = 8 "
    },
    {
        "input": "[struct _ sep0] What are the different models for the cars produced after 1980 or with 8 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  or  cars_data.Cylinders = 8 "
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car make amc hornet sportabout (sw) and with 8 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  where  car_names.Make = \"amc hornet sportabout (sw)\"  and  cars_data.Cylinders = 8 "
    },
    {
        "input": "[struct _ sep0] What is the accelerate of the car make amc hornet sportabout (sw) or with 8 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( amc ), fullname, country | model _ list : modelid, maker, model ( amc ) | car _ names : makeid, model ( amc ), make ( amc hornet, amc hornet sportabout (sw) ) | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Accelerate from continents  where  car_names.Make = \"amc hornet sportabout (sw)\"  or  cars_data.Cylinders = 8 "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars with horsepower more than 150 and with 8 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  and  cars_data.Cylinders = 8 "
    },
    {
        "input": "[struct _ sep0] What is the number of the cars with horsepower more than 150 or with 8 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  or  cars_data.Cylinders = 8 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with a horsepower greater than 150 and with 8 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  and  cars_data.Cylinders = 8 "
    },
    {
        "input": "[struct _ sep0] What is the number of cars with a horsepower greater than 150 or with 8 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Horsepower > 150  or  cars_data.Cylinders = 8 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower of the cars before 1980 and with 8 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  and  cars_data.Cylinders = 8 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower of the cars before 1980 or with 8 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  or  cars_data.Cylinders = 8 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower for all cars produced before 1980 and with 8 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  and  cars_data.Cylinders = 8 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower for all cars produced before 1980 or with 8 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  or  cars_data.Cylinders = 8 "
    },
    {
        "input": "[struct _ sep0] how many cars were produced in 1980 and with 8 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1980  and  cars_data.Cylinders = 8 "
    },
    {
        "input": "[struct _ sep0] how many cars were produced in 1980 or with 8 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1980  or  cars_data.Cylinders = 8 "
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car with the largest accelerate and with 8 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Cylinders = 8  order by cars_data.Accelerate desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the horsepower of the car with the greatest accelerate and with 8 cylinders ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower from continents  where  cars_data.Cylinders = 8  order by cars_data.Accelerate desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the maximum accelerate for different number of cylinders , or produced before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select max ( cars_data.Accelerate )  , cars_data.Cylinders from continents  where  cars_data.Year < 1980  group by cars_data.Cylinders "
    },
    {
        "input": "[struct _ sep0] What is the maximum accelerate for all the different cylinders , or produced before 1980 ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select max ( cars_data.Accelerate )  , cars_data.Cylinders from continents  where  cars_data.Year < 1980  group by cars_data.Cylinders "
    },
    {
        "input": "[struct _ sep0] Find the name of the makers that produced some cars in the year of 1970 and that had 8 cylinders or ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct car_makers.Maker from continents  where  cars_data.Year = \"1970\"  and  cars_data.Cylinders = 8 "
    },
    {
        "input": "[struct _ sep0] Find the name of the makers that produced some cars in the year of 1970 or that had 8 cylinders or ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct car_makers.Maker from continents  where  cars_data.Year = \"1970\"  or  cars_data.Cylinders = 8 "
    },
    {
        "input": "[struct _ sep0] Which distinct car models are the produced after 1980 and are lighter than 3500 [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  and  cars_data.Weight < 3500 "
    },
    {
        "input": "[struct _ sep0] Which distinct car models are the produced after 1980 or are lighter than 3500 [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  or  cars_data.Weight < 3500 "
    },
    {
        "input": "[struct _ sep0] What are the different models for the cars produced after 1980 and are lighter than 3500 [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  and  cars_data.Weight < 3500 "
    },
    {
        "input": "[struct _ sep0] What are the different models for the cars produced after 1980 or are lighter than 3500 [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  or  cars_data.Weight < 3500 "
    },
    {
        "input": "[struct _ sep0] How many car models are produced in the usa and are lighter than 3500 [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  countries.CountryName = \"usa\"  and  cars_data.Weight < 3500 "
    },
    {
        "input": "[struct _ sep0] How many car models are produced in the usa or are lighter than 3500 [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  countries.CountryName = \"usa\"  or  cars_data.Weight < 3500 "
    },
    {
        "input": "[struct _ sep0] What is the count of the car models produced in the usa and are lighter than 3500 [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  countries.CountryName = \"usa\"  and  cars_data.Weight < 3500 "
    },
    {
        "input": "[struct _ sep0] What is the count of the car models produced in the usa or are lighter than 3500 [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  countries.CountryName = \"usa\"  or  cars_data.Weight < 3500 "
    },
    {
        "input": "[struct _ sep0] What are all the makers and models that are lighter than 3500 [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select model_list.Maker , model_list.Model from continents  where  cars_data.Weight < 3500 "
    },
    {
        "input": "[struct _ sep0] What are the makers and models that are lighter than 3500 [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select model_list.Maker , model_list.Model from continents  where  cars_data.Weight < 3500 "
    },
    {
        "input": "[struct _ sep0] What is the maximum horsepower and the make of the car models with 3 cylinders and are lighter than 3500 [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower , car_names.Make from continents  where  cars_data.Cylinders = 3  and  cars_data.Weight < 3500  order by cars_data.Horsepower desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the maximum horsepower and the make of the car models with 3 cylinders or are lighter than 3500 [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower , car_names.Make from continents  where  cars_data.Cylinders = 3  or  cars_data.Weight < 3500  order by cars_data.Horsepower desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the average horsepower for all cars produced before 1980 and are lighter than 3500 [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  and  cars_data.Weight < 3500 "
    },
    {
        "input": "[struct _ sep0] What is the average horsepower for all cars produced before 1980 or are lighter than 3500 [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select avg ( cars_data.Horsepower )  from continents  where  cars_data.Year < 1980  or  cars_data.Weight < 3500 "
    },
    {
        "input": "[struct _ sep0] How many cars have more than 4 cylinders and are lighter than 3500 [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4  and  cars_data.Weight < 3500 "
    },
    {
        "input": "[struct _ sep0] How many cars have more than 4 cylinders or are lighter than 3500 [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 4  or  cars_data.Weight < 3500 "
    },
    {
        "input": "[struct _ sep0] how many cars were produced in 1980 and are lighter than 3500 [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1980  and  cars_data.Weight < 3500 "
    },
    {
        "input": "[struct _ sep0] how many cars were produced in 1980 or are lighter than 3500 [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Year = 1980  or  cars_data.Weight < 3500 "
    },
    {
        "input": "[struct _ sep0] How many car models were produced by the maker with full name American Motor Company and are lighter than 3500 [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  car_makers.FullName = \"American Motor Company\"  and  cars_data.Weight < 3500 "
    },
    {
        "input": "[struct _ sep0] How many car models were produced by the maker with full name American Motor Company or are lighter than 3500 [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  car_makers.FullName = \"American Motor Company\"  or  cars_data.Weight < 3500 "
    },
    {
        "input": "[struct _ sep0] What is the number of car models created by the car maker American Motor Company and are lighter than 3500 [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  car_makers.FullName = \"American Motor Company\"  and  cars_data.Weight < 3500 "
    },
    {
        "input": "[struct _ sep0] What is the number of car models created by the car maker American Motor Company or are lighter than 3500 [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  car_makers.FullName = \"American Motor Company\"  or  cars_data.Weight < 3500 "
    },
    {
        "input": "[struct _ sep0] How many cars has over 6 cylinders and are lighter than 3500 [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 6  and  cars_data.Weight < 3500 "
    },
    {
        "input": "[struct _ sep0] How many cars has over 6 cylinders or are lighter than 3500 [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( cars_data.* )  from continents  where  cars_data.Cylinders > 6  or  cars_data.Weight < 3500 "
    },
    {
        "input": "[struct _ sep0] Which distinct car models are the produced after 1980 and wthat are lighter than 3500 [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  and  cars_data.Weight < 3500 "
    },
    {
        "input": "[struct _ sep0] Which distinct car models are the produced after 1980 or wthat are lighter than 3500 [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select  distinct model_list.Model from continents  where  cars_data.Year > 1980  or  cars_data.Weight < 3500 "
    },
    {
        "input": "[struct _ sep0] How many car models are produced in the usa and wthat are lighter than 3500 [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  countries.CountryName = \"usa\"  and  cars_data.Weight < 3500 "
    },
    {
        "input": "[struct _ sep0] How many car models are produced in the usa or wthat are lighter than 3500 [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  countries.CountryName = \"usa\"  or  cars_data.Weight < 3500 "
    },
    {
        "input": "[struct _ sep0] What is the count of the car models produced in the usa and wthat are lighter than 3500 [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  countries.CountryName = \"usa\"  and  cars_data.Weight < 3500 "
    },
    {
        "input": "[struct _ sep0] What is the count of the car models produced in the usa or wthat are lighter than 3500 [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname ( usa ), continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  countries.CountryName = \"usa\"  or  cars_data.Weight < 3500 "
    },
    {
        "input": "[struct _ sep0] What are all the makers and models , wthat are lighter than 3500 [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select model_list.Maker , model_list.Model from continents  where  cars_data.Weight < 3500 "
    },
    {
        "input": "[struct _ sep0] What are the makers and models , wthat are lighter than 3500 [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select model_list.Maker , model_list.Model from continents  where  cars_data.Weight < 3500 "
    },
    {
        "input": "[struct _ sep0] What is the maximum horsepower and the make of the car models with 3 cylinders and wthat are lighter than 3500 [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower , car_names.Make from continents  where  cars_data.Cylinders = 3  and  cars_data.Weight < 3500  order by cars_data.Horsepower desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the maximum horsepower and the make of the car models with 3 cylinders or wthat are lighter than 3500 [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker, fullname, country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select cars_data.Horsepower , car_names.Make from continents  where  cars_data.Cylinders = 3  or  cars_data.Weight < 3500  order by cars_data.Horsepower desc limit 1"
    },
    {
        "input": "[struct _ sep0] How many car models were produced by the maker with full name American Motor Company and wthat are lighter than 3500 [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  car_makers.FullName = \"American Motor Company\"  and  cars_data.Weight < 3500 "
    },
    {
        "input": "[struct _ sep0] How many car models were produced by the maker with full name American Motor Company or wthat are lighter than 3500 [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  car_makers.FullName = \"American Motor Company\"  or  cars_data.Weight < 3500 "
    },
    {
        "input": "[struct _ sep0] What is the number of car models created by the car maker American Motor Company and wthat are lighter than 3500 [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  car_makers.FullName = \"American Motor Company\"  and  cars_data.Weight < 3500 "
    },
    {
        "input": "[struct _ sep0] What is the number of car models created by the car maker American Motor Company or wthat are lighter than 3500 [/struct _ sep0]| car _ 1 | continents : contid, continent ( america ) | countries : countryid, countryname, continent | car _ makers : id, maker, fullname ( American Motor Company ), country | model _ list : modelid, maker, model | car _ names : makeid, model, make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( model_list.* )  from continents  where  car_makers.FullName = \"American Motor Company\"  or  cars_data.Weight < 3500 "
    },
    {
        "input": "[struct _ sep0] How many countries has more than 2 car makers and produce the ' fiat ' model ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( fiat ), fullname ( Fiat ), country | model _ list : modelid, maker, model ( fiat ) | car _ names : makeid, model ( fiat ), make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( countries.* )  from continents  where  count ( car_makers.* )  > 2  and  model_list.Model = \"fiat\"  group by countries.CountryId "
    },
    {
        "input": "[struct _ sep0] How many countries has more than 2 car makers and produce fiat model ? [/struct _ sep0]| car _ 1 | continents : contid, continent | countries : countryid, countryname, continent | car _ makers : id, maker ( fiat ), fullname ( Fiat ), country | model _ list : modelid, maker, model ( fiat ) | car _ names : makeid, model ( fiat ), make | cars _ data : id, mpg, cylinders, edispl, horsepower, weight, accelerate, year",
        "gold_natsql": "select count ( countries.* )  from continents  where  count ( car_makers.* )  > 2  and  model_list.Model = \"fiat\"  group by countries.CountryId "
    },
    {
        "input": "[struct _ sep0] Which airline has abbreviation ' UAL ' and does Airline ' JetBlue Airways ' belong to ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue, UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  and  airlines.Airline = \"JetBlue Airways\" "
    },
    {
        "input": "[struct _ sep0] Which airline has abbreviation ' UAL ' or does Airline ' JetBlue Airways ' belong to ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue, UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  or  airlines.Airline = \"JetBlue Airways\" "
    },
    {
        "input": "[struct _ sep0] How many airlines are from USA and does Airline ' JetBlue Airways ' belong to ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( airlines.* )  from airlines  where  airlines.Country = \"USA\"  and  airlines.Airline = \"JetBlue Airways\" "
    },
    {
        "input": "[struct _ sep0] How many airlines are from USA or does Airline ' JetBlue Airways ' belong to ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( airlines.* )  from airlines  where  airlines.Country = \"USA\"  or  airlines.Airline = \"JetBlue Airways\" "
    },
    {
        "input": "[struct _ sep0] Which airline has most number of flights and does Airline ' JetBlue Airways ' belong to ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Airline = \"JetBlue Airways\"  group by airlines.Airline  order by count ( flights.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] What airline serves the most flights and does Airline ' JetBlue Airways ' belong to ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Airline = \"JetBlue Airways\"  group by airlines.Airline  order by count ( flights.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Which airlines have at least 10 flights and does Airline ' JetBlue Airways ' belong to ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  > 10  and  airlines.Airline = \"JetBlue Airways\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airlines have at least 10 flights or does Airline ' JetBlue Airways ' belong to ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  > 10  or  airlines.Airline = \"JetBlue Airways\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airlines have less than 200 flights and does Airline ' JetBlue Airways ' belong to ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  < 200  and  airlines.Airline = \"JetBlue Airways\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airlines have less than 200 flights or does Airline ' JetBlue Airways ' belong to ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  < 200  or  airlines.Airline = \"JetBlue Airways\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] List all airline names and their abbreviations in ' USA ' and corresponds to JetBlue Airways ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline , airlines.Abbreviation from airlines  where  airlines.Country = \"USA\"  and  airlines.Airline = \"JetBlue Airways\" "
    },
    {
        "input": "[struct _ sep0] List all airline names and their abbreviations in ' USA ' or corresponds to JetBlue Airways ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline , airlines.Abbreviation from airlines  where  airlines.Country = \"USA\"  or  airlines.Airline = \"JetBlue Airways\" "
    },
    {
        "input": "[struct _ sep0] Which abbreviation corresponds to JetBlue Airways and in ' USA ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Abbreviation from airlines  where  airlines.Airline = \"JetBlue Airways\"  and  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Which abbreviation corresponds to JetBlue Airways or in ' USA ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Abbreviation from airlines  where  airlines.Airline = \"JetBlue Airways\"  or  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Give the airline with abbreviation ' UAL ' and in ' USA ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  and  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Give the airline with abbreviation ' UAL ' or in ' USA ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  or  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with source airport AHD and in ' USA ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.SourceAirport = \"AHD\"  and  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with source airport AHD or in ' USA ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.SourceAirport = \"AHD\"  or  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with destination airport AHD and in ' USA ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.DestAirport = \"AHD\"  and  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with destination airport AHD or in ' USA ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.DestAirport = \"AHD\"  or  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of airlines , in the USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( airlines.* )  from airlines  where  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Which airline has abbreviation ' UAL ' and in the USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  and  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Which airline has abbreviation ' UAL ' or in the USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  or  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Give the airline with abbreviation ' UAL ' and in the USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  and  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Give the airline with abbreviation ' UAL ' or in the USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  or  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Which airline has most number of flights and in the USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Country = \"USA\"  group by airlines.Airline  order by count ( flights.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] What airline serves the most flights and in the USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Country = \"USA\"  group by airlines.Airline  order by count ( flights.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with source airport AHD and in the USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.SourceAirport = \"AHD\"  and  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with source airport AHD or in the USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.SourceAirport = \"AHD\"  or  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with destination airport AHD and in the USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.DestAirport = \"AHD\"  and  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with destination airport AHD or in the USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.DestAirport = \"AHD\"  or  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have at least 10 flights and in the USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  > 10  and  airlines.Country = \"USA\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airlines have at least 10 flights or in the USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  > 10  or  airlines.Country = \"USA\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airlines have less than 200 flights and in the USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  < 200  and  airlines.Country = \"USA\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airlines have less than 200 flights or in the USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  < 200  or  airlines.Country = \"USA\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Return the name of the airport with code ' AKO ' and in the city of Anthony . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city ( Anthony ), airportcode ( AKO ), airportname ( Anthony ), country, countryabbrev | flights : airline, flightno, sourceairport ( AKO ), destairport ( AKO )",
        "gold_natsql": "select airports.AirportName from airlines  where  airports.AirportCode = \"AKO\"  and  airports.City = \"Anthony\" "
    },
    {
        "input": "[struct _ sep0] Return the name of the airport with code ' AKO ' or in the city of Anthony . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city ( Anthony ), airportcode ( AKO ), airportname ( Anthony ), country, countryabbrev | flights : airline, flightno, sourceairport ( AKO ), destairport ( AKO )",
        "gold_natsql": "select airports.AirportName from airlines  where  airports.AirportCode = \"AKO\"  or  airports.City = \"Anthony\" "
    },
    {
        "input": "[struct _ sep0] Return the name of the airport with code ' AKO ' and to the city Anthony . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city ( Anthony ), airportcode ( AKO ), airportname ( Anthony ), country, countryabbrev | flights : airline, flightno, sourceairport ( AKO ), destairport ( AKO )",
        "gold_natsql": "select airports.AirportName from airlines  where  airports.AirportCode = \"AKO\"  and  airports.City = \"Anthony\" "
    },
    {
        "input": "[struct _ sep0] Return the name of the airport with code ' AKO ' or to the city Anthony . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city ( Anthony ), airportcode ( AKO ), airportname ( Anthony ), country, countryabbrev | flights : airline, flightno, sourceairport ( AKO ), destairport ( AKO )",
        "gold_natsql": "select airports.AirportName from airlines  where  airports.AirportCode = \"AKO\"  or  airports.City = \"Anthony\" "
    },
    {
        "input": "[struct _ sep0] Which country does Airline ' JetBlue Airways ' belong to and has abbreviation ' UAL ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue, UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Country from airlines  where  airlines.Airline = \"JetBlue Airways\"  and  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] Which country does Airline ' JetBlue Airways ' belong to or has abbreviation ' UAL ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue, UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Country from airlines  where  airlines.Airline = \"JetBlue Airways\"  or  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] What are the airline names and abbreviations for airlines in the USA and has abbreviation ' UAL ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline , airlines.Abbreviation from airlines  where  airlines.Country = \"USA\"  and  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] What are the airline names and abbreviations for airlines in the USA or has abbreviation ' UAL ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline , airlines.Abbreviation from airlines  where  airlines.Country = \"USA\"  or  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of airlines that has abbreviation ' UAL ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( airlines.* )  from airlines  where  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] How many airlines are from USA and has abbreviation ' UAL ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( airlines.* )  from airlines  where  airlines.Country = \"USA\"  and  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] How many airlines are from USA or has abbreviation ' UAL ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( airlines.* )  from airlines  where  airlines.Country = \"USA\"  or  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] Return the number of airlines in the USA and has abbreviation ' UAL ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( airlines.* )  from airlines  where  airlines.Country = \"USA\"  and  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] Return the number of airlines in the USA or has abbreviation ' UAL ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( airlines.* )  from airlines  where  airlines.Country = \"USA\"  or  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] How many flights does airline ' JetBlue Airways ' have and has abbreviation ' UAL ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue, UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( flights.* )  from airlines  where  airlines.Airline = \"JetBlue Airways\"  and  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] How many flights does airline ' JetBlue Airways ' have or has abbreviation ' UAL ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue, UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( flights.* )  from airlines  where  airlines.Airline = \"JetBlue Airways\"  or  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] Which airline has most number of flights and has abbreviation ' UAL ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  group by airlines.Airline  order by count ( flights.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] What airline serves the most flights and has abbreviation ' UAL ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  group by airlines.Airline  order by count ( flights.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Which airlines have at least 10 flights and has abbreviation ' UAL ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  > 10  and  airlines.Abbreviation = \"UAL\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airlines have at least 10 flights or has abbreviation ' UAL ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  > 10  or  airlines.Abbreviation = \"UAL\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airlines have less than 200 flights and has abbreviation ' UAL ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  < 200  and  airlines.Abbreviation = \"UAL\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airlines have less than 200 flights or has abbreviation ' UAL ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  < 200  or  airlines.Abbreviation = \"UAL\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which flight numbers correspond to United Airlines flights and has abbreviation ' UAL ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( United Airlines ), abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select flights.FlightNo from airlines  where  airlines.Airline = \"United Airlines\"  and  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] Which flight numbers correspond to United Airlines flights or has abbreviation ' UAL ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( United Airlines ), abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select flights.FlightNo from airlines  where  airlines.Airline = \"United Airlines\"  or  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] List all airline names and their abbreviations in ' USA ' and with abbreviation ' UAL ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline , airlines.Abbreviation from airlines  where  airlines.Country = \"USA\"  and  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] List all airline names and their abbreviations in ' USA ' or with abbreviation ' UAL ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline , airlines.Abbreviation from airlines  where  airlines.Country = \"USA\"  or  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] What are the airline names and abbreviations for airlines in the USA and with abbreviation ' UAL ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline , airlines.Abbreviation from airlines  where  airlines.Country = \"USA\"  and  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] What are the airline names and abbreviations for airlines in the USA or with abbreviation ' UAL ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline , airlines.Abbreviation from airlines  where  airlines.Country = \"USA\"  or  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of airlines , with abbreviation ' UAL ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( airlines.* )  from airlines  where  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] How many airlines are from USA and with abbreviation ' UAL ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( airlines.* )  from airlines  where  airlines.Country = \"USA\"  and  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] How many airlines are from USA or with abbreviation ' UAL ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( airlines.* )  from airlines  where  airlines.Country = \"USA\"  or  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] Return the number of airlines in the USA and with abbreviation ' UAL ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( airlines.* )  from airlines  where  airlines.Country = \"USA\"  and  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] Return the number of airlines in the USA or with abbreviation ' UAL ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( airlines.* )  from airlines  where  airlines.Country = \"USA\"  or  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] Which airline has most number of flights and with abbreviation ' UAL ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  group by airlines.Airline  order by count ( flights.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] What airline serves the most flights and with abbreviation ' UAL ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  group by airlines.Airline  order by count ( flights.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with source airport AHD and with abbreviation ' UAL ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.SourceAirport = \"AHD\"  and  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with source airport AHD or with abbreviation ' UAL ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.SourceAirport = \"AHD\"  or  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with destination airport AHD and with abbreviation ' UAL ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.DestAirport = \"AHD\"  and  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with destination airport AHD or with abbreviation ' UAL ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.DestAirport = \"AHD\"  or  airlines.Abbreviation = \"UAL\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have at least 10 flights and with abbreviation ' UAL ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  > 10  and  airlines.Abbreviation = \"UAL\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airlines have at least 10 flights or with abbreviation ' UAL ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  > 10  or  airlines.Abbreviation = \"UAL\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airlines have less than 200 flights and with abbreviation ' UAL ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  < 200  and  airlines.Abbreviation = \"UAL\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airlines have less than 200 flights or with abbreviation ' UAL ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  < 200  or  airlines.Abbreviation = \"UAL\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which country does Airline ' JetBlue Airways ' belong to and are from USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Country from airlines  where  airlines.Airline = \"JetBlue Airways\"  and  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Which country does Airline ' JetBlue Airways ' belong to or are from USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Country from airlines  where  airlines.Airline = \"JetBlue Airways\"  or  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of airlines that are from USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( airlines.* )  from airlines  where  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Which airline has abbreviation ' UAL ' and are from USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  and  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Which airline has abbreviation ' UAL ' or are from USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  or  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Give the airline with abbreviation ' UAL ' and are from USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  and  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Give the airline with abbreviation ' UAL ' or are from USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  or  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] How many flights does airline ' JetBlue Airways ' have and are from USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( flights.* )  from airlines  where  airlines.Airline = \"JetBlue Airways\"  and  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] How many flights does airline ' JetBlue Airways ' have or are from USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( flights.* )  from airlines  where  airlines.Airline = \"JetBlue Airways\"  or  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Which airline has most number of flights and are from USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Country = \"USA\"  group by airlines.Airline  order by count ( flights.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] What airline serves the most flights and are from USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Country = \"USA\"  group by airlines.Airline  order by count ( flights.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Which airlines have at least 10 flights and are from USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  > 10  and  airlines.Country = \"USA\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airlines have at least 10 flights or are from USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  > 10  or  airlines.Country = \"USA\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airlines have less than 200 flights and are from USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  < 200  and  airlines.Country = \"USA\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airlines have less than 200 flights or are from USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  < 200  or  airlines.Country = \"USA\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which flight numbers correspond to United Airlines flights and are from USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( United Airlines ), abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select flights.FlightNo from airlines  where  airlines.Airline = \"United Airlines\"  and  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Which flight numbers correspond to United Airlines flights or are from USA ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( United Airlines ), abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select flights.FlightNo from airlines  where  airlines.Airline = \"United Airlines\"  or  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of airlines , in the USA . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( airlines.* )  from airlines  where  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Which airline has abbreviation ' UAL ' and in the USA . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  and  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Which airline has abbreviation ' UAL ' or in the USA . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  or  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Give the airline with abbreviation ' UAL ' and in the USA . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  and  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Give the airline with abbreviation ' UAL ' or in the USA . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  or  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Which airline has most number of flights and in the USA . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Country = \"USA\"  group by airlines.Airline  order by count ( flights.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] What airline serves the most flights and in the USA . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Country = \"USA\"  group by airlines.Airline  order by count ( flights.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with source airport AHD and in the USA . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.SourceAirport = \"AHD\"  and  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with source airport AHD or in the USA . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.SourceAirport = \"AHD\"  or  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with destination airport AHD and in the USA . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.DestAirport = \"AHD\"  and  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with destination airport AHD or in the USA . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.DestAirport = \"AHD\"  or  airlines.Country = \"USA\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have at least 10 flights and in the USA . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  > 10  and  airlines.Country = \"USA\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airlines have at least 10 flights or in the USA . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  > 10  or  airlines.Country = \"USA\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airlines have less than 200 flights and in the USA . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  < 200  and  airlines.Country = \"USA\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airlines have less than 200 flights or in the USA . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  < 200  or  airlines.Country = \"USA\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] List the airport code and name in the city of Anthony and with code ' AKO ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city ( Anthony ), airportcode ( AKO ), airportname ( Anthony ), country, countryabbrev | flights : airline, flightno, sourceairport ( AKO ), destairport ( AKO )",
        "gold_natsql": "select airports.AirportCode , airports.AirportName from airlines  where  airports.City = \"Anthony\"  and  airports.AirportCode = \"AKO\" "
    },
    {
        "input": "[struct _ sep0] List the airport code and name in the city of Anthony or with code ' AKO ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city ( Anthony ), airportcode ( AKO ), airportname ( Anthony ), country, countryabbrev | flights : airline, flightno, sourceairport ( AKO ), destairport ( AKO )",
        "gold_natsql": "select airports.AirportCode , airports.AirportName from airlines  where  airports.City = \"Anthony\"  or  airports.AirportCode = \"AKO\" "
    },
    {
        "input": "[struct _ sep0] Give the airport code and airport name corresonding to the city Anthony and with code ' AKO ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city ( Anthony ), airportcode ( AKO ), airportname ( Anthony ), country, countryabbrev | flights : airline, flightno, sourceairport ( AKO ), destairport ( AKO )",
        "gold_natsql": "select airports.AirportCode , airports.AirportName from airlines  where  airports.City = \"Anthony\"  and  airports.AirportCode = \"AKO\" "
    },
    {
        "input": "[struct _ sep0] Give the airport code and airport name corresonding to the city Anthony or with code ' AKO ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city ( Anthony ), airportcode ( AKO ), airportname ( Anthony ), country, countryabbrev | flights : airline, flightno, sourceairport ( AKO ), destairport ( AKO )",
        "gold_natsql": "select airports.AirportCode , airports.AirportName from airlines  where  airports.City = \"Anthony\"  or  airports.AirportCode = \"AKO\" "
    },
    {
        "input": "[struct _ sep0] Return the number of airports , with code ' AKO ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AKO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AKO ), destairport ( AKO )",
        "gold_natsql": "select count ( airports.* )  from airlines  where  airports.AirportCode = \"AKO\" "
    },
    {
        "input": "[struct _ sep0] What are airport names at City ' Aberdeen ' and with code ' AKO ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city ( Aberdeen ), airportcode ( AKO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AKO ), destairport ( AKO )",
        "gold_natsql": "select airports.AirportName from airlines  where  airports.City = \"Aberdeen\"  and  airports.AirportCode = \"AKO\" "
    },
    {
        "input": "[struct _ sep0] What are airport names at City ' Aberdeen ' or with code ' AKO ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city ( Aberdeen ), airportcode ( AKO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AKO ), destairport ( AKO )",
        "gold_natsql": "select airports.AirportName from airlines  where  airports.City = \"Aberdeen\"  or  airports.AirportCode = \"AKO\" "
    },
    {
        "input": "[struct _ sep0] What are the names of airports in Aberdeen and with code ' AKO ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city ( Aberdeen ), airportcode ( AKO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AKO ), destairport ( AKO )",
        "gold_natsql": "select airports.AirportName from airlines  where  airports.City = \"Aberdeen\"  and  airports.AirportCode = \"AKO\" "
    },
    {
        "input": "[struct _ sep0] What are the names of airports in Aberdeen or with code ' AKO ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city ( Aberdeen ), airportcode ( AKO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AKO ), destairport ( AKO )",
        "gold_natsql": "select airports.AirportName from airlines  where  airports.City = \"Aberdeen\"  or  airports.AirportCode = \"AKO\" "
    },
    {
        "input": "[struct _ sep0] Return the name of the airport with code ' AKO ' and at City ' Aberdeen ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city ( Aberdeen ), airportcode ( AKO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AKO ), destairport ( AKO )",
        "gold_natsql": "select airports.AirportName from airlines  where  airports.AirportCode = \"AKO\"  and  airports.City = \"Aberdeen\" "
    },
    {
        "input": "[struct _ sep0] Return the name of the airport with code ' AKO ' or at City ' Aberdeen ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city ( Aberdeen ), airportcode ( AKO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AKO ), destairport ( AKO )",
        "gold_natsql": "select airports.AirportName from airlines  where  airports.AirportCode = \"AKO\"  or  airports.City = \"Aberdeen\" "
    },
    {
        "input": "[struct _ sep0] Return the number of airports , in Aberdeen ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city ( Aberdeen ), airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( airports.* )  from airlines  where  airports.City = \"Aberdeen\" "
    },
    {
        "input": "[struct _ sep0] Return the name of the airport with code ' AKO ' and in Aberdeen ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city ( Aberdeen ), airportcode ( AKO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AKO ), destairport ( AKO )",
        "gold_natsql": "select airports.AirportName from airlines  where  airports.AirportCode = \"AKO\"  and  airports.City = \"Aberdeen\" "
    },
    {
        "input": "[struct _ sep0] Return the name of the airport with code ' AKO ' or in Aberdeen ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city ( Aberdeen ), airportcode ( AKO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AKO ), destairport ( AKO )",
        "gold_natsql": "select airports.AirportName from airlines  where  airports.AirportCode = \"AKO\"  or  airports.City = \"Aberdeen\" "
    },
    {
        "input": "[struct _ sep0] Count the number of flights into ATO and from ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ATO, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.DestAirport = \"ATO\"  and  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Count the number of flights into ATO or from ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ATO, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.DestAirport = \"ATO\"  or  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with destination airport AHD and from ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD, APG ), destairport ( AHD, APG )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.DestAirport = \"AHD\"  and  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with destination airport AHD or from ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD, APG ), destairport ( AHD, APG )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.DestAirport = \"AHD\"  or  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Return the number of flights that departing from ' APG ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] How many flights have destination ATO and departing from ' APG ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ATO, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.DestAirport = \"ATO\"  and  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] How many flights have destination ATO or departing from ' APG ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ATO, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.DestAirport = \"ATO\"  or  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Count the number of flights into ATO and departing from ' APG ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ATO, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.DestAirport = \"ATO\"  and  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Count the number of flights into ATO or departing from ' APG ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ATO, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.DestAirport = \"ATO\"  or  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] How many flights does airline ' JetBlue Airways ' have and departing from ' APG ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  airlines.Airline = \"JetBlue Airways\"  and  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] How many flights does airline ' JetBlue Airways ' have or departing from ' APG ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  airlines.Airline = \"JetBlue Airways\"  or  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with destination airport AHD and departing from ' APG ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD, APG ), destairport ( AHD, APG )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.DestAirport = \"AHD\"  and  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with destination airport AHD or departing from ' APG ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD, APG ), destairport ( AHD, APG )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.DestAirport = \"AHD\"  or  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have at least 10 flights and departing from ' APG ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  > 10  and  flights.SourceAirport = \"APG\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airlines have at least 10 flights or departing from ' APG ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  > 10  or  flights.SourceAirport = \"APG\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airlines have less than 200 flights and departing from ' APG ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  < 200  and  flights.SourceAirport = \"APG\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airlines have less than 200 flights or departing from ' APG ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  < 200  or  flights.SourceAirport = \"APG\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which flight numbers correspond to United Airlines flights and departing from ' APG ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( United Airlines ), abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  airlines.Airline = \"United Airlines\"  and  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Which flight numbers correspond to United Airlines flights or departing from ' APG ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( United Airlines ), abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  airlines.Airline = \"United Airlines\"  or  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] What are flight numbers of flights arriving at Airport ' APG ' and departing from ' APG ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.DestAirport = \"APG\"  and  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] What are flight numbers of flights arriving at Airport ' APG ' or departing from ' APG ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.DestAirport = \"APG\"  or  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Give the flight numbers of flights landing at APG and departing from ' APG ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.DestAirport = \"APG\"  and  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Give the flight numbers of flights landing at APG or departing from ' APG ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.DestAirport = \"APG\"  or  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Return the number of flights that have destination ATO ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ATO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.DestAirport = \"ATO\" "
    },
    {
        "input": "[struct _ sep0] Count the number of flights departing from ' APG ' and have destination ATO ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ATO, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.SourceAirport = \"APG\"  and  flights.DestAirport = \"ATO\" "
    },
    {
        "input": "[struct _ sep0] Count the number of flights departing from ' APG ' or have destination ATO ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ATO, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.SourceAirport = \"APG\"  or  flights.DestAirport = \"ATO\" "
    },
    {
        "input": "[struct _ sep0] How many flights does airline ' JetBlue Airways ' have and have destination ATO ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode ( ATO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( flights.* )  from airlines  where  airlines.Airline = \"JetBlue Airways\"  and  flights.DestAirport = \"ATO\" "
    },
    {
        "input": "[struct _ sep0] How many flights does airline ' JetBlue Airways ' have or have destination ATO ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode ( ATO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( flights.* )  from airlines  where  airlines.Airline = \"JetBlue Airways\"  or  flights.DestAirport = \"ATO\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with source airport AHD and have destination ATO ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD, ATO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.SourceAirport = \"AHD\"  and  flights.DestAirport = \"ATO\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with source airport AHD or have destination ATO ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD, ATO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.SourceAirport = \"AHD\"  or  flights.DestAirport = \"ATO\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have at least 10 flights and have destination ATO ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ATO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  > 10  and  flights.DestAirport = \"ATO\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airlines have at least 10 flights or have destination ATO ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ATO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  > 10  or  flights.DestAirport = \"ATO\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airlines have less than 200 flights and have destination ATO ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ATO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  < 200  and  flights.DestAirport = \"ATO\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airlines have less than 200 flights or have destination ATO ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ATO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  < 200  or  flights.DestAirport = \"ATO\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which flight numbers correspond to United Airlines flights and have destination ATO ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( United Airlines ), abbreviation, country | airports : city, airportcode ( ATO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select flights.FlightNo from airlines  where  airlines.Airline = \"United Airlines\"  and  flights.DestAirport = \"ATO\" "
    },
    {
        "input": "[struct _ sep0] Which flight numbers correspond to United Airlines flights or have destination ATO ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( United Airlines ), abbreviation, country | airports : city, airportcode ( ATO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select flights.FlightNo from airlines  where  airlines.Airline = \"United Airlines\"  or  flights.DestAirport = \"ATO\" "
    },
    {
        "input": "[struct _ sep0] What are flight numbers of flights departing from Airport ' APG ' and have destination ATO ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ATO, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.SourceAirport = \"APG\"  and  flights.DestAirport = \"ATO\" "
    },
    {
        "input": "[struct _ sep0] What are flight numbers of flights departing from Airport ' APG ' or have destination ATO ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ATO, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.SourceAirport = \"APG\"  or  flights.DestAirport = \"ATO\" "
    },
    {
        "input": "[struct _ sep0] Give the flight numbers of flights leaving from APG and have destination ATO ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ATO, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.SourceAirport = \"APG\"  and  flights.DestAirport = \"ATO\" "
    },
    {
        "input": "[struct _ sep0] Give the flight numbers of flights leaving from APG or have destination ATO ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ATO, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.SourceAirport = \"APG\"  or  flights.DestAirport = \"ATO\" "
    },
    {
        "input": "[struct _ sep0] Return the number of flights , into ATO . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ATO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.DestAirport = \"ATO\" "
    },
    {
        "input": "[struct _ sep0] How many flights depart from ' APG ' and into ATO . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ATO, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.SourceAirport = \"APG\"  and  flights.DestAirport = \"ATO\" "
    },
    {
        "input": "[struct _ sep0] How many flights depart from ' APG ' or into ATO . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ATO, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.SourceAirport = \"APG\"  or  flights.DestAirport = \"ATO\" "
    },
    {
        "input": "[struct _ sep0] Count the number of flights departing from ' APG ' and into ATO . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ATO, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.SourceAirport = \"APG\"  and  flights.DestAirport = \"ATO\" "
    },
    {
        "input": "[struct _ sep0] Count the number of flights departing from ' APG ' or into ATO . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ATO, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.SourceAirport = \"APG\"  or  flights.DestAirport = \"ATO\" "
    },
    {
        "input": "[struct _ sep0] How many flights does airline ' JetBlue Airways ' have and into ATO . [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode ( ATO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( flights.* )  from airlines  where  airlines.Airline = \"JetBlue Airways\"  and  flights.DestAirport = \"ATO\" "
    },
    {
        "input": "[struct _ sep0] How many flights does airline ' JetBlue Airways ' have or into ATO . [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode ( ATO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( flights.* )  from airlines  where  airlines.Airline = \"JetBlue Airways\"  or  flights.DestAirport = \"ATO\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with source airport AHD and into ATO . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD, ATO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.SourceAirport = \"AHD\"  and  flights.DestAirport = \"ATO\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with source airport AHD or into ATO . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD, ATO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.SourceAirport = \"AHD\"  or  flights.DestAirport = \"ATO\" "
    },
    {
        "input": "[struct _ sep0] What are flight numbers of flights departing from Airport ' APG ' and into ATO . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ATO, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.SourceAirport = \"APG\"  and  flights.DestAirport = \"ATO\" "
    },
    {
        "input": "[struct _ sep0] What are flight numbers of flights departing from Airport ' APG ' or into ATO . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ATO, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.SourceAirport = \"APG\"  or  flights.DestAirport = \"ATO\" "
    },
    {
        "input": "[struct _ sep0] Give the flight numbers of flights leaving from APG and into ATO . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ATO, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.SourceAirport = \"APG\"  and  flights.DestAirport = \"ATO\" "
    },
    {
        "input": "[struct _ sep0] Give the flight numbers of flights leaving from APG or into ATO . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ATO, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.SourceAirport = \"APG\"  or  flights.DestAirport = \"ATO\" "
    },
    {
        "input": "[struct _ sep0] Return the number of flights that does airline ' JetBlue Airways ' have ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( flights.* )  from airlines  where  airlines.Airline = \"JetBlue Airways\" "
    },
    {
        "input": "[struct _ sep0] Which airline has abbreviation ' UAL ' and does airline ' JetBlue Airways ' have ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue, UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  and  airlines.Airline = \"JetBlue Airways\" "
    },
    {
        "input": "[struct _ sep0] Which airline has abbreviation ' UAL ' or does airline ' JetBlue Airways ' have ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue, UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  or  airlines.Airline = \"JetBlue Airways\" "
    },
    {
        "input": "[struct _ sep0] How many airlines are from USA and does airline ' JetBlue Airways ' have ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( airlines.* )  from airlines  where  airlines.Country = \"USA\"  and  airlines.Airline = \"JetBlue Airways\" "
    },
    {
        "input": "[struct _ sep0] How many airlines are from USA or does airline ' JetBlue Airways ' have ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( airlines.* )  from airlines  where  airlines.Country = \"USA\"  or  airlines.Airline = \"JetBlue Airways\" "
    },
    {
        "input": "[struct _ sep0] Count the number of flights departing from ' APG ' and does airline ' JetBlue Airways ' have ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.SourceAirport = \"APG\"  and  airlines.Airline = \"JetBlue Airways\" "
    },
    {
        "input": "[struct _ sep0] How many flights have destination ATO and does airline ' JetBlue Airways ' have ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode ( ATO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.DestAirport = \"ATO\"  and  airlines.Airline = \"JetBlue Airways\" "
    },
    {
        "input": "[struct _ sep0] Count the number of flights into ATO and does airline ' JetBlue Airways ' have ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode ( ATO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.DestAirport = \"ATO\"  and  airlines.Airline = \"JetBlue Airways\" "
    },
    {
        "input": "[struct _ sep0] What are flight numbers of flights departing from Airport ' APG ' and does airline ' JetBlue Airways ' have ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.SourceAirport = \"APG\"  and  airlines.Airline = \"JetBlue Airways\" "
    },
    {
        "input": "[struct _ sep0] What are flight numbers of flights departing from Airport ' APG ' or does airline ' JetBlue Airways ' have ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.SourceAirport = \"APG\"  or  airlines.Airline = \"JetBlue Airways\" "
    },
    {
        "input": "[struct _ sep0] Give the flight numbers of flights leaving from APG and does airline ' JetBlue Airways ' have ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.SourceAirport = \"APG\"  and  airlines.Airline = \"JetBlue Airways\" "
    },
    {
        "input": "[struct _ sep0] Give the flight numbers of flights leaving from APG or does airline ' JetBlue Airways ' have ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.SourceAirport = \"APG\"  or  airlines.Airline = \"JetBlue Airways\" "
    },
    {
        "input": "[struct _ sep0] What are flight numbers of flights arriving at Airport ' APG ' and does airline ' JetBlue Airways ' have ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.DestAirport = \"APG\"  and  airlines.Airline = \"JetBlue Airways\" "
    },
    {
        "input": "[struct _ sep0] What are flight numbers of flights arriving at Airport ' APG ' or does airline ' JetBlue Airways ' have ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.DestAirport = \"APG\"  or  airlines.Airline = \"JetBlue Airways\" "
    },
    {
        "input": "[struct _ sep0] Give the flight numbers of flights landing at APG and does airline ' JetBlue Airways ' have ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.DestAirport = \"APG\"  and  airlines.Airline = \"JetBlue Airways\" "
    },
    {
        "input": "[struct _ sep0] Give the flight numbers of flights landing at APG or does airline ' JetBlue Airways ' have ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.DestAirport = \"APG\"  or  airlines.Airline = \"JetBlue Airways\" "
    },
    {
        "input": "[struct _ sep0] Which country does Airline ' JetBlue Airways ' belong to and go to Airport ' ASY ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode ( ASY ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Country from airlines  where  airlines.Airline = \"JetBlue Airways\"  and  flights.DestAirport = \"ASY\" "
    },
    {
        "input": "[struct _ sep0] Which country does Airline ' JetBlue Airways ' belong to or go to Airport ' ASY ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode ( ASY ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Country from airlines  where  airlines.Airline = \"JetBlue Airways\"  or  flights.DestAirport = \"ASY\" "
    },
    {
        "input": "[struct _ sep0] Which airline has abbreviation ' UAL ' and go to Airport ' ASY ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode ( ASY ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  and  flights.DestAirport = \"ASY\" "
    },
    {
        "input": "[struct _ sep0] Which airline has abbreviation ' UAL ' or go to Airport ' ASY ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode ( ASY ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  or  flights.DestAirport = \"ASY\" "
    },
    {
        "input": "[struct _ sep0] How many airlines are from USA and go to Airport ' ASY ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode ( ASY ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( airlines.* )  from airlines  where  airlines.Country = \"USA\"  and  flights.DestAirport = \"ASY\" "
    },
    {
        "input": "[struct _ sep0] Count the number of flights departing from ' APG ' and go to Airport ' ASY ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG, ASY ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.SourceAirport = \"APG\"  and  flights.DestAirport = \"ASY\" "
    },
    {
        "input": "[struct _ sep0] Count the number of flights departing from ' APG ' or go to Airport ' ASY ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG, ASY ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.SourceAirport = \"APG\"  or  flights.DestAirport = \"ASY\" "
    },
    {
        "input": "[struct _ sep0] Which airline has most number of flights and go to Airport ' ASY ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ASY ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.DestAirport = \"ASY\"  group by airlines.Airline  order by count ( flights.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] What airline serves the most flights and go to Airport ' ASY ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ASY ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.DestAirport = \"ASY\"  group by airlines.Airline  order by count ( flights.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with source airport AHD and go to Airport ' ASY ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD, ASY ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.SourceAirport = \"AHD\"  and  flights.DestAirport = \"ASY\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with source airport AHD or go to Airport ' ASY ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD, ASY ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.SourceAirport = \"AHD\"  or  flights.DestAirport = \"ASY\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have at least 10 flights and go to Airport ' ASY ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ASY ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  > 10  and  flights.DestAirport = \"ASY\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airlines have at least 10 flights or go to Airport ' ASY ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ASY ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  > 10  or  flights.DestAirport = \"ASY\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airlines have less than 200 flights and go to Airport ' ASY ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ASY ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  < 200  and  flights.DestAirport = \"ASY\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airlines have less than 200 flights or go to Airport ' ASY ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ASY ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  < 200  or  flights.DestAirport = \"ASY\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] What are flight numbers of flights departing from Airport ' APG ' and go to Airport ' ASY ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG, ASY ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.SourceAirport = \"APG\"  and  flights.DestAirport = \"ASY\" "
    },
    {
        "input": "[struct _ sep0] What are flight numbers of flights departing from Airport ' APG ' or go to Airport ' ASY ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG, ASY ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.SourceAirport = \"APG\"  or  flights.DestAirport = \"ASY\" "
    },
    {
        "input": "[struct _ sep0] Give the flight numbers of flights leaving from APG and go to Airport ' ASY ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG, ASY ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.SourceAirport = \"APG\"  and  flights.DestAirport = \"ASY\" "
    },
    {
        "input": "[struct _ sep0] Give the flight numbers of flights leaving from APG or go to Airport ' ASY ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG, ASY ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.SourceAirport = \"APG\"  or  flights.DestAirport = \"ASY\" "
    },
    {
        "input": "[struct _ sep0] Which country does Airline ' JetBlue Airways ' belong to and arriving in ASY Airport . [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode ( ASY ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Country from airlines  where  airlines.Airline = \"JetBlue Airways\"  and  flights.DestAirport = \"ASY\" "
    },
    {
        "input": "[struct _ sep0] Which country does Airline ' JetBlue Airways ' belong to or arriving in ASY Airport . [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode ( ASY ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Country from airlines  where  airlines.Airline = \"JetBlue Airways\"  or  flights.DestAirport = \"ASY\" "
    },
    {
        "input": "[struct _ sep0] Which airline has abbreviation ' UAL ' and arriving in ASY Airport . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode ( ASY ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  and  flights.DestAirport = \"ASY\" "
    },
    {
        "input": "[struct _ sep0] Which airline has abbreviation ' UAL ' or arriving in ASY Airport . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode ( ASY ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  or  flights.DestAirport = \"ASY\" "
    },
    {
        "input": "[struct _ sep0] How many airlines are from USA and arriving in ASY Airport . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode ( ASY ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( airlines.* )  from airlines  where  airlines.Country = \"USA\"  and  flights.DestAirport = \"ASY\" "
    },
    {
        "input": "[struct _ sep0] Count the number of flights departing from ' APG ' and arriving in ASY Airport . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG, ASY ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.SourceAirport = \"APG\"  and  flights.DestAirport = \"ASY\" "
    },
    {
        "input": "[struct _ sep0] Count the number of flights departing from ' APG ' or arriving in ASY Airport . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG, ASY ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.SourceAirport = \"APG\"  or  flights.DestAirport = \"ASY\" "
    },
    {
        "input": "[struct _ sep0] Which airline has most number of flights and arriving in ASY Airport . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ASY ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.DestAirport = \"ASY\"  group by airlines.Airline  order by count ( flights.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] What airline serves the most flights and arriving in ASY Airport . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ASY ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.DestAirport = \"ASY\"  group by airlines.Airline  order by count ( flights.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with source airport AHD and arriving in ASY Airport . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD, ASY ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.SourceAirport = \"AHD\"  and  flights.DestAirport = \"ASY\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with source airport AHD or arriving in ASY Airport . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD, ASY ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.SourceAirport = \"AHD\"  or  flights.DestAirport = \"ASY\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have at least 10 flights and arriving in ASY Airport . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ASY ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  > 10  and  flights.DestAirport = \"ASY\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airlines have at least 10 flights or arriving in ASY Airport . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ASY ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  > 10  or  flights.DestAirport = \"ASY\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airlines have less than 200 flights and arriving in ASY Airport . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ASY ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  < 200  and  flights.DestAirport = \"ASY\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airlines have less than 200 flights or arriving in ASY Airport . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ASY ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  < 200  or  flights.DestAirport = \"ASY\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] What are flight numbers of flights departing from Airport ' APG ' and arriving in ASY Airport . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG, ASY ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.SourceAirport = \"APG\"  and  flights.DestAirport = \"ASY\" "
    },
    {
        "input": "[struct _ sep0] What are flight numbers of flights departing from Airport ' APG ' or arriving in ASY Airport . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG, ASY ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.SourceAirport = \"APG\"  or  flights.DestAirport = \"ASY\" "
    },
    {
        "input": "[struct _ sep0] Give the flight numbers of flights leaving from APG and arriving in ASY Airport . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG, ASY ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.SourceAirport = \"APG\"  and  flights.DestAirport = \"ASY\" "
    },
    {
        "input": "[struct _ sep0] Give the flight numbers of flights leaving from APG or arriving in ASY Airport . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG, ASY ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.SourceAirport = \"APG\"  or  flights.DestAirport = \"ASY\" "
    },
    {
        "input": "[struct _ sep0] List all airline names and their abbreviations in ' USA ' and from Airport ' AHD ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline , airlines.Abbreviation from airlines  where  airlines.Country = \"USA\"  and  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] List all airline names and their abbreviations in ' USA ' or from Airport ' AHD ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline , airlines.Abbreviation from airlines  where  airlines.Country = \"USA\"  or  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] What are the airline names and abbreviations for airlines in the USA and from Airport ' AHD ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline , airlines.Abbreviation from airlines  where  airlines.Country = \"USA\"  and  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] What are the airline names and abbreviations for airlines in the USA or from Airport ' AHD ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline , airlines.Abbreviation from airlines  where  airlines.Country = \"USA\"  or  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Give the airline with abbreviation ' UAL ' and from Airport ' AHD ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  and  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Give the airline with abbreviation ' UAL ' or from Airport ' AHD ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  or  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Return the number of airlines in the USA and from Airport ' AHD ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select count ( airlines.* )  from airlines  where  airlines.Country = \"USA\"  and  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Count the number of flights into ATO and from Airport ' AHD ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD, ATO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.DestAirport = \"ATO\"  and  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Count the number of flights into ATO or from Airport ' AHD ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD, ATO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.DestAirport = \"ATO\"  or  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with destination airport AHD and from Airport ' AHD ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.DestAirport = \"AHD\"  and  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with destination airport AHD or from Airport ' AHD ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.DestAirport = \"AHD\"  or  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Which country does Airline ' JetBlue Airways ' belong to and leaving from AHD Airport . [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Country from airlines  where  airlines.Airline = \"JetBlue Airways\"  and  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Which country does Airline ' JetBlue Airways ' belong to or leaving from AHD Airport . [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Country from airlines  where  airlines.Airline = \"JetBlue Airways\"  or  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Which airline has abbreviation ' UAL ' and leaving from AHD Airport . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  and  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Which airline has abbreviation ' UAL ' or leaving from AHD Airport . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  or  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] How many airlines are from USA and leaving from AHD Airport . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select count ( airlines.* )  from airlines  where  airlines.Country = \"USA\"  and  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] How many flights have destination ATO and leaving from AHD Airport . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD, ATO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.DestAirport = \"ATO\"  and  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] How many flights have destination ATO or leaving from AHD Airport . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD, ATO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.DestAirport = \"ATO\"  or  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Count the number of flights into ATO and leaving from AHD Airport . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD, ATO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.DestAirport = \"ATO\"  and  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Count the number of flights into ATO or leaving from AHD Airport . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD, ATO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.DestAirport = \"ATO\"  or  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Which airline has most number of flights and leaving from AHD Airport . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.SourceAirport = \"AHD\"  group by airlines.Airline  order by count ( flights.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] What airline serves the most flights and leaving from AHD Airport . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.SourceAirport = \"AHD\"  group by airlines.Airline  order by count ( flights.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with destination airport AHD and leaving from AHD Airport . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.DestAirport = \"AHD\"  and  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with destination airport AHD or leaving from AHD Airport . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.DestAirport = \"AHD\"  or  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have at least 10 flights and leaving from AHD Airport . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  > 10  and  flights.SourceAirport = \"AHD\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airlines have at least 10 flights or leaving from AHD Airport . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  > 10  or  flights.SourceAirport = \"AHD\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airlines have less than 200 flights and leaving from AHD Airport . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  < 200  and  flights.SourceAirport = \"AHD\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airlines have less than 200 flights or leaving from AHD Airport . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  < 200  or  flights.SourceAirport = \"AHD\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] What are flight numbers of flights arriving at Airport ' APG ' and leaving from AHD Airport . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD, APG ), destairport ( AHD, APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.DestAirport = \"APG\"  and  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] What are flight numbers of flights arriving at Airport ' APG ' or leaving from AHD Airport . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD, APG ), destairport ( AHD, APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.DestAirport = \"APG\"  or  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Give the flight numbers of flights landing at APG and leaving from AHD Airport . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD, APG ), destairport ( AHD, APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.DestAirport = \"APG\"  and  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Give the flight numbers of flights landing at APG or leaving from AHD Airport . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD, APG ), destairport ( AHD, APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.DestAirport = \"APG\"  or  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] List all airline names and their abbreviations in ' USA ' and from airport ' AHD ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline , airlines.Abbreviation from airlines  where  airlines.Country = \"USA\"  and  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] List all airline names and their abbreviations in ' USA ' or from airport ' AHD ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline , airlines.Abbreviation from airlines  where  airlines.Country = \"USA\"  or  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] What are the airline names and abbreviations for airlines in the USA and from airport ' AHD ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline , airlines.Abbreviation from airlines  where  airlines.Country = \"USA\"  and  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] What are the airline names and abbreviations for airlines in the USA or from airport ' AHD ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline , airlines.Abbreviation from airlines  where  airlines.Country = \"USA\"  or  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Give the airline with abbreviation ' UAL ' and from airport ' AHD ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  and  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Give the airline with abbreviation ' UAL ' or from airport ' AHD ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  or  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Return the number of airlines in the USA and from airport ' AHD ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select count ( airlines.* )  from airlines  where  airlines.Country = \"USA\"  and  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Count the number of flights into ATO and from airport ' AHD ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD, ATO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.DestAirport = \"ATO\"  and  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Count the number of flights into ATO or from airport ' AHD ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD, ATO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.DestAirport = \"ATO\"  or  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with destination airport AHD and from airport ' AHD ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.DestAirport = \"AHD\"  and  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with destination airport AHD or from airport ' AHD ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.DestAirport = \"AHD\"  or  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] List all airline names and their abbreviations in ' USA ' and with source airport AHD ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline , airlines.Abbreviation from airlines  where  airlines.Country = \"USA\"  and  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] List all airline names and their abbreviations in ' USA ' or with source airport AHD ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline , airlines.Abbreviation from airlines  where  airlines.Country = \"USA\"  or  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] What are the airline names and abbreviations for airlines in the USA and with source airport AHD ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline , airlines.Abbreviation from airlines  where  airlines.Country = \"USA\"  and  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] What are the airline names and abbreviations for airlines in the USA or with source airport AHD ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline , airlines.Abbreviation from airlines  where  airlines.Country = \"USA\"  or  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Give the airline with abbreviation ' UAL ' and with source airport AHD ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  and  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Give the airline with abbreviation ' UAL ' or with source airport AHD ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  or  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Return the number of airlines in the USA and with source airport AHD ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select count ( airlines.* )  from airlines  where  airlines.Country = \"USA\"  and  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] How many flights have destination ATO and with source airport AHD ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD, ATO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.DestAirport = \"ATO\"  and  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] How many flights have destination ATO or with source airport AHD ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD, ATO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.DestAirport = \"ATO\"  or  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Count the number of flights into ATO and with source airport AHD ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD, ATO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.DestAirport = \"ATO\"  and  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Count the number of flights into ATO or with source airport AHD ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD, ATO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.DestAirport = \"ATO\"  or  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with destination airport AHD and with source airport AHD ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.DestAirport = \"AHD\"  and  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with destination airport AHD or with source airport AHD ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.DestAirport = \"AHD\"  or  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] What are flight numbers of flights arriving at Airport ' APG ' and with source airport AHD ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD, APG ), destairport ( AHD, APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.DestAirport = \"APG\"  and  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] What are flight numbers of flights arriving at Airport ' APG ' or with source airport AHD ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD, APG ), destairport ( AHD, APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.DestAirport = \"APG\"  or  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Give the flight numbers of flights landing at APG and with source airport AHD ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD, APG ), destairport ( AHD, APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.DestAirport = \"APG\"  and  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Give the flight numbers of flights landing at APG or with source airport AHD ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD, APG ), destairport ( AHD, APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.DestAirport = \"APG\"  or  flights.SourceAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] List all airline names and their abbreviations in ' USA ' and with destination airport AHD ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline , airlines.Abbreviation from airlines  where  airlines.Country = \"USA\"  and  flights.DestAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] List all airline names and their abbreviations in ' USA ' or with destination airport AHD ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline , airlines.Abbreviation from airlines  where  airlines.Country = \"USA\"  or  flights.DestAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] What are the airline names and abbreviations for airlines in the USA and with destination airport AHD ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline , airlines.Abbreviation from airlines  where  airlines.Country = \"USA\"  and  flights.DestAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] What are the airline names and abbreviations for airlines in the USA or with destination airport AHD ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline , airlines.Abbreviation from airlines  where  airlines.Country = \"USA\"  or  flights.DestAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Give the airline with abbreviation ' UAL ' and with destination airport AHD ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  and  flights.DestAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Give the airline with abbreviation ' UAL ' or with destination airport AHD ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  or  flights.DestAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Return the number of airlines in the USA and with destination airport AHD ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select count ( airlines.* )  from airlines  where  airlines.Country = \"USA\"  and  flights.DestAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] How many flights depart from ' APG ' and with destination airport AHD ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD, APG ), destairport ( AHD, APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.SourceAirport = \"APG\"  and  flights.DestAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] How many flights depart from ' APG ' or with destination airport AHD ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD, APG ), destairport ( AHD, APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.SourceAirport = \"APG\"  or  flights.DestAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Count the number of flights departing from ' APG ' and with destination airport AHD ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD, APG ), destairport ( AHD, APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.SourceAirport = \"APG\"  and  flights.DestAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Count the number of flights departing from ' APG ' or with destination airport AHD ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD, APG ), destairport ( AHD, APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.SourceAirport = \"APG\"  or  flights.DestAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with source airport AHD and with destination airport AHD ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.SourceAirport = \"AHD\"  and  flights.DestAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with source airport AHD or with destination airport AHD ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD ), destairport ( AHD )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.SourceAirport = \"AHD\"  or  flights.DestAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] What are flight numbers of flights departing from Airport ' APG ' and with destination airport AHD ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD, APG ), destairport ( AHD, APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.SourceAirport = \"APG\"  and  flights.DestAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] What are flight numbers of flights departing from Airport ' APG ' or with destination airport AHD ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD, APG ), destairport ( AHD, APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.SourceAirport = \"APG\"  or  flights.DestAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Give the flight numbers of flights leaving from APG and with destination airport AHD ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD, APG ), destairport ( AHD, APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.SourceAirport = \"APG\"  and  flights.DestAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] Give the flight numbers of flights leaving from APG or with destination airport AHD ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD, APG ), destairport ( AHD, APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.SourceAirport = \"APG\"  or  flights.DestAirport = \"AHD\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of airlines , that have flights from both airports ' APG ' and ' CVO ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( CVO, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG, CVO ), destairport ( APG, CVO )",
        "gold_natsql": "select count ( airlines.* )  from airlines  where  flights.SourceAirport = \"APG\"  and  flights.SourceAirport = \"CVO\" "
    },
    {
        "input": "[struct _ sep0] Find all airlines that have at least 10 flights and that have flights from both airports ' APG ' and ' CVO ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( CVO, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG, CVO ), destairport ( APG, CVO )",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  > 10  and  flights.SourceAirport = \"APG\"  and  flights.SourceAirport = \"CVO\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Find all airlines that have fewer than 200 flights and that have flights from both airports ' APG ' and ' CVO ' . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( CVO, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG, CVO ), destairport ( APG, CVO )",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  < 200  and  flights.SourceAirport = \"APG\"  and  flights.SourceAirport = \"CVO\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] List all airline names and their abbreviations in ' USA ' and from both APG and CVO airports ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode ( CVO, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG, CVO ), destairport ( APG, CVO )",
        "gold_natsql": "select airlines.Airline , airlines.Abbreviation from airlines  where  airlines.Country = \"USA\"  and  flights.SourceAirport = \"APG\"  and  flights.SourceAirport = \"CVO\" "
    },
    {
        "input": "[struct _ sep0] What are the airline names and abbreviations for airlines in the USA and from both APG and CVO airports ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode ( CVO, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG, CVO ), destairport ( APG, CVO )",
        "gold_natsql": "select airlines.Airline , airlines.Abbreviation from airlines  where  airlines.Country = \"USA\"  and  flights.SourceAirport = \"APG\"  and  flights.SourceAirport = \"CVO\" "
    },
    {
        "input": "[struct _ sep0] Give the airline with abbreviation ' UAL ' and from both APG and CVO airports ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode ( CVO, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG, CVO ), destairport ( APG, CVO )",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  and  flights.SourceAirport = \"APG\"  and  flights.SourceAirport = \"CVO\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with destination airport AHD and from both APG and CVO airports ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( CVO, AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD, APG ), destairport ( AHD, APG )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.DestAirport = \"AHD\"  and  flights.SourceAirport = \"APG\"  and  flights.SourceAirport = \"CVO\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of airlines , that have flights from airport ' CVO ' [/struct _ sep0]| airlines : uid, airline, abbreviation, country | airports : city, airportcode ( CVO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( CVO ), destairport ( CVO )",
        "gold_natsql": "select count ( airlines.* )  from airlines  where  flights.SourceAirport = \"CVO\" "
    },
    {
        "input": "[struct _ sep0] Find the abbreviation and country of the airline that has fewest number of flights and that have flights from airport ' CVO ' [/struct _ sep0]| airlines : uid, airline, abbreviation, country | airports : city, airportcode ( CVO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( CVO ), destairport ( CVO )",
        "gold_natsql": "select airlines.Abbreviation , airlines.Country from airlines  where  flights.SourceAirport = \"CVO\"  group by airlines.Airline  order by count ( flights.* )  asc limit 1"
    },
    {
        "input": "[struct _ sep0] Find all airlines that have at least 10 flights and that have flights from airport ' CVO ' [/struct _ sep0]| airlines : uid, airline, abbreviation, country | airports : city, airportcode ( CVO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( CVO ), destairport ( CVO )",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  > 10  and  flights.SourceAirport = \"CVO\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Find all airlines that have at least 10 flights or that have flights from airport ' CVO ' [/struct _ sep0]| airlines : uid, airline, abbreviation, country | airports : city, airportcode ( CVO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( CVO ), destairport ( CVO )",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  > 10  or  flights.SourceAirport = \"CVO\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Find all airlines that have fewer than 200 flights and that have flights from airport ' CVO ' [/struct _ sep0]| airlines : uid, airline, abbreviation, country | airports : city, airportcode ( CVO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( CVO ), destairport ( CVO )",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  < 200  and  flights.SourceAirport = \"CVO\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Find all airlines that have fewer than 200 flights or that have flights from airport ' CVO ' [/struct _ sep0]| airlines : uid, airline, abbreviation, country | airports : city, airportcode ( CVO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( CVO ), destairport ( CVO )",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  < 200  or  flights.SourceAirport = \"CVO\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] List all airline names and their abbreviations in ' USA ' and from CVO ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode ( CVO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( CVO ), destairport ( CVO )",
        "gold_natsql": "select airlines.Airline , airlines.Abbreviation from airlines  where  airlines.Country = \"USA\"  and  flights.SourceAirport = \"CVO\" "
    },
    {
        "input": "[struct _ sep0] List all airline names and their abbreviations in ' USA ' or from CVO ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode ( CVO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( CVO ), destairport ( CVO )",
        "gold_natsql": "select airlines.Airline , airlines.Abbreviation from airlines  where  airlines.Country = \"USA\"  or  flights.SourceAirport = \"CVO\" "
    },
    {
        "input": "[struct _ sep0] What are the airline names and abbreviations for airlines in the USA and from CVO ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode ( CVO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( CVO ), destairport ( CVO )",
        "gold_natsql": "select airlines.Airline , airlines.Abbreviation from airlines  where  airlines.Country = \"USA\"  and  flights.SourceAirport = \"CVO\" "
    },
    {
        "input": "[struct _ sep0] What are the airline names and abbreviations for airlines in the USA or from CVO ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode ( CVO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( CVO ), destairport ( CVO )",
        "gold_natsql": "select airlines.Airline , airlines.Abbreviation from airlines  where  airlines.Country = \"USA\"  or  flights.SourceAirport = \"CVO\" "
    },
    {
        "input": "[struct _ sep0] Give the airline with abbreviation ' UAL ' and from CVO ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode ( CVO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( CVO ), destairport ( CVO )",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  and  flights.SourceAirport = \"CVO\" "
    },
    {
        "input": "[struct _ sep0] Give the airline with abbreviation ' UAL ' or from CVO ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode ( CVO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( CVO ), destairport ( CVO )",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  or  flights.SourceAirport = \"CVO\" "
    },
    {
        "input": "[struct _ sep0] Return the number of airlines in the USA and from CVO ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country ( USA ) | airports : city, airportcode ( CVO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( CVO ), destairport ( CVO )",
        "gold_natsql": "select count ( airlines.* )  from airlines  where  airlines.Country = \"USA\"  and  flights.SourceAirport = \"CVO\" "
    },
    {
        "input": "[struct _ sep0] Count the number of flights into ATO and from CVO ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( CVO, ATO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( CVO ), destairport ( CVO )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.DestAirport = \"ATO\"  and  flights.SourceAirport = \"CVO\" "
    },
    {
        "input": "[struct _ sep0] Count the number of flights into ATO or from CVO ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( CVO, ATO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( CVO ), destairport ( CVO )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.DestAirport = \"ATO\"  or  flights.SourceAirport = \"CVO\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with destination airport AHD and from CVO ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( CVO, AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD, CVO ), destairport ( AHD, CVO )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.DestAirport = \"AHD\"  and  flights.SourceAirport = \"CVO\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with destination airport AHD or from CVO ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( CVO, AHD ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD, CVO ), destairport ( AHD, CVO )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.DestAirport = \"AHD\"  or  flights.SourceAirport = \"CVO\" "
    },
    {
        "input": "[struct _ sep0] Which airline has abbreviation ' UAL ' and have at least 10 flights ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  and  count ( flights.* )  > 10  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airline has abbreviation ' UAL ' or have at least 10 flights ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  or  count ( flights.* )  > 10  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Give the airline with abbreviation ' UAL ' and have at least 10 flights ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  and  count ( flights.* )  > 10  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Give the airline with abbreviation ' UAL ' or have at least 10 flights ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  or  count ( flights.* )  > 10  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airline has abbreviation ' UAL ' and have less than 200 flights ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  and  count ( flights.* )  < 200  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airline has abbreviation ' UAL ' or have less than 200 flights ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  or  count ( flights.* )  < 200  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Give the airline with abbreviation ' UAL ' and have less than 200 flights ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  and  count ( flights.* )  < 200  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Give the airline with abbreviation ' UAL ' or have less than 200 flights ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  or  count ( flights.* )  < 200  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airline has abbreviation ' UAL ' and correspond to United Airlines flights ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( United Airlines ), abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  and  airlines.Airline = \"United Airlines\" "
    },
    {
        "input": "[struct _ sep0] Which airline has abbreviation ' UAL ' or correspond to United Airlines flights ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( United Airlines ), abbreviation ( UAL ), country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\"  or  airlines.Airline = \"United Airlines\" "
    },
    {
        "input": "[struct _ sep0] How many airlines are from USA and correspond to United Airlines flights ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( United Airlines ), abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( airlines.* )  from airlines  where  airlines.Country = \"USA\"  and  airlines.Airline = \"United Airlines\" "
    },
    {
        "input": "[struct _ sep0] How many airlines are from USA or correspond to United Airlines flights ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( United Airlines ), abbreviation, country ( USA ) | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( airlines.* )  from airlines  where  airlines.Country = \"USA\"  or  airlines.Airline = \"United Airlines\" "
    },
    {
        "input": "[struct _ sep0] Count the number of flights departing from ' APG ' and correspond to United Airlines flights ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( United Airlines ), abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.SourceAirport = \"APG\"  and  airlines.Airline = \"United Airlines\" "
    },
    {
        "input": "[struct _ sep0] How many flights have destination ATO and correspond to United Airlines flights ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( United Airlines ), abbreviation, country | airports : city, airportcode ( ATO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.DestAirport = \"ATO\"  and  airlines.Airline = \"United Airlines\" "
    },
    {
        "input": "[struct _ sep0] What are flight numbers of flights departing from Airport ' APG ' and correspond to United Airlines flights ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( United Airlines ), abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.SourceAirport = \"APG\"  and  airlines.Airline = \"United Airlines\" "
    },
    {
        "input": "[struct _ sep0] What are flight numbers of flights departing from Airport ' APG ' or correspond to United Airlines flights ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( United Airlines ), abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.SourceAirport = \"APG\"  or  airlines.Airline = \"United Airlines\" "
    },
    {
        "input": "[struct _ sep0] Give the flight numbers of flights leaving from APG and correspond to United Airlines flights ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( United Airlines ), abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.SourceAirport = \"APG\"  and  airlines.Airline = \"United Airlines\" "
    },
    {
        "input": "[struct _ sep0] Give the flight numbers of flights leaving from APG or correspond to United Airlines flights ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( United Airlines ), abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.SourceAirport = \"APG\"  or  airlines.Airline = \"United Airlines\" "
    },
    {
        "input": "[struct _ sep0] What are flight numbers of flights arriving at Airport ' APG ' and correspond to United Airlines flights ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( United Airlines ), abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.DestAirport = \"APG\"  and  airlines.Airline = \"United Airlines\" "
    },
    {
        "input": "[struct _ sep0] What are flight numbers of flights arriving at Airport ' APG ' or correspond to United Airlines flights ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( United Airlines ), abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.DestAirport = \"APG\"  or  airlines.Airline = \"United Airlines\" "
    },
    {
        "input": "[struct _ sep0] Return the number of flights that departing from Airport ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] How many flights have destination ATO and departing from Airport ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ATO, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.DestAirport = \"ATO\"  and  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] How many flights have destination ATO or departing from Airport ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ATO, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.DestAirport = \"ATO\"  or  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Count the number of flights into ATO and departing from Airport ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ATO, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.DestAirport = \"ATO\"  and  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Count the number of flights into ATO or departing from Airport ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ATO, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.DestAirport = \"ATO\"  or  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] How many flights does airline ' JetBlue Airways ' have and departing from Airport ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  airlines.Airline = \"JetBlue Airways\"  and  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] How many flights does airline ' JetBlue Airways ' have or departing from Airport ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  airlines.Airline = \"JetBlue Airways\"  or  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with destination airport AHD and departing from Airport ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD, APG ), destairport ( AHD, APG )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.DestAirport = \"AHD\"  and  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with destination airport AHD or departing from Airport ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD, APG ), destairport ( AHD, APG )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.DestAirport = \"AHD\"  or  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have at least 10 flights and departing from Airport ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  > 10  and  flights.SourceAirport = \"APG\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airlines have at least 10 flights or departing from Airport ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  > 10  or  flights.SourceAirport = \"APG\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airlines have less than 200 flights and departing from Airport ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  < 200  and  flights.SourceAirport = \"APG\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airlines have less than 200 flights or departing from Airport ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  < 200  or  flights.SourceAirport = \"APG\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which flight numbers correspond to United Airlines flights and departing from Airport ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( United Airlines ), abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  airlines.Airline = \"United Airlines\"  and  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Which flight numbers correspond to United Airlines flights or departing from Airport ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( United Airlines ), abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  airlines.Airline = \"United Airlines\"  or  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] What are flight numbers of flights arriving at Airport ' APG ' and departing from Airport ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.DestAirport = \"APG\"  and  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] What are flight numbers of flights arriving at Airport ' APG ' or departing from Airport ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.DestAirport = \"APG\"  or  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Give the flight numbers of flights landing at APG and departing from Airport ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.DestAirport = \"APG\"  and  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Give the flight numbers of flights landing at APG or departing from Airport ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.DestAirport = \"APG\"  or  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Return the number of flights that leaving from APG . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] How many flights have destination ATO and leaving from APG . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ATO, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.DestAirport = \"ATO\"  and  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] How many flights have destination ATO or leaving from APG . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ATO, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.DestAirport = \"ATO\"  or  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Count the number of flights into ATO and leaving from APG . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ATO, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.DestAirport = \"ATO\"  and  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Count the number of flights into ATO or leaving from APG . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( ATO, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.DestAirport = \"ATO\"  or  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] How many flights does airline ' JetBlue Airways ' have and leaving from APG . [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  airlines.Airline = \"JetBlue Airways\"  and  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] How many flights does airline ' JetBlue Airways ' have or leaving from APG . [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  airlines.Airline = \"JetBlue Airways\"  or  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with destination airport AHD and leaving from APG . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD, APG ), destairport ( AHD, APG )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.DestAirport = \"AHD\"  and  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with destination airport AHD or leaving from APG . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD, APG ), destairport ( AHD, APG )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.DestAirport = \"AHD\"  or  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have at least 10 flights and leaving from APG . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  > 10  and  flights.SourceAirport = \"APG\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airlines have at least 10 flights or leaving from APG . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  > 10  or  flights.SourceAirport = \"APG\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airlines have less than 200 flights and leaving from APG . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  < 200  and  flights.SourceAirport = \"APG\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airlines have less than 200 flights or leaving from APG . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  < 200  or  flights.SourceAirport = \"APG\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which flight numbers correspond to United Airlines flights and leaving from APG . [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( United Airlines ), abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  airlines.Airline = \"United Airlines\"  and  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Which flight numbers correspond to United Airlines flights or leaving from APG . [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( United Airlines ), abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  airlines.Airline = \"United Airlines\"  or  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] What are flight numbers of flights arriving at Airport ' APG ' and leaving from APG . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.DestAirport = \"APG\"  and  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] What are flight numbers of flights arriving at Airport ' APG ' or leaving from APG . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.DestAirport = \"APG\"  or  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Give the flight numbers of flights landing at APG and leaving from APG . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.DestAirport = \"APG\"  and  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Give the flight numbers of flights landing at APG or leaving from APG . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.DestAirport = \"APG\"  or  flights.SourceAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Return the number of flights that arriving at Airport ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.DestAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Count the number of flights departing from ' APG ' and arriving at Airport ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.SourceAirport = \"APG\"  and  flights.DestAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Count the number of flights departing from ' APG ' or arriving at Airport ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.SourceAirport = \"APG\"  or  flights.DestAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] How many flights does airline ' JetBlue Airways ' have and arriving at Airport ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  airlines.Airline = \"JetBlue Airways\"  and  flights.DestAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] How many flights does airline ' JetBlue Airways ' have or arriving at Airport ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  airlines.Airline = \"JetBlue Airways\"  or  flights.DestAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with source airport AHD and arriving at Airport ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD, APG ), destairport ( AHD, APG )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.SourceAirport = \"AHD\"  and  flights.DestAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with source airport AHD or arriving at Airport ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD, APG ), destairport ( AHD, APG )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.SourceAirport = \"AHD\"  or  flights.DestAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have at least 10 flights and arriving at Airport ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  > 10  and  flights.DestAirport = \"APG\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airlines have at least 10 flights or arriving at Airport ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  > 10  or  flights.DestAirport = \"APG\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airlines have less than 200 flights and arriving at Airport ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  < 200  and  flights.DestAirport = \"APG\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which airlines have less than 200 flights or arriving at Airport ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select airlines.Airline from airlines  where  count ( flights.* )  < 200  or  flights.DestAirport = \"APG\"  group by airlines.Airline "
    },
    {
        "input": "[struct _ sep0] Which flight numbers correspond to United Airlines flights and arriving at Airport ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( United Airlines ), abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  airlines.Airline = \"United Airlines\"  and  flights.DestAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Which flight numbers correspond to United Airlines flights or arriving at Airport ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( United Airlines ), abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  airlines.Airline = \"United Airlines\"  or  flights.DestAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] What are flight numbers of flights departing from Airport ' APG ' and arriving at Airport ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.SourceAirport = \"APG\"  and  flights.DestAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] What are flight numbers of flights departing from Airport ' APG ' or arriving at Airport ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.SourceAirport = \"APG\"  or  flights.DestAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Give the flight numbers of flights leaving from APG and arriving at Airport ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.SourceAirport = \"APG\"  and  flights.DestAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Give the flight numbers of flights leaving from APG or arriving at Airport ' APG ' ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.SourceAirport = \"APG\"  or  flights.DestAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Return the number of flights , landing at APG . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.DestAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Count the number of flights departing from ' APG ' and landing at APG . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.SourceAirport = \"APG\"  and  flights.DestAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Count the number of flights departing from ' APG ' or landing at APG . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  flights.SourceAirport = \"APG\"  or  flights.DestAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] How many flights does airline ' JetBlue Airways ' have and landing at APG . [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  airlines.Airline = \"JetBlue Airways\"  and  flights.DestAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] How many flights does airline ' JetBlue Airways ' have or landing at APG . [/struct _ sep0]| flight _ 2 | airlines : uid, airline ( JetBlue Airways ), abbreviation ( JetBlue ), country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select count ( flights.* )  from airlines  where  airlines.Airline = \"JetBlue Airways\"  or  flights.DestAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with source airport AHD and landing at APG . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD, APG ), destairport ( AHD, APG )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.SourceAirport = \"AHD\"  and  flights.DestAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Which airlines have a flight with source airport AHD or landing at APG . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AHD, APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AHD, APG ), destairport ( AHD, APG )",
        "gold_natsql": "select airlines.Airline from airlines  where  flights.SourceAirport = \"AHD\"  or  flights.DestAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] What are flight numbers of flights departing from Airport ' APG ' and landing at APG . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.SourceAirport = \"APG\"  and  flights.DestAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] What are flight numbers of flights departing from Airport ' APG ' or landing at APG . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.SourceAirport = \"APG\"  or  flights.DestAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Give the flight numbers of flights leaving from APG and landing at APG . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.SourceAirport = \"APG\"  and  flights.DestAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Give the flight numbers of flights leaving from APG or landing at APG . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( APG ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( APG ), destairport ( APG )",
        "gold_natsql": "select flights.FlightNo from airlines  where  flights.SourceAirport = \"APG\"  or  flights.DestAirport = \"APG\" "
    },
    {
        "input": "[struct _ sep0] Return the number of airports , which do not have any flight in and out . [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( airports.* )  from airlines  where  @.@ not in flights.SourceAirport  and  @.@ not in flights.DestAirport "
    },
    {
        "input": "[struct _ sep0] Return the number of airports that do not have departing or arriving flights ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select count ( airports.* )  from airlines  where  @.@ not in flights.SourceAirport  and  @.@ not in flights.DestAirport "
    },
    {
        "input": "[struct _ sep0] Which city and country is the Alton airport at and do not have departing or arriving flights ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city ( Alton ), airportcode, airportname ( Alton ), country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airports.City , airports.Country from airlines  where  airports.AirportName = \"Alton\"  and  @.@ not in flights.SourceAirport  and  @.@ not in flights.DestAirport "
    },
    {
        "input": "[struct _ sep0] Return the name of the airport with code ' AKO ' and do not have departing or arriving flights ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city, airportcode ( AKO ), airportname, country, countryabbrev | flights : airline, flightno, sourceairport ( AKO ), destairport ( AKO )",
        "gold_natsql": "select airports.AirportName from airlines  where  airports.AirportCode = \"AKO\"  and  @.@ not in flights.SourceAirport  and  @.@ not in flights.DestAirport "
    },
    {
        "input": "[struct _ sep0] What are the names of airports in Aberdeen and do not have departing or arriving flights ? [/struct _ sep0]| flight _ 2 | airlines : uid, airline, abbreviation, country | airports : city ( Aberdeen ), airportcode, airportname, country, countryabbrev | flights : airline, flightno, sourceairport, destairport",
        "gold_natsql": "select airports.AirportName from airlines  where  airports.City = \"Aberdeen\"  and  @.@ not in flights.SourceAirport  and  @.@ not in flights.DestAirport "
    },
    {
        "input": "[struct _ sep0] What is the number of employees from each city that do more than one employee ? [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select count ( employee.* )  , employee.City from employee  where  count ( employee.* )  > 1  group by employee.City "
    },
    {
        "input": "[struct _ sep0] Count the number of employees for each city that do more than one employee ? [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select count ( employee.* )  , employee.City from employee  where  count ( employee.* )  > 1  group by employee.City "
    },
    {
        "input": "[struct _ sep0] Count the number of employees , under age 30 come from ? [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select count ( employee.* )  from employee  where  employee.Age < 30 "
    },
    {
        "input": "[struct _ sep0] What is the number of employees from each city , that have more than one employee under age 30 . [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select count ( employee.* )  , employee.City from employee  where  employee.Age < 30  and  count ( employee.* )  > 1  group by employee.City "
    },
    {
        "input": "[struct _ sep0] Count the number of employees for each city , that have more than one employee under age 30 . [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select count ( employee.* )  , employee.City from employee  where  employee.Age < 30  and  count ( employee.* )  > 1  group by employee.City "
    },
    {
        "input": "[struct _ sep0] Which district has both stores with less than 3000 products and stores with more than 10000 products , in descending order of number of products . [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select shop.District from employee  where  shop.Number_products < 3000  and  shop.Number_products > 10000  order by shop.Number_products desc"
    },
    {
        "input": "[struct _ sep0] Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products , in descending order of number of products . [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select shop.District from employee  where  shop.Number_products < 3000  and  shop.Number_products > 10000  order by shop.Number_products desc"
    },
    {
        "input": "[struct _ sep0] find the minimum and maximum number of products of all stores , whose number products is more than the average number of products . [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select min ( shop.Number_products )  , max ( shop.Number_products )  from employee  where  @.@ > avg ( shop.Number_products )  "
    },
    {
        "input": "[struct _ sep0] Which shops ' number products is above the average ? Find the number of shops in each location . [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select count ( shop.* )  , shop.Location from employee  where  @.@ > avg ( shop.Number_products )   group by shop.Location "
    },
    {
        "input": "[struct _ sep0] Which shops ' number products is above the average ? find the minimum and maximum number of products of all stores . [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select min ( shop.Number_products )  , max ( shop.Number_products )  from employee  where  @.@ > avg ( shop.Number_products )  "
    },
    {
        "input": "[struct _ sep0] Count the number of employees , who never won any award in the evaluation . [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select count ( employee.* )  from employee  where  @.@ not in evaluation.* "
    },
    {
        "input": "[struct _ sep0] Count the number of employees , who never received any evaluation ? [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select count ( employee.* )  from employee  where  @.@ not in evaluation.* "
    },
    {
        "input": "[struct _ sep0] What are the minimum and maximum number of products across all the shops , that do not hire any employee . [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select min ( shop.Number_products )  , max ( shop.Number_products )  from employee  where  @.@ not in hiring.* "
    },
    {
        "input": "[struct _ sep0] Which shops run with no employees ? Find the number of shops in each location . [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select count ( shop.* )  , shop.Location from employee  where  @ join shop.*  and  @.@ not in hiring.*  group by shop.Location "
    },
    {
        "input": "[struct _ sep0] Which shops run with no employees ? find the minimum and maximum number of products of all stores . [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select min ( shop.Number_products )  , max ( shop.Number_products )  from employee  where  @ join shop.*  and  @.@ not in hiring.* "
    },
    {
        "input": "[struct _ sep0] find the minimum and maximum number of products of all stores , with less than 3000 products and ? [/struct _ sep0]| employee _ hire _ evaluation | employee : employee _ id, name, age, city | shop : shop _ id, name, location, district, number _ products, manager _ name | hiring : shop _ id, employee _ id, start _ from, is _ full _ time | evaluation : employee _ id, year _ awarded, bonus",
        "gold_natsql": "select min ( shop.Number_products )  , max ( shop.Number_products )  from employee  where  shop.Number_products < 3000 "
    },
    {
        "input": "[struct _ sep0] Count the number of documents , with description with the letter ' w ' in it ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( documents.* )  from ref_template_types  where  documents.Document_Description like \"%w%\" "
    },
    {
        "input": "[struct _ sep0] List document IDs , document names , and document descriptions for all documents , with description with the letter ' w ' in it ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Document_Name , documents.Document_Description from ref_template_types  where  documents.Document_Description like \"%w%\" "
    },
    {
        "input": "[struct _ sep0] What are the ids , names , and descriptions for all documents , with description with the letter ' w ' in it ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Document_Name , documents.Document_Description from ref_template_types  where  documents.Document_Description like \"%w%\" "
    },
    {
        "input": "[struct _ sep0] What is the document id , template id and description for document named ' Robbin CV ' and with description with the letter ' w ' in it ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Robbin CV ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Template_ID , documents.Document_Description from ref_template_types  where  documents.Document_Name = \"Robbin CV\"  and  documents.Document_Description like \"%w%\" "
    },
    {
        "input": "[struct _ sep0] What is the document id , template id and description for document named ' Robbin CV ' or with description with the letter ' w ' in it ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Robbin CV ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Template_ID , documents.Document_Description from ref_template_types  where  documents.Document_Name = \"Robbin CV\"  or  documents.Document_Description like \"%w%\" "
    },
    {
        "input": "[struct _ sep0] Return the document id , template id , and description for the document with the name Robbin CV and with description with the letter ' w ' in it ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Robbin CV ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Template_ID , documents.Document_Description from ref_template_types  where  documents.Document_Name = \"Robbin CV\"  and  documents.Document_Description like \"%w%\" "
    },
    {
        "input": "[struct _ sep0] Return the document id , template id , and description for the document with the name Robbin CV or with description with the letter ' w ' in it ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Robbin CV ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Template_ID , documents.Document_Description from ref_template_types  where  documents.Document_Name = \"Robbin CV\"  or  documents.Document_Description like \"%w%\" "
    },
    {
        "input": "[struct _ sep0] Count the number of different templates used for documents , with description with the letter ' w ' in it ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count (  distinct documents.Template_ID )  from ref_template_types  where  documents.Document_Description like \"%w%\" "
    },
    {
        "input": "[struct _ sep0] How many documents are using the template with type code ' PPT ' and with description with the letter ' w ' in it ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( documents.* )  from ref_template_types  where  templates.Template_Type_Code = \"PPT\"  and  documents.Document_Description like \"%w%\" "
    },
    {
        "input": "[struct _ sep0] How many documents are using the template with type code ' PPT ' or with description with the letter ' w ' in it ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( documents.* )  from ref_template_types  where  templates.Template_Type_Code = \"PPT\"  or  documents.Document_Description like \"%w%\" "
    },
    {
        "input": "[struct _ sep0] How many paragraphs for the document with name ' Summer Show ' and with description with the letter ' w ' in it ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Summer Show ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( paragraphs.* )  from ref_template_types  where  documents.Document_Name = \"Summer Show\"  and  documents.Document_Description like \"%w%\" "
    },
    {
        "input": "[struct _ sep0] How many paragraphs for the document with name ' Summer Show ' or with description with the letter ' w ' in it ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Summer Show ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( paragraphs.* )  from ref_template_types  where  documents.Document_Name = \"Summer Show\"  or  documents.Document_Description like \"%w%\" "
    },
    {
        "input": "[struct _ sep0] Count the number of paragraphs in the document named ' Summer Show ' and with description with the letter ' w ' in it ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Summer Show ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( paragraphs.* )  from ref_template_types  where  documents.Document_Name = \"Summer Show\"  and  documents.Document_Description like \"%w%\" "
    },
    {
        "input": "[struct _ sep0] Count the number of paragraphs in the document named ' Summer Show ' or with description with the letter ' w ' in it ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Summer Show ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( paragraphs.* )  from ref_template_types  where  documents.Document_Name = \"Summer Show\"  or  documents.Document_Description like \"%w%\" "
    },
    {
        "input": "[struct _ sep0] Show all paragraph ids and texts for the document with name ' Welcome to NY ' and with description with the letter ' w ' in it ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Welcome to NY ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Paragraph_ID , paragraphs.Paragraph_Text from ref_template_types  where  documents.Document_Name = \"Welcome to NY\"  and  documents.Document_Description like \"%w%\" "
    },
    {
        "input": "[struct _ sep0] Show all paragraph ids and texts for the document with name ' Welcome to NY ' or with description with the letter ' w ' in it ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Welcome to NY ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Paragraph_ID , paragraphs.Paragraph_Text from ref_template_types  where  documents.Document_Name = \"Welcome to NY\"  or  documents.Document_Description like \"%w%\" "
    },
    {
        "input": "[struct _ sep0] What are the ids and texts of paragraphs in the document titled ' Welcome to NY ' and with description with the letter ' w ' in it ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Welcome to NY ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Paragraph_ID , paragraphs.Paragraph_Text from ref_template_types  where  documents.Document_Name = \"Welcome to NY\"  and  documents.Document_Description like \"%w%\" "
    },
    {
        "input": "[struct _ sep0] What are the ids and texts of paragraphs in the document titled ' Welcome to NY ' or with description with the letter ' w ' in it ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Welcome to NY ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Paragraph_ID , paragraphs.Paragraph_Text from ref_template_types  where  documents.Document_Name = \"Welcome to NY\"  or  documents.Document_Description like \"%w%\" "
    },
    {
        "input": "[struct _ sep0] What are the paragraph texts for the document with the name ' Customer reviews ' and with description with the letter ' w ' in it ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Customer reviews ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Paragraph_Text from ref_template_types  where  documents.Document_Name = \"Customer reviews\"  and  documents.Document_Description like \"%w%\" "
    },
    {
        "input": "[struct _ sep0] What are the paragraph texts for the document with the name ' Customer reviews ' or with description with the letter ' w ' in it ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Customer reviews ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Paragraph_Text from ref_template_types  where  documents.Document_Name = \"Customer reviews\"  or  documents.Document_Description like \"%w%\" "
    },
    {
        "input": "[struct _ sep0] What is the document id and name with greatest number of paragraphs and with description with the letter ' w ' in it ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Document_Name from ref_template_types  where  documents.Document_Description like \"%w%\"  group by paragraphs.Document_ID  order by count ( paragraphs.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Return the id and name of the document with the most paragraphs and with description with the letter ' w ' in it ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Document_Name from ref_template_types  where  documents.Document_Description like \"%w%\"  group by paragraphs.Document_ID  order by count ( paragraphs.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Count the number of documents , that contain the letter w in their description . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( documents.* )  from ref_template_types  where  documents.Document_Description like \"%w%\" "
    },
    {
        "input": "[struct _ sep0] List document IDs , document names , and document descriptions for all documents , that contain the letter w in their description . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Document_Name , documents.Document_Description from ref_template_types  where  documents.Document_Description like \"%w%\" "
    },
    {
        "input": "[struct _ sep0] What are the ids , names , and descriptions for all documents , that contain the letter w in their description . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Document_Name , documents.Document_Description from ref_template_types  where  documents.Document_Description like \"%w%\" "
    },
    {
        "input": "[struct _ sep0] Count the number of different templates used for documents , that contain the letter w in their description . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count (  distinct documents.Template_ID )  from ref_template_types  where  documents.Document_Description like \"%w%\" "
    },
    {
        "input": "[struct _ sep0] Count the number of documents that use the PPT template type and that contain the letter w in their description . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( documents.* )  from ref_template_types  where  templates.Template_Type_Code = \"PPT\"  and  documents.Document_Description like \"%w%\" "
    },
    {
        "input": "[struct _ sep0] Count the number of documents that use the PPT template type or that contain the letter w in their description . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( documents.* )  from ref_template_types  where  templates.Template_Type_Code = \"PPT\"  or  documents.Document_Description like \"%w%\" "
    },
    {
        "input": "[struct _ sep0] Show ids for all templates that are used by more than one document and that contain the letter w in their description . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Template_ID from ref_template_types  where  count ( documents.* )  > 1  and  documents.Document_Description like \"%w%\"  group by documents.Template_ID "
    },
    {
        "input": "[struct _ sep0] Show ids for all templates that are used by more than one document or that contain the letter w in their description . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Template_ID from ref_template_types  where  count ( documents.* )  > 1  or  documents.Document_Description like \"%w%\"  group by documents.Template_ID "
    },
    {
        "input": "[struct _ sep0] Return the template type code of the template that is used by a document named Data base and that contain the letter w in their description . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  documents.Document_Name = \"Data base\"  and  documents.Document_Description like \"%w%\" "
    },
    {
        "input": "[struct _ sep0] Return the template type code of the template that is used by a document named Data base or that contain the letter w in their description . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  documents.Document_Name = \"Data base\"  or  documents.Document_Description like \"%w%\" "
    },
    {
        "input": "[struct _ sep0] What are the names of documents that use templates with the code BK and that contain the letter w in their description . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( BK ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( BK ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_Name from ref_template_types  where  templates.Template_Type_Code = \"BK\"  and  documents.Document_Description like \"%w%\" "
    },
    {
        "input": "[struct _ sep0] What are the names of documents that use templates with the code BK or that contain the letter w in their description . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( BK ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( BK ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_Name from ref_template_types  where  templates.Template_Type_Code = \"BK\"  or  documents.Document_Description like \"%w%\" "
    },
    {
        "input": "[struct _ sep0] Count the number of documents that named ' Robbin CV ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Robbin CV ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( documents.* )  from ref_template_types  where  documents.Document_Name = \"Robbin CV\" "
    },
    {
        "input": "[struct _ sep0] List document IDs , document names , and document descriptions for all documents that named ' Robbin CV ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Robbin CV ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Document_Name , documents.Document_Description from ref_template_types  where  documents.Document_Name = \"Robbin CV\" "
    },
    {
        "input": "[struct _ sep0] What are the ids , names , and descriptions for all documents that named ' Robbin CV ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Robbin CV ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Document_Name , documents.Document_Description from ref_template_types  where  documents.Document_Name = \"Robbin CV\" "
    },
    {
        "input": "[struct _ sep0] What is the document name and template id for document with description with the letter ' w ' in it and named ' Robbin CV ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Robbin CV ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_Name , documents.Template_ID from ref_template_types  where  documents.Document_Description like \"%w%\"  and  documents.Document_Name = \"Robbin CV\" "
    },
    {
        "input": "[struct _ sep0] What is the document name and template id for document with description with the letter ' w ' in it or named ' Robbin CV ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Robbin CV ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_Name , documents.Template_ID from ref_template_types  where  documents.Document_Description like \"%w%\"  or  documents.Document_Name = \"Robbin CV\" "
    },
    {
        "input": "[struct _ sep0] Count the number of different templates used for documents that named ' Robbin CV ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Robbin CV ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count (  distinct documents.Template_ID )  from ref_template_types  where  documents.Document_Name = \"Robbin CV\" "
    },
    {
        "input": "[struct _ sep0] How many documents are using the template with type code ' PPT ' and named ' Robbin CV ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( PPT, CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Robbin CV ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( documents.* )  from ref_template_types  where  templates.Template_Type_Code = \"PPT\"  and  documents.Document_Name = \"Robbin CV\" "
    },
    {
        "input": "[struct _ sep0] How many documents are using the template with type code ' PPT ' or named ' Robbin CV ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( PPT, CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Robbin CV ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( documents.* )  from ref_template_types  where  templates.Template_Type_Code = \"PPT\"  or  documents.Document_Name = \"Robbin CV\" "
    },
    {
        "input": "[struct _ sep0] What are the template ids of any templates used in more than a single document and named ' Robbin CV ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Robbin CV ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Template_ID from ref_template_types  where  count ( documents.* )  > 1  and  documents.Document_Name = \"Robbin CV\"  group by documents.Template_ID "
    },
    {
        "input": "[struct _ sep0] What are the template ids of any templates used in more than a single document or named ' Robbin CV ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Robbin CV ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Template_ID from ref_template_types  where  count ( documents.* )  > 1  or  documents.Document_Name = \"Robbin CV\"  group by documents.Template_ID "
    },
    {
        "input": "[struct _ sep0] Show all document names using templates with template type code BK and named ' Robbin CV ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV, BK ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV, BK ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Robbin CV ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_Name from ref_template_types  where  templates.Template_Type_Code = \"BK\"  and  documents.Document_Name = \"Robbin CV\" "
    },
    {
        "input": "[struct _ sep0] Show all document names using templates with template type code BK or named ' Robbin CV ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV, BK ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV, BK ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Robbin CV ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_Name from ref_template_types  where  templates.Template_Type_Code = \"BK\"  or  documents.Document_Name = \"Robbin CV\" "
    },
    {
        "input": "[struct _ sep0] Return the id and name of the document with the most paragraphs and named ' Robbin CV ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Robbin CV ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Document_Name from ref_template_types  where  documents.Document_Name = \"Robbin CV\"  group by paragraphs.Document_ID  order by count ( paragraphs.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Count the number of documents , with the name Robbin CV . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Robbin CV ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( documents.* )  from ref_template_types  where  documents.Document_Name = \"Robbin CV\" "
    },
    {
        "input": "[struct _ sep0] List document IDs , document names , and document descriptions for all documents , with the name Robbin CV . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Robbin CV ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Document_Name , documents.Document_Description from ref_template_types  where  documents.Document_Name = \"Robbin CV\" "
    },
    {
        "input": "[struct _ sep0] What are the ids , names , and descriptions for all documents , with the name Robbin CV . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Robbin CV ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Document_Name , documents.Document_Description from ref_template_types  where  documents.Document_Name = \"Robbin CV\" "
    },
    {
        "input": "[struct _ sep0] What is the document name and template id for document with description with the letter ' w ' in it and with the name Robbin CV . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Robbin CV ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_Name , documents.Template_ID from ref_template_types  where  documents.Document_Description like \"%w%\"  and  documents.Document_Name = \"Robbin CV\" "
    },
    {
        "input": "[struct _ sep0] What is the document name and template id for document with description with the letter ' w ' in it or with the name Robbin CV . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Robbin CV ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_Name , documents.Template_ID from ref_template_types  where  documents.Document_Description like \"%w%\"  or  documents.Document_Name = \"Robbin CV\" "
    },
    {
        "input": "[struct _ sep0] Count the number of different templates used for documents , with the name Robbin CV . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Robbin CV ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count (  distinct documents.Template_ID )  from ref_template_types  where  documents.Document_Name = \"Robbin CV\" "
    },
    {
        "input": "[struct _ sep0] How many documents are using the template with type code ' PPT ' and with the name Robbin CV . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( PPT, CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Robbin CV ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( documents.* )  from ref_template_types  where  templates.Template_Type_Code = \"PPT\"  and  documents.Document_Name = \"Robbin CV\" "
    },
    {
        "input": "[struct _ sep0] How many documents are using the template with type code ' PPT ' or with the name Robbin CV . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( PPT, CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Robbin CV ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( documents.* )  from ref_template_types  where  templates.Template_Type_Code = \"PPT\"  or  documents.Document_Name = \"Robbin CV\" "
    },
    {
        "input": "[struct _ sep0] What is the document id and name with greatest number of paragraphs and with the name Robbin CV . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Robbin CV ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Document_Name from ref_template_types  where  documents.Document_Name = \"Robbin CV\"  group by paragraphs.Document_ID  order by count ( paragraphs.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Return the id and name of the document with the most paragraphs and with the name Robbin CV . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Robbin CV ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Document_Name from ref_template_types  where  documents.Document_Name = \"Robbin CV\"  group by paragraphs.Document_ID  order by count ( paragraphs.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Count the number of documents that are using the template with type code ' PPT ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( documents.* )  from ref_template_types  where  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] List document IDs , document names , and document descriptions for all documents that are using the template with type code ' PPT ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Document_Name , documents.Document_Description from ref_template_types  where  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] What are the ids , names , and descriptions for all documents that are using the template with type code ' PPT ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Document_Name , documents.Document_Description from ref_template_types  where  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] What is the document name and template id for document with description with the letter ' w ' in it and are using the template with type code ' PPT ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_Name , documents.Template_ID from ref_template_types  where  documents.Document_Description like \"%w%\"  and  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] What is the document name and template id for document with description with the letter ' w ' in it or are using the template with type code ' PPT ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_Name , documents.Template_ID from ref_template_types  where  documents.Document_Description like \"%w%\"  or  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] What is the document id , template id and description for document named ' Robbin CV ' and are using the template with type code ' PPT ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( PPT, CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Robbin CV ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Template_ID , documents.Document_Description from ref_template_types  where  documents.Document_Name = \"Robbin CV\"  and  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] What is the document id , template id and description for document named ' Robbin CV ' or are using the template with type code ' PPT ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( PPT, CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Robbin CV ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Template_ID , documents.Document_Description from ref_template_types  where  documents.Document_Name = \"Robbin CV\"  or  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] Return the document id , template id , and description for the document with the name Robbin CV and are using the template with type code ' PPT ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( PPT, CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Robbin CV ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Template_ID , documents.Document_Description from ref_template_types  where  documents.Document_Name = \"Robbin CV\"  and  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] Return the document id , template id , and description for the document with the name Robbin CV or are using the template with type code ' PPT ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( PPT, CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Robbin CV ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Template_ID , documents.Document_Description from ref_template_types  where  documents.Document_Name = \"Robbin CV\"  or  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] Count the number of different templates used for documents that are using the template with type code ' PPT ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count (  distinct documents.Template_ID )  from ref_template_types  where  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] What are the template ids of any templates used in more than a single document and are using the template with type code ' PPT ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Template_ID from ref_template_types  where  count ( documents.* )  > 1  and  templates.Template_Type_Code = \"PPT\"  group by documents.Template_ID "
    },
    {
        "input": "[struct _ sep0] What are the template ids of any templates used in more than a single document or are using the template with type code ' PPT ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Template_ID from ref_template_types  where  count ( documents.* )  > 1  or  templates.Template_Type_Code = \"PPT\"  group by documents.Template_ID "
    },
    {
        "input": "[struct _ sep0] Return the id and name of the document with the most paragraphs and are using the template with type code ' PPT ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Document_Name from ref_template_types  where  templates.Template_Type_Code = \"PPT\"  group by paragraphs.Document_ID  order by count ( paragraphs.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Count the number of documents , that use the PPT template type . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( documents.* )  from ref_template_types  where  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] List document IDs , document names , and document descriptions for all documents , that use the PPT template type . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Document_Name , documents.Document_Description from ref_template_types  where  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] What are the ids , names , and descriptions for all documents , that use the PPT template type . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Document_Name , documents.Document_Description from ref_template_types  where  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] Return the names and template ids for documents that contain the letter w in their description and that use the PPT template type . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_Name , documents.Template_ID from ref_template_types  where  documents.Document_Description like \"%w%\"  and  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] Return the names and template ids for documents that contain the letter w in their description or that use the PPT template type . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_Name , documents.Template_ID from ref_template_types  where  documents.Document_Description like \"%w%\"  or  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] Count the number of different templates used for documents , that use the PPT template type . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count (  distinct documents.Template_ID )  from ref_template_types  where  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] Show ids for all templates that are used by more than one document and that use the PPT template type . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Template_ID from ref_template_types  where  count ( documents.* )  > 1  and  templates.Template_Type_Code = \"PPT\"  group by documents.Template_ID "
    },
    {
        "input": "[struct _ sep0] Show ids for all templates that are used by more than one document or that use the PPT template type . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Template_ID from ref_template_types  where  count ( documents.* )  > 1  or  templates.Template_Type_Code = \"PPT\"  group by documents.Template_ID "
    },
    {
        "input": "[struct _ sep0] What are the codes of template types that have fewer than 3 templates and that use the PPT template type . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  count ( templates.* )  < 3  and  templates.Template_Type_Code = \"PPT\"  group by templates.Template_Type_Code "
    },
    {
        "input": "[struct _ sep0] What are the codes of template types that have fewer than 3 templates or that use the PPT template type . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  count ( templates.* )  < 3  or  templates.Template_Type_Code = \"PPT\"  group by templates.Template_Type_Code "
    },
    {
        "input": "[struct _ sep0] Show all template ids and number of documents using each template , that are used by more than one document . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Template_ID , count ( documents.* )  from ref_template_types  where  count ( documents.* )  > 1  group by documents.Template_ID "
    },
    {
        "input": "[struct _ sep0] Show all template ids and number of documents using each template that used in more than a single document ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Template_ID , count ( documents.* )  from ref_template_types  where  count ( documents.* )  > 1  group by documents.Template_ID "
    },
    {
        "input": "[struct _ sep0] Show template ids , version numbers , and template type codes for all templates , not used by any document . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID , templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  except_  @.@ is documents.* "
    },
    {
        "input": "[struct _ sep0] What are the ids , version numbers , and type codes for each template , not used by any document . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID , templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  except_  @.@ is documents.* "
    },
    {
        "input": "[struct _ sep0] Show all distinct template type codes for all templates , not used by any document . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select  distinct templates.Template_Type_Code from ref_template_types  where  except_  @.@ is documents.* "
    },
    {
        "input": "[struct _ sep0] What is the version number and template type code for the template with version number later than 5 and not used by any document . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5  except_  @.@ join documents.* "
    },
    {
        "input": "[struct _ sep0] What is the version number and template type code for the template with version number later than 5 or not used by any document . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5  except_  @.@ join documents.* "
    },
    {
        "input": "[struct _ sep0] Return the version numbers and template type codes of templates with a version number greater than 5 and not used by any document . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5  except_  @.@ join documents.* "
    },
    {
        "input": "[struct _ sep0] Return the version numbers and template type codes of templates with a version number greater than 5 or not used by any document . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5  except_  @.@ join documents.* "
    },
    {
        "input": "[struct _ sep0] Return the ids corresponding to templates with the description ' Presentation ' and not used by any document . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  ref_template_types.Template_Type_Description = \"Presentation\"  except_  @.@ join documents.* "
    },
    {
        "input": "[struct _ sep0] Return the ids corresponding to templates with the description ' Presentation ' or not used by any document . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  ref_template_types.Template_Type_Description = \"Presentation\"  except_  @.@ join documents.* "
    },
    {
        "input": "[struct _ sep0] Show template ids , version numbers , and template type codes for all templates , that are not used in any documents ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID , templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  except_  @.@ is documents.* "
    },
    {
        "input": "[struct _ sep0] What are the ids , version numbers , and type codes for each template , that are not used in any documents ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID , templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  except_  @.@ is documents.* "
    },
    {
        "input": "[struct _ sep0] Show all distinct template type codes for all templates , that are not used in any documents ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select  distinct templates.Template_Type_Code from ref_template_types  where  except_  @.@ is documents.* "
    },
    {
        "input": "[struct _ sep0] What are the codes of template types that have fewer than 3 templates and that are not used in any documents ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  count ( templates.* )  < 3  except_  @.@ join documents.*  group by templates.Template_Type_Code "
    },
    {
        "input": "[struct _ sep0] What are the codes of template types that have fewer than 3 templates or that are not used in any documents ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  count ( templates.* )  < 3  except_  @.@ join documents.*  group by templates.Template_Type_Code "
    },
    {
        "input": "[struct _ sep0] Count the number of templates , with template type code PP or PPT ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, PP ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT, PP ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( templates.* )  from ref_template_types  where  templates.Template_Type_Code = \"PP\"  or  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] Show template ids , version numbers , and template type codes for all templates , with template type code PP or PPT ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, PP ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT, PP ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID , templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  templates.Template_Type_Code = \"PP\"  or  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] What are the ids , version numbers , and type codes for each template , with template type code PP or PPT ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, PP ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT, PP ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID , templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  templates.Template_Type_Code = \"PP\"  or  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] Show all distinct template type codes for all templates , with template type code PP or PPT ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, PP ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT, PP ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select  distinct templates.Template_Type_Code from ref_template_types  where  templates.Template_Type_Code = \"PP\"  or  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] What is the version number and template type code for the template with version number later than 5 and with template type code PP or PPT ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, PP ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT, PP ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5  and  templates.Template_Type_Code = \"PP\"  or  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] Return the version numbers and template type codes of templates with a version number greater than 5 and with template type code PP or PPT ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, PP ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT, PP ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5  and  templates.Template_Type_Code = \"PP\"  or  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] Show all template type codes with less than three templates and with template type code PP or PPT ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, PP ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT, PP ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  count ( templates.* )  < 3  and  templates.Template_Type_Code = \"PP\"  or  templates.Template_Type_Code = \"PPT\"  group by templates.Template_Type_Code "
    },
    {
        "input": "[struct _ sep0] What is the template type code of the template used by document with the name ' Data base ' and with template type code PP or PPT ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, PP ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT, PP ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  documents.Document_Name = \"Data base\"  and  templates.Template_Type_Code = \"PP\"  or  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] What are the template ids with template type description ' Presentation ' and with template type code PP or PPT ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, PP ), template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code ( PPT, PP ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  ref_template_types.Template_Type_Description = \"Presentation\"  and  templates.Template_Type_Code = \"PP\"  or  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] Return the ids corresponding to templates with the description ' Presentation ' and with template type code PP or PPT ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, PP ), template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code ( PPT, PP ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  ref_template_types.Template_Type_Description = \"Presentation\"  and  templates.Template_Type_Code = \"PP\"  or  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] Count the number of templates , that have the code PP or PPT . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, PP ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT, PP ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( templates.* )  from ref_template_types  where  templates.Template_Type_Code = \"PP\"  or  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] Show template ids , version numbers , and template type codes for all templates , that have the code PP or PPT . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, PP ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT, PP ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID , templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  templates.Template_Type_Code = \"PP\"  or  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] What are the ids , version numbers , and type codes for each template , that have the code PP or PPT . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, PP ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT, PP ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID , templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  templates.Template_Type_Code = \"PP\"  or  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] Show all distinct template type codes for all templates , that have the code PP or PPT . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, PP ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT, PP ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select  distinct templates.Template_Type_Code from ref_template_types  where  templates.Template_Type_Code = \"PP\"  or  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] What are the codes of template types that have fewer than 3 templates and that have the code PP or PPT . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, PP ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT, PP ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  count ( templates.* )  < 3  and  templates.Template_Type_Code = \"PP\"  or  templates.Template_Type_Code = \"PPT\"  group by templates.Template_Type_Code "
    },
    {
        "input": "[struct _ sep0] Return the template type code of the template that is used by a document named Data base and that have the code PP or PPT . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( PPT, PP ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( PPT, PP ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  documents.Document_Name = \"Data base\"  and  templates.Template_Type_Code = \"PP\"  or  templates.Template_Type_Code = \"PPT\" "
    },
    {
        "input": "[struct _ sep0] What is the id and type code for the template used by the most documents and have template type code CV ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID , templates.Template_Type_Code from ref_template_types  where  templates.Template_Type_Code = \"CV\"  group by documents.Template_ID  order by count ( documents.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Count the number of templates that have template type code CV ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( templates.* )  from ref_template_types  where  templates.Template_Type_Code = \"CV\" "
    },
    {
        "input": "[struct _ sep0] Show template ids , version numbers , and template type codes for all templates that have template type code CV ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID , templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  templates.Template_Type_Code = \"CV\" "
    },
    {
        "input": "[struct _ sep0] What are the ids , version numbers , and type codes for each template that have template type code CV ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID , templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  templates.Template_Type_Code = \"CV\" "
    },
    {
        "input": "[struct _ sep0] Show all distinct template type codes for all templates that have template type code CV ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select  distinct templates.Template_Type_Code from ref_template_types  where  templates.Template_Type_Code = \"CV\" "
    },
    {
        "input": "[struct _ sep0] What is the version number and template type code for the template with version number later than 5 and have template type code CV ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5  and  templates.Template_Type_Code = \"CV\" "
    },
    {
        "input": "[struct _ sep0] What is the version number and template type code for the template with version number later than 5 or have template type code CV ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5  or  templates.Template_Type_Code = \"CV\" "
    },
    {
        "input": "[struct _ sep0] Return the version numbers and template type codes of templates with a version number greater than 5 and have template type code CV ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5  and  templates.Template_Type_Code = \"CV\" "
    },
    {
        "input": "[struct _ sep0] Return the version numbers and template type codes of templates with a version number greater than 5 or have template type code CV ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5  or  templates.Template_Type_Code = \"CV\" "
    },
    {
        "input": "[struct _ sep0] Which template type code has most number of templates and have template type code CV ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  templates.Template_Type_Code = \"CV\"  group by templates.Template_Type_Code  order by count ( templates.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the template type code of the template used by document with the name ' Data base ' and have template type code CV ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  documents.Document_Name = \"Data base\"  and  templates.Template_Type_Code = \"CV\" "
    },
    {
        "input": "[struct _ sep0] What is the template type code of the template used by document with the name ' Data base ' or have template type code CV ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  documents.Document_Name = \"Data base\"  or  templates.Template_Type_Code = \"CV\" "
    },
    {
        "input": "[struct _ sep0] Which template type code is used by most number of documents and have template type code CV ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  templates.Template_Type_Code = \"CV\"  group by templates.Template_Type_Code  order by count ( documents.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Return the ids corresponding to templates with the description ' Presentation ' and have template type code CV ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( Presentation, CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  ref_template_types.Template_Type_Description = \"Presentation\"  and  templates.Template_Type_Code = \"CV\" "
    },
    {
        "input": "[struct _ sep0] Return the ids corresponding to templates with the description ' Presentation ' or have template type code CV ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( Presentation, CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  ref_template_types.Template_Type_Description = \"Presentation\"  or  templates.Template_Type_Code = \"CV\" "
    },
    {
        "input": "[struct _ sep0] What is the id and type code for the template used by the most documents and with version number later than 5 ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID , templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5  group by documents.Template_ID  order by count ( documents.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Count the number of templates , with version number later than 5 ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( templates.* )  from ref_template_types  where  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] Show template ids , version numbers , and template type codes for all templates , with version number later than 5 ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID , templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] What are the ids , version numbers , and type codes for each template , with version number later than 5 ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID , templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] Show all distinct template type codes for all templates , with version number later than 5 ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select  distinct templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] How many templates have template type code CV and with version number later than 5 ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( templates.* )  from ref_template_types  where  templates.Template_Type_Code = \"CV\"  and  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] How many templates have template type code CV or with version number later than 5 ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( templates.* )  from ref_template_types  where  templates.Template_Type_Code = \"CV\"  or  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] Show all template type codes with less than three templates and with version number later than 5 ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  count ( templates.* )  < 3  and  templates.Version_Number > 5  group by templates.Template_Type_Code "
    },
    {
        "input": "[struct _ sep0] Show all template type codes with less than three templates or with version number later than 5 ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  count ( templates.* )  < 3  or  templates.Version_Number > 5  group by templates.Template_Type_Code "
    },
    {
        "input": "[struct _ sep0] What is the template type code of the template used by document with the name ' Data base ' and with version number later than 5 ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  documents.Document_Name = \"Data base\"  and  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] What is the template type code of the template used by document with the name ' Data base ' or with version number later than 5 ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  documents.Document_Name = \"Data base\"  or  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] What are the template ids with template type description ' Presentation ' and with version number later than 5 ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  ref_template_types.Template_Type_Description = \"Presentation\"  and  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] What are the template ids with template type description ' Presentation ' or with version number later than 5 ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  ref_template_types.Template_Type_Description = \"Presentation\"  or  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] Return the ids corresponding to templates with the description ' Presentation ' and with version number later than 5 ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  ref_template_types.Template_Type_Description = \"Presentation\"  and  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] Return the ids corresponding to templates with the description ' Presentation ' or with version number later than 5 ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  ref_template_types.Template_Type_Description = \"Presentation\"  or  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] What is the id and type code for the template used by the most documents and with a version number greater than 5 . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID , templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5  group by documents.Template_ID  order by count ( documents.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Count the number of templates , with a version number greater than 5 . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( templates.* )  from ref_template_types  where  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] Show template ids , version numbers , and template type codes for all templates , with a version number greater than 5 . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID , templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] What are the ids , version numbers , and type codes for each template , with a version number greater than 5 . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID , templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] Show all distinct template type codes for all templates , with a version number greater than 5 . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select  distinct templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] How many templates have template type code CV and with a version number greater than 5 . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( templates.* )  from ref_template_types  where  templates.Template_Type_Code = \"CV\"  and  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] How many templates have template type code CV or with a version number greater than 5 . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( templates.* )  from ref_template_types  where  templates.Template_Type_Code = \"CV\"  or  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] Show all template type codes with less than three templates and with a version number greater than 5 . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  count ( templates.* )  < 3  and  templates.Version_Number > 5  group by templates.Template_Type_Code "
    },
    {
        "input": "[struct _ sep0] Show all template type codes with less than three templates or with a version number greater than 5 . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  count ( templates.* )  < 3  or  templates.Version_Number > 5  group by templates.Template_Type_Code "
    },
    {
        "input": "[struct _ sep0] What is the template type code of the template used by document with the name ' Data base ' and with a version number greater than 5 . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  documents.Document_Name = \"Data base\"  and  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] What is the template type code of the template used by document with the name ' Data base ' or with a version number greater than 5 . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  documents.Document_Name = \"Data base\"  or  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] What are the template ids with template type description ' Presentation ' and with a version number greater than 5 . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  ref_template_types.Template_Type_Description = \"Presentation\"  and  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] What are the template ids with template type description ' Presentation ' or with a version number greater than 5 . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  ref_template_types.Template_Type_Description = \"Presentation\"  or  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] Return the ids corresponding to templates with the description ' Presentation ' and with a version number greater than 5 . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  ref_template_types.Template_Type_Description = \"Presentation\"  and  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] Return the ids corresponding to templates with the description ' Presentation ' or with a version number greater than 5 . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  ref_template_types.Template_Type_Description = \"Presentation\"  or  templates.Version_Number > 5 "
    },
    {
        "input": "[struct _ sep0] Return the template type code of the template that is used by a document named Data base and that have fewer than 3 templates ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  documents.Document_Name = \"Data base\"  and  count ( templates.* )  < 3  group by templates.Template_Type_Code "
    },
    {
        "input": "[struct _ sep0] Return the template type code of the template that is used by a document named Data base or that have fewer than 3 templates ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  documents.Document_Name = \"Data base\"  or  count ( templates.* )  < 3  group by templates.Template_Type_Code "
    },
    {
        "input": "[struct _ sep0] What is the id and type code for the template used by the most documents and used by document with the name ' Data base ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID , templates.Template_Type_Code from ref_template_types  where  documents.Document_Name = \"Data base\"  group by documents.Template_ID  order by count ( documents.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the template ids of any templates used in more than a single document and used by document with the name ' Data base ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Template_ID from ref_template_types  where  count ( documents.* )  > 1  and  documents.Document_Name = \"Data base\"  group by documents.Template_ID "
    },
    {
        "input": "[struct _ sep0] What are the template ids of any templates used in more than a single document or used by document with the name ' Data base ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Template_ID from ref_template_types  where  count ( documents.* )  > 1  or  documents.Document_Name = \"Data base\"  group by documents.Template_ID "
    },
    {
        "input": "[struct _ sep0] Count the number of templates that used by document with the name ' Data base ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( templates.* )  from ref_template_types  where  documents.Document_Name = \"Data base\" "
    },
    {
        "input": "[struct _ sep0] Show template ids , version numbers , and template type codes for all templates that used by document with the name ' Data base ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID , templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  documents.Document_Name = \"Data base\" "
    },
    {
        "input": "[struct _ sep0] What are the ids , version numbers , and type codes for each template that used by document with the name ' Data base ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID , templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  documents.Document_Name = \"Data base\" "
    },
    {
        "input": "[struct _ sep0] Show all distinct template type codes for all templates that used by document with the name ' Data base ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select  distinct templates.Template_Type_Code from ref_template_types  where  documents.Document_Name = \"Data base\" "
    },
    {
        "input": "[struct _ sep0] How many templates have template type code CV and used by document with the name ' Data base ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( templates.* )  from ref_template_types  where  templates.Template_Type_Code = \"CV\"  and  documents.Document_Name = \"Data base\" "
    },
    {
        "input": "[struct _ sep0] What is the version number and template type code for the template with version number later than 5 and used by document with the name ' Data base ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5  and  documents.Document_Name = \"Data base\" "
    },
    {
        "input": "[struct _ sep0] What is the version number and template type code for the template with version number later than 5 or used by document with the name ' Data base ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5  or  documents.Document_Name = \"Data base\" "
    },
    {
        "input": "[struct _ sep0] Return the version numbers and template type codes of templates with a version number greater than 5 and used by document with the name ' Data base ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5  and  documents.Document_Name = \"Data base\" "
    },
    {
        "input": "[struct _ sep0] Return the version numbers and template type codes of templates with a version number greater than 5 or used by document with the name ' Data base ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5  or  documents.Document_Name = \"Data base\" "
    },
    {
        "input": "[struct _ sep0] Which template type code has most number of templates and used by document with the name ' Data base ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  documents.Document_Name = \"Data base\"  group by templates.Template_Type_Code  order by count ( templates.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Which template type code is used by most number of documents and used by document with the name ' Data base ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  documents.Document_Name = \"Data base\"  group by templates.Template_Type_Code  order by count ( documents.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Return the ids corresponding to templates with the description ' Presentation ' and used by document with the name ' Data base ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  ref_template_types.Template_Type_Description = \"Presentation\"  and  documents.Document_Name = \"Data base\" "
    },
    {
        "input": "[struct _ sep0] Return the ids corresponding to templates with the description ' Presentation ' or used by document with the name ' Data base ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  ref_template_types.Template_Type_Description = \"Presentation\"  or  documents.Document_Name = \"Data base\" "
    },
    {
        "input": "[struct _ sep0] Return the names and template ids for documents that contain the letter w in their description and that is used by a document named Data base . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_Name , documents.Template_ID from ref_template_types  where  documents.Document_Description like \"%w%\"  and  documents.Document_Name = \"Data base\" "
    },
    {
        "input": "[struct _ sep0] Return the names and template ids for documents that contain the letter w in their description or that is used by a document named Data base . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_Name , documents.Template_ID from ref_template_types  where  documents.Document_Description like \"%w%\"  or  documents.Document_Name = \"Data base\" "
    },
    {
        "input": "[struct _ sep0] Return the id and type code of the template that is used for the greatest number of documents and that is used by a document named Data base . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID , templates.Template_Type_Code from ref_template_types  where  documents.Document_Name = \"Data base\"  group by documents.Template_ID  order by count ( documents.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Show ids for all templates that are used by more than one document and that is used by a document named Data base . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Template_ID from ref_template_types  where  count ( documents.* )  > 1  and  documents.Document_Name = \"Data base\"  group by documents.Template_ID "
    },
    {
        "input": "[struct _ sep0] Show ids for all templates that are used by more than one document or that is used by a document named Data base . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Template_ID from ref_template_types  where  count ( documents.* )  > 1  or  documents.Document_Name = \"Data base\"  group by documents.Template_ID "
    },
    {
        "input": "[struct _ sep0] Count the number of templates , that is used by a document named Data base . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( templates.* )  from ref_template_types  where  documents.Document_Name = \"Data base\" "
    },
    {
        "input": "[struct _ sep0] Show template ids , version numbers , and template type codes for all templates , that is used by a document named Data base . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID , templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  documents.Document_Name = \"Data base\" "
    },
    {
        "input": "[struct _ sep0] What are the ids , version numbers , and type codes for each template , that is used by a document named Data base . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID , templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  documents.Document_Name = \"Data base\" "
    },
    {
        "input": "[struct _ sep0] Show all distinct template type codes for all templates , that is used by a document named Data base . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select  distinct templates.Template_Type_Code from ref_template_types  where  documents.Document_Name = \"Data base\" "
    },
    {
        "input": "[struct _ sep0] Return the type code of the template type that the most templates belong to and that is used by a document named Data base . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  documents.Document_Name = \"Data base\"  group by templates.Template_Type_Code  order by count ( templates.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the codes of template types that have fewer than 3 templates and that is used by a document named Data base . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  count ( templates.* )  < 3  and  documents.Document_Name = \"Data base\"  group by templates.Template_Type_Code "
    },
    {
        "input": "[struct _ sep0] What are the codes of template types that have fewer than 3 templates or that is used by a document named Data base . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  count ( templates.* )  < 3  or  documents.Document_Name = \"Data base\"  group by templates.Template_Type_Code "
    },
    {
        "input": "[struct _ sep0] Return the code of the template type that is most commonly used in documents and that is used by a document named Data base . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  documents.Document_Name = \"Data base\"  group by templates.Template_Type_Code  order by count ( documents.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the document id , template id and description for document named ' Robbin CV ' and using templates with template type code BK . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV, BK ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV, BK ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Robbin CV ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Template_ID , documents.Document_Description from ref_template_types  where  documents.Document_Name = \"Robbin CV\"  and  templates.Template_Type_Code = \"BK\" "
    },
    {
        "input": "[struct _ sep0] What is the document id , template id and description for document named ' Robbin CV ' or using templates with template type code BK . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV, BK ), template _ type _ description ( CV ) | templates : template _ id, version _ number, template _ type _ code ( CV, BK ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Robbin CV ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Template_ID , documents.Document_Description from ref_template_types  where  documents.Document_Name = \"Robbin CV\"  or  templates.Template_Type_Code = \"BK\" "
    },
    {
        "input": "[struct _ sep0] What are the template ids of any templates used in more than a single document and using templates with template type code BK . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( BK ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( BK ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Template_ID from ref_template_types  where  count ( documents.* )  > 1  and  templates.Template_Type_Code = \"BK\"  group by documents.Template_ID "
    },
    {
        "input": "[struct _ sep0] What are the template ids of any templates used in more than a single document or using templates with template type code BK . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( BK ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( BK ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Template_ID from ref_template_types  where  count ( documents.* )  > 1  or  templates.Template_Type_Code = \"BK\"  group by documents.Template_ID "
    },
    {
        "input": "[struct _ sep0] What is the document id and name with greatest number of paragraphs and using templates with template type code BK . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( BK ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( BK ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Document_Name from ref_template_types  where  templates.Template_Type_Code = \"BK\"  group by paragraphs.Document_ID  order by count ( paragraphs.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Count the number of documents , that use templates with the code BK ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( BK ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( BK ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( documents.* )  from ref_template_types  where  templates.Template_Type_Code = \"BK\" "
    },
    {
        "input": "[struct _ sep0] List document IDs , document names , and document descriptions for all documents , that use templates with the code BK ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( BK ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( BK ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Document_Name , documents.Document_Description from ref_template_types  where  templates.Template_Type_Code = \"BK\" "
    },
    {
        "input": "[struct _ sep0] What are the ids , names , and descriptions for all documents , that use templates with the code BK ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( BK ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( BK ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_ID , documents.Document_Name , documents.Document_Description from ref_template_types  where  templates.Template_Type_Code = \"BK\" "
    },
    {
        "input": "[struct _ sep0] Return the names and template ids for documents that contain the letter w in their description and that use templates with the code BK ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( BK ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( BK ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_Name , documents.Template_ID from ref_template_types  where  documents.Document_Description like \"%w%\"  and  templates.Template_Type_Code = \"BK\" "
    },
    {
        "input": "[struct _ sep0] Return the names and template ids for documents that contain the letter w in their description or that use templates with the code BK ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( BK ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( BK ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_Name , documents.Template_ID from ref_template_types  where  documents.Document_Description like \"%w%\"  or  templates.Template_Type_Code = \"BK\" "
    },
    {
        "input": "[struct _ sep0] Count the number of different templates used for documents , that use templates with the code BK ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( BK ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( BK ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count (  distinct documents.Template_ID )  from ref_template_types  where  templates.Template_Type_Code = \"BK\" "
    },
    {
        "input": "[struct _ sep0] Show ids for all templates that are used by more than one document and that use templates with the code BK ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( BK ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( BK ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Template_ID from ref_template_types  where  count ( documents.* )  > 1  and  templates.Template_Type_Code = \"BK\"  group by documents.Template_ID "
    },
    {
        "input": "[struct _ sep0] Show ids for all templates that are used by more than one document or that use templates with the code BK ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( BK ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( BK ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Template_ID from ref_template_types  where  count ( documents.* )  > 1  or  templates.Template_Type_Code = \"BK\"  group by documents.Template_ID "
    },
    {
        "input": "[struct _ sep0] What are the codes of template types that have fewer than 3 templates and that use templates with the code BK ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( BK ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( BK ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  count ( templates.* )  < 3  and  templates.Template_Type_Code = \"BK\"  group by templates.Template_Type_Code "
    },
    {
        "input": "[struct _ sep0] What are the codes of template types that have fewer than 3 templates or that use templates with the code BK ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( BK ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( BK ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  count ( templates.* )  < 3  or  templates.Template_Type_Code = \"BK\"  group by templates.Template_Type_Code "
    },
    {
        "input": "[struct _ sep0] What are the different template type codes , that are not used by any document . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select  distinct templates.Template_Type_Code from ref_template_types  where  except_  @.@ is documents.* "
    },
    {
        "input": "[struct _ sep0] What are the codes of template types that have fewer than 3 templates and that are not used by any document . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  count ( templates.* )  < 3  except_  @.@ join documents.*  group by templates.Template_Type_Code "
    },
    {
        "input": "[struct _ sep0] What are the codes of template types that have fewer than 3 templates or that are not used by any document . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  count ( templates.* )  < 3  except_  @.@ join documents.*  group by templates.Template_Type_Code "
    },
    {
        "input": "[struct _ sep0] What are the codes of template types that have fewer than 3 templates and that are not used for any document ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  count ( templates.* )  < 3  except_  @.@ join documents.*  group by templates.Template_Type_Code "
    },
    {
        "input": "[struct _ sep0] What are the codes of template types that have fewer than 3 templates or that are not used for any document ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  count ( templates.* )  < 3  except_  @.@ join documents.*  group by templates.Template_Type_Code "
    },
    {
        "input": "[struct _ sep0] What are the type codes and descriptions for all template types , with the code AD . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( AD ), template _ type _ description | templates : template _ id, version _ number, template _ type _ code ( AD ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select ref_template_types.Template_Type_Code , ref_template_types.Template_Type_Description from ref_template_types  where  ref_template_types.Template_Type_Code = \"AD\" "
    },
    {
        "input": "[struct _ sep0] Return the type code of the template type with the description ' Book ' and with the code AD . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( AD ), template _ type _ description ( Book ) | templates : template _ id, version _ number, template _ type _ code ( AD ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select ref_template_types.Template_Type_Code from ref_template_types  where  ref_template_types.Template_Type_Description = \"Book\"  and  ref_template_types.Template_Type_Code = \"AD\" "
    },
    {
        "input": "[struct _ sep0] Return the type code of the template type with the description ' Book ' or with the code AD . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( AD ), template _ type _ description ( Book ) | templates : template _ id, version _ number, template _ type _ code ( AD ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select ref_template_types.Template_Type_Code from ref_template_types  where  ref_template_types.Template_Type_Description = \"Book\"  or  ref_template_types.Template_Type_Code = \"AD\" "
    },
    {
        "input": "[struct _ sep0] What are the template ids with template type description ' Presentation ' and with the code AD . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( AD ), template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code ( AD ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  ref_template_types.Template_Type_Description = \"Presentation\"  and  ref_template_types.Template_Type_Code = \"AD\" "
    },
    {
        "input": "[struct _ sep0] What are the template ids with template type description ' Presentation ' or with the code AD . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( AD ), template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code ( AD ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  ref_template_types.Template_Type_Description = \"Presentation\"  or  ref_template_types.Template_Type_Code = \"AD\" "
    },
    {
        "input": "[struct _ sep0] Return the ids corresponding to templates with the description ' Presentation ' and with the code AD . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( AD ), template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code ( AD ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  ref_template_types.Template_Type_Description = \"Presentation\"  and  ref_template_types.Template_Type_Code = \"AD\" "
    },
    {
        "input": "[struct _ sep0] Return the ids corresponding to templates with the description ' Presentation ' or with the code AD . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( AD ), template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code ( AD ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID from ref_template_types  where  ref_template_types.Template_Type_Description = \"Presentation\"  or  ref_template_types.Template_Type_Code = \"AD\" "
    },
    {
        "input": "[struct _ sep0] What are the type codes and descriptions for all template types , with the description ' Book ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description ( Book ) | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select ref_template_types.Template_Type_Code , ref_template_types.Template_Type_Description from ref_template_types  where  ref_template_types.Template_Type_Description = \"Book\" "
    },
    {
        "input": "[struct _ sep0] Return the template type description of the template type with the code AD and with the description ' Book ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( AD ), template _ type _ description ( Book ) | templates : template _ id, version _ number, template _ type _ code ( AD ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select ref_template_types.Template_Type_Description from ref_template_types  where  ref_template_types.Template_Type_Code = \"AD\"  and  ref_template_types.Template_Type_Description = \"Book\" "
    },
    {
        "input": "[struct _ sep0] Return the template type description of the template type with the code AD or with the description ' Book ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( AD ), template _ type _ description ( Book ) | templates : template _ id, version _ number, template _ type _ code ( AD ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select ref_template_types.Template_Type_Description from ref_template_types  where  ref_template_types.Template_Type_Code = \"AD\"  or  ref_template_types.Template_Type_Description = \"Book\" "
    },
    {
        "input": "[struct _ sep0] What is the version number and template type code for the template with version number later than 5 and with template type description ' Presentation ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5  and  ref_template_types.Template_Type_Description = \"Presentation\" "
    },
    {
        "input": "[struct _ sep0] What is the version number and template type code for the template with version number later than 5 or with template type description ' Presentation ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5  or  ref_template_types.Template_Type_Description = \"Presentation\" "
    },
    {
        "input": "[struct _ sep0] Return the version numbers and template type codes of templates with a version number greater than 5 and with template type description ' Presentation ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5  and  ref_template_types.Template_Type_Description = \"Presentation\" "
    },
    {
        "input": "[struct _ sep0] Return the version numbers and template type codes of templates with a version number greater than 5 or with template type description ' Presentation ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5  or  ref_template_types.Template_Type_Description = \"Presentation\" "
    },
    {
        "input": "[struct _ sep0] Show all template type codes with less than three templates and with template type description ' Presentation ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  count ( templates.* )  < 3  and  ref_template_types.Template_Type_Description = \"Presentation\"  group by templates.Template_Type_Code "
    },
    {
        "input": "[struct _ sep0] Show all template type codes with less than three templates or with template type description ' Presentation ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  count ( templates.* )  < 3  or  ref_template_types.Template_Type_Description = \"Presentation\"  group by templates.Template_Type_Code "
    },
    {
        "input": "[struct _ sep0] Return the template type description of the template type with the code AD and with template type description ' Presentation ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( AD ), template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code ( AD ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select ref_template_types.Template_Type_Description from ref_template_types  where  ref_template_types.Template_Type_Code = \"AD\"  and  ref_template_types.Template_Type_Description = \"Presentation\" "
    },
    {
        "input": "[struct _ sep0] Return the template type description of the template type with the code AD or with template type description ' Presentation ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( AD ), template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code ( AD ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select ref_template_types.Template_Type_Description from ref_template_types  where  ref_template_types.Template_Type_Code = \"AD\"  or  ref_template_types.Template_Type_Description = \"Presentation\" "
    },
    {
        "input": "[struct _ sep0] What is the id and type code for the template used by the most documents and with the description ' Presentation ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID , templates.Template_Type_Code from ref_template_types  where  ref_template_types.Template_Type_Description = \"Presentation\"  group by documents.Template_ID  order by count ( documents.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Count the number of templates , with the description ' Presentation ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( templates.* )  from ref_template_types  where  ref_template_types.Template_Type_Description = \"Presentation\" "
    },
    {
        "input": "[struct _ sep0] Show template ids , version numbers , and template type codes for all templates , with the description ' Presentation ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID , templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  ref_template_types.Template_Type_Description = \"Presentation\" "
    },
    {
        "input": "[struct _ sep0] What are the ids , version numbers , and type codes for each template , with the description ' Presentation ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_ID , templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  ref_template_types.Template_Type_Description = \"Presentation\" "
    },
    {
        "input": "[struct _ sep0] Show all distinct template type codes for all templates , with the description ' Presentation ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select  distinct templates.Template_Type_Code from ref_template_types  where  ref_template_types.Template_Type_Description = \"Presentation\" "
    },
    {
        "input": "[struct _ sep0] How many templates have template type code CV and with the description ' Presentation ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( CV ), template _ type _ description ( Presentation, CV ) | templates : template _ id, version _ number, template _ type _ code ( CV ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( templates.* )  from ref_template_types  where  templates.Template_Type_Code = \"CV\"  and  ref_template_types.Template_Type_Description = \"Presentation\" "
    },
    {
        "input": "[struct _ sep0] What is the version number and template type code for the template with version number later than 5 and with the description ' Presentation ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5  and  ref_template_types.Template_Type_Description = \"Presentation\" "
    },
    {
        "input": "[struct _ sep0] What is the version number and template type code for the template with version number later than 5 or with the description ' Presentation ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5  or  ref_template_types.Template_Type_Description = \"Presentation\" "
    },
    {
        "input": "[struct _ sep0] Return the version numbers and template type codes of templates with a version number greater than 5 and with the description ' Presentation ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5  and  ref_template_types.Template_Type_Description = \"Presentation\" "
    },
    {
        "input": "[struct _ sep0] Return the version numbers and template type codes of templates with a version number greater than 5 or with the description ' Presentation ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Version_Number , templates.Template_Type_Code from ref_template_types  where  templates.Version_Number > 5  or  ref_template_types.Template_Type_Description = \"Presentation\" "
    },
    {
        "input": "[struct _ sep0] Show all template type codes with less than three templates and with the description ' Presentation ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  count ( templates.* )  < 3  and  ref_template_types.Template_Type_Description = \"Presentation\"  group by templates.Template_Type_Code "
    },
    {
        "input": "[struct _ sep0] Show all template type codes with less than three templates or with the description ' Presentation ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  count ( templates.* )  < 3  or  ref_template_types.Template_Type_Description = \"Presentation\"  group by templates.Template_Type_Code "
    },
    {
        "input": "[struct _ sep0] What is the template type code of the template used by document with the name ' Data base ' and with the description ' Presentation ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  documents.Document_Name = \"Data base\"  and  ref_template_types.Template_Type_Description = \"Presentation\" "
    },
    {
        "input": "[struct _ sep0] What is the template type code of the template used by document with the name ' Data base ' or with the description ' Presentation ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Data base ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select templates.Template_Type_Code from ref_template_types  where  documents.Document_Name = \"Data base\"  or  ref_template_types.Template_Type_Description = \"Presentation\" "
    },
    {
        "input": "[struct _ sep0] Return the template type description of the template type with the code AD and with the description ' Presentation ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( AD ), template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code ( AD ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select ref_template_types.Template_Type_Description from ref_template_types  where  ref_template_types.Template_Type_Code = \"AD\"  and  ref_template_types.Template_Type_Description = \"Presentation\" "
    },
    {
        "input": "[struct _ sep0] Return the template type description of the template type with the code AD or with the description ' Presentation ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code ( AD ), template _ type _ description ( Presentation ) | templates : template _ id, version _ number, template _ type _ code ( AD ), date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select ref_template_types.Template_Type_Description from ref_template_types  where  ref_template_types.Template_Type_Code = \"AD\"  or  ref_template_types.Template_Type_Description = \"Presentation\" "
    },
    {
        "input": "[struct _ sep0] What is the document name and template id for document with description with the letter ' w ' in it and with name ' Summer Show ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Summer Show ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_Name , documents.Template_ID from ref_template_types  where  documents.Document_Description like \"%w%\"  and  documents.Document_Name = \"Summer Show\" "
    },
    {
        "input": "[struct _ sep0] What is the document name and template id for document with description with the letter ' w ' in it or with name ' Summer Show ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Summer Show ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_Name , documents.Template_ID from ref_template_types  where  documents.Document_Description like \"%w%\"  or  documents.Document_Name = \"Summer Show\" "
    },
    {
        "input": "[struct _ sep0] Show paragraph details for paragraph with text ' Korea ' and with name ' Summer Show ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Summer Show ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Korea ), other _ details",
        "gold_natsql": "select paragraphs.Other_Details from ref_template_types  where  paragraphs.Paragraph_Text = \"Korea\"  and  documents.Document_Name = \"Summer Show\" "
    },
    {
        "input": "[struct _ sep0] Show paragraph details for paragraph with text ' Korea ' or with name ' Summer Show ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Summer Show ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Korea ), other _ details",
        "gold_natsql": "select paragraphs.Other_Details from ref_template_types  where  paragraphs.Paragraph_Text = \"Korea\"  or  documents.Document_Name = \"Summer Show\" "
    },
    {
        "input": "[struct _ sep0] List all document ids with at least two paragraphs and with name ' Summer Show ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Summer Show ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  count ( paragraphs.* )  >= 2  and  documents.Document_Name = \"Summer Show\"  group by paragraphs.Document_ID "
    },
    {
        "input": "[struct _ sep0] List all document ids with at least two paragraphs or with name ' Summer Show ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Summer Show ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  count ( paragraphs.* )  >= 2  or  documents.Document_Name = \"Summer Show\"  group by paragraphs.Document_ID "
    },
    {
        "input": "[struct _ sep0] Return the id of the document with the fewest paragraphs and with name ' Summer Show ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Summer Show ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  documents.Document_Name = \"Summer Show\"  group by paragraphs.Document_ID  order by count ( paragraphs.* )  asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the document id with 1 to 2 paragraphs and with name ' Summer Show ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Summer Show ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  count ( paragraphs.* )  between 1 and 2  and  documents.Document_Name = \"Summer Show\"  group by paragraphs.Document_ID "
    },
    {
        "input": "[struct _ sep0] What is the document id with 1 to 2 paragraphs or with name ' Summer Show ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Summer Show ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  count ( paragraphs.* )  between 1 and 2  or  documents.Document_Name = \"Summer Show\"  group by paragraphs.Document_ID "
    },
    {
        "input": "[struct _ sep0] What is the document name and template id for document with description with the letter ' w ' in it and in the document named ' Summer Show ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Summer Show ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_Name , documents.Template_ID from ref_template_types  where  documents.Document_Description like \"%w%\"  and  documents.Document_Name = \"Summer Show\" "
    },
    {
        "input": "[struct _ sep0] What is the document name and template id for document with description with the letter ' w ' in it or in the document named ' Summer Show ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Summer Show ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_Name , documents.Template_ID from ref_template_types  where  documents.Document_Description like \"%w%\"  or  documents.Document_Name = \"Summer Show\" "
    },
    {
        "input": "[struct _ sep0] Count the number of paragraphs , in the document named ' Summer Show ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Summer Show ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( paragraphs.* )  from ref_template_types  where  documents.Document_Name = \"Summer Show\" "
    },
    {
        "input": "[struct _ sep0] Show paragraph details for paragraph with text ' Korea ' and in the document named ' Summer Show ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Summer Show ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Korea ), other _ details",
        "gold_natsql": "select paragraphs.Other_Details from ref_template_types  where  paragraphs.Paragraph_Text = \"Korea\"  and  documents.Document_Name = \"Summer Show\" "
    },
    {
        "input": "[struct _ sep0] Show paragraph details for paragraph with text ' Korea ' or in the document named ' Summer Show ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Summer Show ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Korea ), other _ details",
        "gold_natsql": "select paragraphs.Other_Details from ref_template_types  where  paragraphs.Paragraph_Text = \"Korea\"  or  documents.Document_Name = \"Summer Show\" "
    },
    {
        "input": "[struct _ sep0] List all document ids with at least two paragraphs and in the document named ' Summer Show ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Summer Show ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  count ( paragraphs.* )  >= 2  and  documents.Document_Name = \"Summer Show\"  group by paragraphs.Document_ID "
    },
    {
        "input": "[struct _ sep0] List all document ids with at least two paragraphs or in the document named ' Summer Show ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Summer Show ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  count ( paragraphs.* )  >= 2  or  documents.Document_Name = \"Summer Show\"  group by paragraphs.Document_ID "
    },
    {
        "input": "[struct _ sep0] Return the id of the document with the fewest paragraphs and in the document named ' Summer Show ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Summer Show ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  documents.Document_Name = \"Summer Show\"  group by paragraphs.Document_ID  order by count ( paragraphs.* )  asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the document id with 1 to 2 paragraphs and in the document named ' Summer Show ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Summer Show ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  count ( paragraphs.* )  between 1 and 2  and  documents.Document_Name = \"Summer Show\"  group by paragraphs.Document_ID "
    },
    {
        "input": "[struct _ sep0] What is the document id with 1 to 2 paragraphs or in the document named ' Summer Show ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Summer Show ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  count ( paragraphs.* )  between 1 and 2  or  documents.Document_Name = \"Summer Show\"  group by paragraphs.Document_ID "
    },
    {
        "input": "[struct _ sep0] Count the number of paragraphs , with text ' Korea ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Korea ), other _ details",
        "gold_natsql": "select count ( paragraphs.* )  from ref_template_types  where  paragraphs.Paragraph_Text = \"Korea\" "
    },
    {
        "input": "[struct _ sep0] How many paragraphs for the document with name ' Summer Show ' and with text ' Korea ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Summer Show ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Korea ), other _ details",
        "gold_natsql": "select count ( paragraphs.* )  from ref_template_types  where  documents.Document_Name = \"Summer Show\"  and  paragraphs.Paragraph_Text = \"Korea\" "
    },
    {
        "input": "[struct _ sep0] How many paragraphs for the document with name ' Summer Show ' or with text ' Korea ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Summer Show ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Korea ), other _ details",
        "gold_natsql": "select count ( paragraphs.* )  from ref_template_types  where  documents.Document_Name = \"Summer Show\"  or  paragraphs.Paragraph_Text = \"Korea\" "
    },
    {
        "input": "[struct _ sep0] Count the number of paragraphs in the document named ' Summer Show ' and with text ' Korea ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Summer Show ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Korea ), other _ details",
        "gold_natsql": "select count ( paragraphs.* )  from ref_template_types  where  documents.Document_Name = \"Summer Show\"  and  paragraphs.Paragraph_Text = \"Korea\" "
    },
    {
        "input": "[struct _ sep0] Count the number of paragraphs in the document named ' Summer Show ' or with text ' Korea ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Summer Show ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Korea ), other _ details",
        "gold_natsql": "select count ( paragraphs.* )  from ref_template_types  where  documents.Document_Name = \"Summer Show\"  or  paragraphs.Paragraph_Text = \"Korea\" "
    },
    {
        "input": "[struct _ sep0] Show all paragraph ids and texts for the document with name ' Welcome to NY ' and with text ' Korea ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Welcome to NY ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Korea ), other _ details",
        "gold_natsql": "select paragraphs.Paragraph_ID , paragraphs.Paragraph_Text from ref_template_types  where  documents.Document_Name = \"Welcome to NY\"  and  paragraphs.Paragraph_Text = \"Korea\" "
    },
    {
        "input": "[struct _ sep0] Show all paragraph ids and texts for the document with name ' Welcome to NY ' or with text ' Korea ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Welcome to NY ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Korea ), other _ details",
        "gold_natsql": "select paragraphs.Paragraph_ID , paragraphs.Paragraph_Text from ref_template_types  where  documents.Document_Name = \"Welcome to NY\"  or  paragraphs.Paragraph_Text = \"Korea\" "
    },
    {
        "input": "[struct _ sep0] What are the ids and texts of paragraphs in the document titled ' Welcome to NY ' and with text ' Korea ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Welcome to NY ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Korea ), other _ details",
        "gold_natsql": "select paragraphs.Paragraph_ID , paragraphs.Paragraph_Text from ref_template_types  where  documents.Document_Name = \"Welcome to NY\"  and  paragraphs.Paragraph_Text = \"Korea\" "
    },
    {
        "input": "[struct _ sep0] What are the ids and texts of paragraphs in the document titled ' Welcome to NY ' or with text ' Korea ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Welcome to NY ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Korea ), other _ details",
        "gold_natsql": "select paragraphs.Paragraph_ID , paragraphs.Paragraph_Text from ref_template_types  where  documents.Document_Name = \"Welcome to NY\"  or  paragraphs.Paragraph_Text = \"Korea\" "
    },
    {
        "input": "[struct _ sep0] What are the paragraph texts for the document with the name ' Customer reviews ' and with text ' Korea ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Customer reviews ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Korea ), other _ details",
        "gold_natsql": "select paragraphs.Paragraph_Text from ref_template_types  where  documents.Document_Name = \"Customer reviews\"  and  paragraphs.Paragraph_Text = \"Korea\" "
    },
    {
        "input": "[struct _ sep0] What are the paragraph texts for the document with the name ' Customer reviews ' or with text ' Korea ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Customer reviews ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Korea ), other _ details",
        "gold_natsql": "select paragraphs.Paragraph_Text from ref_template_types  where  documents.Document_Name = \"Customer reviews\"  or  paragraphs.Paragraph_Text = \"Korea\" "
    },
    {
        "input": "[struct _ sep0] List all document ids with at least two paragraphs and with text ' Korea ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Korea ), other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  count ( paragraphs.* )  >= 2  and  paragraphs.Paragraph_Text = \"Korea\"  group by paragraphs.Document_ID "
    },
    {
        "input": "[struct _ sep0] List all document ids with at least two paragraphs or with text ' Korea ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Korea ), other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  count ( paragraphs.* )  >= 2  or  paragraphs.Paragraph_Text = \"Korea\"  group by paragraphs.Document_ID "
    },
    {
        "input": "[struct _ sep0] Return the id of the document with the fewest paragraphs and with text ' Korea ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Korea ), other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  paragraphs.Paragraph_Text = \"Korea\"  group by paragraphs.Document_ID  order by count ( paragraphs.* )  asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the document id with 1 to 2 paragraphs and with text ' Korea ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Korea ), other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  count ( paragraphs.* )  between 1 and 2  and  paragraphs.Paragraph_Text = \"Korea\"  group by paragraphs.Document_ID "
    },
    {
        "input": "[struct _ sep0] What is the document id with 1 to 2 paragraphs or with text ' Korea ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Korea ), other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  count ( paragraphs.* )  between 1 and 2  or  paragraphs.Paragraph_Text = \"Korea\"  group by paragraphs.Document_ID "
    },
    {
        "input": "[struct _ sep0] Count the number of paragraphs , that includes the text ' Korea ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Korea ), other _ details",
        "gold_natsql": "select count ( paragraphs.* )  from ref_template_types  where  paragraphs.Paragraph_Text = \"Korea\" "
    },
    {
        "input": "[struct _ sep0] What are the ids of documents that have 2 or more paragraphs and that includes the text ' Korea ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Korea ), other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  count ( paragraphs.* )  >= 2  and  paragraphs.Paragraph_Text = \"Korea\"  group by paragraphs.Document_ID "
    },
    {
        "input": "[struct _ sep0] What are the ids of documents that have 2 or more paragraphs or that includes the text ' Korea ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Korea ), other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  count ( paragraphs.* )  >= 2  or  paragraphs.Paragraph_Text = \"Korea\"  group by paragraphs.Document_ID "
    },
    {
        "input": "[struct _ sep0] Give the ids of documents that have between one and two paragraphs and that includes the text ' Korea ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Korea ), other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  count ( paragraphs.* )  between 1 and 2  and  paragraphs.Paragraph_Text = \"Korea\"  group by paragraphs.Document_ID "
    },
    {
        "input": "[struct _ sep0] Give the ids of documents that have between one and two paragraphs or that includes the text ' Korea ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Korea ), other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  count ( paragraphs.* )  between 1 and 2  or  paragraphs.Paragraph_Text = \"Korea\"  group by paragraphs.Document_ID "
    },
    {
        "input": "[struct _ sep0] What is the document name and template id for document with description with the letter ' w ' in it and with name ' Welcome to NY ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Welcome to NY ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_Name , documents.Template_ID from ref_template_types  where  documents.Document_Description like \"%w%\"  and  documents.Document_Name = \"Welcome to NY\" "
    },
    {
        "input": "[struct _ sep0] What is the document name and template id for document with description with the letter ' w ' in it or with name ' Welcome to NY ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Welcome to NY ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_Name , documents.Template_ID from ref_template_types  where  documents.Document_Description like \"%w%\"  or  documents.Document_Name = \"Welcome to NY\" "
    },
    {
        "input": "[struct _ sep0] Show paragraph details for paragraph with text ' Korea ' and with name ' Welcome to NY ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Welcome to NY ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Korea ), other _ details",
        "gold_natsql": "select paragraphs.Other_Details from ref_template_types  where  paragraphs.Paragraph_Text = \"Korea\"  and  documents.Document_Name = \"Welcome to NY\" "
    },
    {
        "input": "[struct _ sep0] Show paragraph details for paragraph with text ' Korea ' or with name ' Welcome to NY ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Welcome to NY ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Korea ), other _ details",
        "gold_natsql": "select paragraphs.Other_Details from ref_template_types  where  paragraphs.Paragraph_Text = \"Korea\"  or  documents.Document_Name = \"Welcome to NY\" "
    },
    {
        "input": "[struct _ sep0] List all document ids with at least two paragraphs and with name ' Welcome to NY ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Welcome to NY ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  count ( paragraphs.* )  >= 2  and  documents.Document_Name = \"Welcome to NY\"  group by paragraphs.Document_ID "
    },
    {
        "input": "[struct _ sep0] List all document ids with at least two paragraphs or with name ' Welcome to NY ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Welcome to NY ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  count ( paragraphs.* )  >= 2  or  documents.Document_Name = \"Welcome to NY\"  group by paragraphs.Document_ID "
    },
    {
        "input": "[struct _ sep0] Return the id of the document with the fewest paragraphs and with name ' Welcome to NY ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Welcome to NY ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  documents.Document_Name = \"Welcome to NY\"  group by paragraphs.Document_ID  order by count ( paragraphs.* )  asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the document id with 1 to 2 paragraphs and with name ' Welcome to NY ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Welcome to NY ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  count ( paragraphs.* )  between 1 and 2  and  documents.Document_Name = \"Welcome to NY\"  group by paragraphs.Document_ID "
    },
    {
        "input": "[struct _ sep0] What is the document id with 1 to 2 paragraphs or with name ' Welcome to NY ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Welcome to NY ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  count ( paragraphs.* )  between 1 and 2  or  documents.Document_Name = \"Welcome to NY\"  group by paragraphs.Document_ID "
    },
    {
        "input": "[struct _ sep0] What is the document name and template id for document with description with the letter ' w ' in it and in the document titled ' Welcome to NY ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Welcome to NY ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_Name , documents.Template_ID from ref_template_types  where  documents.Document_Description like \"%w%\"  and  documents.Document_Name = \"Welcome to NY\" "
    },
    {
        "input": "[struct _ sep0] What is the document name and template id for document with description with the letter ' w ' in it or in the document titled ' Welcome to NY ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Welcome to NY ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_Name , documents.Template_ID from ref_template_types  where  documents.Document_Description like \"%w%\"  or  documents.Document_Name = \"Welcome to NY\" "
    },
    {
        "input": "[struct _ sep0] Count the number of paragraphs , in the document titled ' Welcome to NY ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Welcome to NY ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select count ( paragraphs.* )  from ref_template_types  where  documents.Document_Name = \"Welcome to NY\" "
    },
    {
        "input": "[struct _ sep0] Show paragraph details for paragraph with text ' Korea ' and in the document titled ' Welcome to NY ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Welcome to NY ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Korea ), other _ details",
        "gold_natsql": "select paragraphs.Other_Details from ref_template_types  where  paragraphs.Paragraph_Text = \"Korea\"  and  documents.Document_Name = \"Welcome to NY\" "
    },
    {
        "input": "[struct _ sep0] Show paragraph details for paragraph with text ' Korea ' or in the document titled ' Welcome to NY ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Welcome to NY ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Korea ), other _ details",
        "gold_natsql": "select paragraphs.Other_Details from ref_template_types  where  paragraphs.Paragraph_Text = \"Korea\"  or  documents.Document_Name = \"Welcome to NY\" "
    },
    {
        "input": "[struct _ sep0] List all document ids with at least two paragraphs and in the document titled ' Welcome to NY ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Welcome to NY ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  count ( paragraphs.* )  >= 2  and  documents.Document_Name = \"Welcome to NY\"  group by paragraphs.Document_ID "
    },
    {
        "input": "[struct _ sep0] List all document ids with at least two paragraphs or in the document titled ' Welcome to NY ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Welcome to NY ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  count ( paragraphs.* )  >= 2  or  documents.Document_Name = \"Welcome to NY\"  group by paragraphs.Document_ID "
    },
    {
        "input": "[struct _ sep0] Return the id of the document with the fewest paragraphs and in the document titled ' Welcome to NY ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Welcome to NY ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  documents.Document_Name = \"Welcome to NY\"  group by paragraphs.Document_ID  order by count ( paragraphs.* )  asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the document id with 1 to 2 paragraphs and in the document titled ' Welcome to NY ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Welcome to NY ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  count ( paragraphs.* )  between 1 and 2  and  documents.Document_Name = \"Welcome to NY\"  group by paragraphs.Document_ID "
    },
    {
        "input": "[struct _ sep0] What is the document id with 1 to 2 paragraphs or in the document titled ' Welcome to NY ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Welcome to NY ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  count ( paragraphs.* )  between 1 and 2  or  documents.Document_Name = \"Welcome to NY\"  group by paragraphs.Document_ID "
    },
    {
        "input": "[struct _ sep0] What is the document name and template id for document with description with the letter ' w ' in it and with the name ' Customer reviews ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Customer reviews ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_Name , documents.Template_ID from ref_template_types  where  documents.Document_Description like \"%w%\"  and  documents.Document_Name = \"Customer reviews\" "
    },
    {
        "input": "[struct _ sep0] What is the document name and template id for document with description with the letter ' w ' in it or with the name ' Customer reviews ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Customer reviews ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select documents.Document_Name , documents.Template_ID from ref_template_types  where  documents.Document_Description like \"%w%\"  or  documents.Document_Name = \"Customer reviews\" "
    },
    {
        "input": "[struct _ sep0] Show paragraph details for paragraph with text ' Korea ' and with the name ' Customer reviews ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Customer reviews ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Korea ), other _ details",
        "gold_natsql": "select paragraphs.Other_Details from ref_template_types  where  paragraphs.Paragraph_Text = \"Korea\"  and  documents.Document_Name = \"Customer reviews\" "
    },
    {
        "input": "[struct _ sep0] Show paragraph details for paragraph with text ' Korea ' or with the name ' Customer reviews ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Customer reviews ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Korea ), other _ details",
        "gold_natsql": "select paragraphs.Other_Details from ref_template_types  where  paragraphs.Paragraph_Text = \"Korea\"  or  documents.Document_Name = \"Customer reviews\" "
    },
    {
        "input": "[struct _ sep0] List all document ids with at least two paragraphs and with the name ' Customer reviews ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Customer reviews ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  count ( paragraphs.* )  >= 2  and  documents.Document_Name = \"Customer reviews\"  group by paragraphs.Document_ID "
    },
    {
        "input": "[struct _ sep0] List all document ids with at least two paragraphs or with the name ' Customer reviews ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Customer reviews ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  count ( paragraphs.* )  >= 2  or  documents.Document_Name = \"Customer reviews\"  group by paragraphs.Document_ID "
    },
    {
        "input": "[struct _ sep0] Return the id of the document with the fewest paragraphs and with the name ' Customer reviews ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Customer reviews ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  documents.Document_Name = \"Customer reviews\"  group by paragraphs.Document_ID  order by count ( paragraphs.* )  asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the document id with 1 to 2 paragraphs and with the name ' Customer reviews ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Customer reviews ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  count ( paragraphs.* )  between 1 and 2  and  documents.Document_Name = \"Customer reviews\"  group by paragraphs.Document_ID "
    },
    {
        "input": "[struct _ sep0] What is the document id with 1 to 2 paragraphs or with the name ' Customer reviews ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Customer reviews ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text, other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  count ( paragraphs.* )  between 1 and 2  or  documents.Document_Name = \"Customer reviews\"  group by paragraphs.Document_ID "
    },
    {
        "input": "[struct _ sep0] Show paragraph details for paragraph with text ' Korea ' , Order by document id . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Korea ), other _ details",
        "gold_natsql": "select paragraphs.Other_Details from ref_template_types  where  paragraphs.Paragraph_Text = \"Korea\"  order by paragraphs.Document_ID asc"
    },
    {
        "input": "[struct _ sep0] What are the details for the paragraph that includes the text ' Korea ' , Order by document id . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Korea ), other _ details",
        "gold_natsql": "select paragraphs.Other_Details from ref_template_types  where  paragraphs.Paragraph_Text = \"Korea\"  order by paragraphs.Document_ID asc"
    },
    {
        "input": "[struct _ sep0] Show the document id with paragraph text ' Brazil ' and ' Ireland ' , Order by document id . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Ireland, Brazil ), other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  paragraphs.Paragraph_Text = \"Brazil\"  and  paragraphs.Paragraph_Text = \"Ireland\"  order by paragraphs.Document_ID asc"
    },
    {
        "input": "[struct _ sep0] What are the ids of documents that contain the paragraph text ' Brazil ' and ' Ireland ' , Order by document id . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Ireland, Brazil ), other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  paragraphs.Paragraph_Text = \"Brazil\"  and  paragraphs.Paragraph_Text = \"Ireland\"  order by paragraphs.Document_ID asc"
    },
    {
        "input": "[struct _ sep0] Show paragraph details for paragraph with text ' Korea ' , ordered by id . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Korea ), other _ details",
        "gold_natsql": "select paragraphs.Other_Details from ref_template_types  where  paragraphs.Paragraph_Text = \"Korea\"  order by paragraphs.Document_ID asc"
    },
    {
        "input": "[struct _ sep0] What are the details for the paragraph that includes the text ' Korea ' , ordered by id . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Korea ), other _ details",
        "gold_natsql": "select paragraphs.Other_Details from ref_template_types  where  paragraphs.Paragraph_Text = \"Korea\"  order by paragraphs.Document_ID asc"
    },
    {
        "input": "[struct _ sep0] Show the document id with paragraph text ' Brazil ' and ' Ireland ' , ordered by id . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Ireland, Brazil ), other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  paragraphs.Paragraph_Text = \"Brazil\"  and  paragraphs.Paragraph_Text = \"Ireland\"  order by paragraphs.Document_ID asc"
    },
    {
        "input": "[struct _ sep0] What are the ids of documents that contain the paragraph text ' Brazil ' and ' Ireland ' , ordered by id . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Ireland, Brazil ), other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  paragraphs.Paragraph_Text = \"Brazil\"  and  paragraphs.Paragraph_Text = \"Ireland\"  order by paragraphs.Document_ID asc"
    },
    {
        "input": "[struct _ sep0] Show all paragraph ids and texts for the document with name ' Welcome to NY ' and with paragraph text ' Brazil ' and ' Ireland ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Welcome to NY ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Ireland, Brazil ), other _ details",
        "gold_natsql": "select paragraphs.Paragraph_ID , paragraphs.Paragraph_Text from ref_template_types  where  documents.Document_Name = \"Welcome to NY\"  and  paragraphs.Paragraph_Text = \"Brazil\"  and  paragraphs.Paragraph_Text = \"Ireland\" "
    },
    {
        "input": "[struct _ sep0] What are the ids and texts of paragraphs in the document titled ' Welcome to NY ' and with paragraph text ' Brazil ' and ' Ireland ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Welcome to NY ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Ireland, Brazil ), other _ details",
        "gold_natsql": "select paragraphs.Paragraph_ID , paragraphs.Paragraph_Text from ref_template_types  where  documents.Document_Name = \"Welcome to NY\"  and  paragraphs.Paragraph_Text = \"Brazil\"  and  paragraphs.Paragraph_Text = \"Ireland\" "
    },
    {
        "input": "[struct _ sep0] What are the paragraph texts for the document with the name ' Customer reviews ' and with paragraph text ' Brazil ' and ' Ireland ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name ( Customer reviews ), document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Ireland, Brazil ), other _ details",
        "gold_natsql": "select paragraphs.Paragraph_Text from ref_template_types  where  documents.Document_Name = \"Customer reviews\"  and  paragraphs.Paragraph_Text = \"Brazil\"  and  paragraphs.Paragraph_Text = \"Ireland\" "
    },
    {
        "input": "[struct _ sep0] List all document ids with at least two paragraphs and with paragraph text ' Brazil ' and ' Ireland ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Ireland, Brazil ), other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  count ( paragraphs.* )  >= 2  and  paragraphs.Paragraph_Text = \"Brazil\"  and  paragraphs.Paragraph_Text = \"Ireland\"  group by paragraphs.Document_ID "
    },
    {
        "input": "[struct _ sep0] What is the document id with 1 to 2 paragraphs and with paragraph text ' Brazil ' and ' Ireland ' . [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Ireland, Brazil ), other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  count ( paragraphs.* )  between 1 and 2  and  paragraphs.Paragraph_Text = \"Brazil\"  and  paragraphs.Paragraph_Text = \"Ireland\"  group by paragraphs.Document_ID "
    },
    {
        "input": "[struct _ sep0] What are the ids of documents that have 2 or more paragraphs and that contain the paragraph text ' Brazil ' and ' Ireland ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Ireland, Brazil ), other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  count ( paragraphs.* )  >= 2  and  paragraphs.Paragraph_Text = \"Brazil\"  and  paragraphs.Paragraph_Text = \"Ireland\"  group by paragraphs.Document_ID "
    },
    {
        "input": "[struct _ sep0] Give the ids of documents that have between one and two paragraphs and that contain the paragraph text ' Brazil ' and ' Ireland ' ? [/struct _ sep0]| cre _ Doc _ Template _ Mgt | ref _ template _ types : template _ type _ code, template _ type _ description | templates : template _ id, version _ number, template _ type _ code, date _ effective _ from, date _ effective _ to, template _ details | documents : document _ id, template _ id, document _ name, document _ description, other _ details | paragraphs : paragraph _ id, document _ id, paragraph _ text ( Ireland, Brazil ), other _ details",
        "gold_natsql": "select paragraphs.Document_ID from ref_template_types  where  count ( paragraphs.* )  between 1 and 2  and  paragraphs.Paragraph_Text = \"Brazil\"  and  paragraphs.Paragraph_Text = \"Ireland\"  group by paragraphs.Document_ID "
    },
    {
        "input": "[struct _ sep0] What are the age and hometown of teachers , in ascending order of age . [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Age , teacher.Hometown from course  order by teacher.Age asc"
    },
    {
        "input": "[struct _ sep0] What is the age and hometown of every teacher , in ascending order of age . [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Age , teacher.Hometown from course  order by teacher.Age asc"
    },
    {
        "input": "[struct _ sep0] Show the name of teachers aged either 32 or 33 , in ascending order of age . [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  where  teacher.Age = 32  or  teacher.Age = 33  order by teacher.Age asc"
    },
    {
        "input": "[struct _ sep0] What are the names of the teachers who are aged either 32 or 33 , in ascending order of age . [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  where  teacher.Age = 32  or  teacher.Age = 33  order by teacher.Age asc"
    },
    {
        "input": "[struct _ sep0] What are the age and hometown of teachers , ordered by ascending age ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Age , teacher.Hometown from course  order by teacher.Age asc"
    },
    {
        "input": "[struct _ sep0] What is the age and hometown of every teacher , ordered by ascending age ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Age , teacher.Hometown from course  order by teacher.Age asc"
    },
    {
        "input": "[struct _ sep0] Show the name of teachers aged either 32 or 33 , ordered by ascending age ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  where  teacher.Age = 32  or  teacher.Age = 33  order by teacher.Age asc"
    },
    {
        "input": "[struct _ sep0] What are the names of the teachers who are aged either 32 or 33 , ordered by ascending age ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  where  teacher.Age = 32  or  teacher.Age = 33  order by teacher.Age asc"
    },
    {
        "input": "[struct _ sep0] What is the total count of teachers , whose hometown is not '' [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select count ( teacher.* )  from course  where  teacher.Hometown != \"Little Lever Urban District\" "
    },
    {
        "input": "[struct _ sep0] What are the age and hometown of teachers , whose hometown is not '' [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Age , teacher.Hometown from course  where  teacher.Hometown != \"Little Lever Urban District\" "
    },
    {
        "input": "[struct _ sep0] What is the age and hometown of every teacher , whose hometown is not '' [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Age , teacher.Hometown from course  where  teacher.Hometown != \"Little Lever Urban District\" "
    },
    {
        "input": "[struct _ sep0] What is the total count of teachers , whose hometown is not '' [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select count ( teacher.* )  from course  where  teacher.Hometown != \"Little Lever Urban District\" "
    },
    {
        "input": "[struct _ sep0] What are the age and hometown of teachers , whose hometown is not '' [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Age , teacher.Hometown from course  where  teacher.Hometown != \"Little Lever Urban District\" "
    },
    {
        "input": "[struct _ sep0] What is the age and hometown of every teacher , whose hometown is not '' [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Age , teacher.Hometown from course  where  teacher.Hometown != \"Little Lever Urban District\" "
    },
    {
        "input": "[struct _ sep0] What is the total count of teachers that aged either 32 or 33 ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select count ( teacher.* )  from course  where  teacher.Age = 32  or  teacher.Age = 33 "
    },
    {
        "input": "[struct _ sep0] What are the age and hometown of teachers that aged either 32 or 33 ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Age , teacher.Hometown from course  where  teacher.Age = 32  or  teacher.Age = 33 "
    },
    {
        "input": "[struct _ sep0] What is the age and hometown of every teacher that aged either 32 or 33 ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Age , teacher.Hometown from course  where  teacher.Age = 32  or  teacher.Age = 33 "
    },
    {
        "input": "[struct _ sep0] What is the total count of teachers , who are aged either 32 or 33 ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select count ( teacher.* )  from course  where  teacher.Age = 32  or  teacher.Age = 33 "
    },
    {
        "input": "[struct _ sep0] What are the age and hometown of teachers , who are aged either 32 or 33 ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Age , teacher.Hometown from course  where  teacher.Age = 32  or  teacher.Age = 33 "
    },
    {
        "input": "[struct _ sep0] What is the age and hometown of every teacher , who are aged either 32 or 33 ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Age , teacher.Hometown from course  where  teacher.Age = 32  or  teacher.Age = 33 "
    },
    {
        "input": "[struct _ sep0] What are the names of the people who teach Math courses and who are aged either 32 or 33 ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course ( Math ) | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  where  course.Course = \"Math\"  and  teacher.Age = 32  or  teacher.Age = 33 "
    },
    {
        "input": "[struct _ sep0] What are the names of the teachers who teach at least two courses and who are aged either 32 or 33 ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  where  count ( course_arrange.* )  >= 2  and  teacher.Age = 32  or  teacher.Age = 33  group by teacher.Name "
    },
    {
        "input": "[struct _ sep0] Show names of teachers and the courses they are arranged to teach , in ascending alphabetical order of the teacher 's name . [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name , course.Course from course  order by teacher.Name asc"
    },
    {
        "input": "[struct _ sep0] What is the name of each teacher and what course they teach , in ascending alphabetical order of the teacher 's name . [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name , course.Course from course  order by teacher.Name asc"
    },
    {
        "input": "[struct _ sep0] Show names of teachers and the courses they are arranged to teach , they teach in ascending alphabetical order by the name of the teacher ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name , course.Course from course  order by teacher.Name asc"
    },
    {
        "input": "[struct _ sep0] What is the name of each teacher and what course they teach , they teach in ascending alphabetical order by the name of the teacher ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name , course.Course from course  order by teacher.Name asc"
    },
    {
        "input": "[struct _ sep0] What are the names of the teachers who teach at least two courses and who teach Math courses ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course ( Math ) | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  where  count ( course_arrange.* )  >= 2  and  course.Course = \"Math\"  group by teacher.Name "
    },
    {
        "input": "[struct _ sep0] What are the names of the teachers who teach at least two courses or who teach Math courses ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course ( Math ) | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  where  count ( course_arrange.* )  >= 2  or  course.Course = \"Math\"  group by teacher.Name "
    },
    {
        "input": "[struct _ sep0] What are the names of the people who teach Math courses and who teach at least two courses ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course ( Math ) | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  where  course.Course = \"Math\"  and  count ( course_arrange.* )  >= 2  group by teacher.Name "
    },
    {
        "input": "[struct _ sep0] What are the names of the people who teach Math courses or who teach at least two courses ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course ( Math ) | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Name from course  where  course.Course = \"Math\"  or  count ( course_arrange.* )  >= 2  group by teacher.Name "
    },
    {
        "input": "[struct _ sep0] What is the total count of teachers , who have not been arranged to teach courses . [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select count ( teacher.* )  from course  where  @.@ not in course_arrange.* "
    },
    {
        "input": "[struct _ sep0] What are the age and hometown of teachers , who have not been arranged to teach courses . [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Age , teacher.Hometown from course  where  @.@ not in course_arrange.* "
    },
    {
        "input": "[struct _ sep0] What is the age and hometown of every teacher , who have not been arranged to teach courses . [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Age , teacher.Hometown from course  where  @.@ not in course_arrange.* "
    },
    {
        "input": "[struct _ sep0] What is the total count of teachers , whose courses have not been arranged ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select count ( teacher.* )  from course  where  @.@ not in course_arrange.* "
    },
    {
        "input": "[struct _ sep0] What are the age and hometown of teachers , whose courses have not been arranged ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Age , teacher.Hometown from course  where  @.@ not in course_arrange.* "
    },
    {
        "input": "[struct _ sep0] What is the age and hometown of every teacher , whose courses have not been arranged ? [/struct _ sep0]| course _ teach | course : course _ id, staring _ date, course | teacher : teacher _ id, name, age, hometown | course _ arrange : course _ id, teacher _ id, grade",
        "gold_natsql": "select teacher.Age , teacher.Hometown from course  where  @.@ not in course_arrange.* "
    },
    {
        "input": "[struct _ sep0] Find the id and name of the museum that has the most staff members and that were open before 2009 . [/struct _ sep0]| museum _ visit | museum : museum _ id, name, num _ of _ staff, open _ year | visitor : id, name, level _ of _ membership, age | visit : museum _ id, visitor _ id, num _ of _ ticket, total _ spent",
        "gold_natsql": "select museum.Museum_ID , museum.Name from museum  where  museum.Open_Year < 2009  order by museum.Num_of_Staff desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the opening year and staff number of the museum named Plaza Museum and opened after 2010 . [/struct _ sep0]| museum _ visit | museum : museum _ id, name ( Plaza Museum ), num _ of _ staff, open _ year | visitor : id, name, level _ of _ membership, age | visit : museum _ id, visitor _ id, num _ of _ ticket, total _ spent",
        "gold_natsql": "select museum.Num_of_Staff , museum.Open_Year from museum  where  museum.Name = \"Plaza Museum\"  and  museum.Open_Year > 2010 "
    },
    {
        "input": "[struct _ sep0] What are the opening year and staff number of the museum named Plaza Museum or opened after 2010 . [/struct _ sep0]| museum _ visit | museum : museum _ id, name ( Plaza Museum ), num _ of _ staff, open _ year | visitor : id, name, level _ of _ membership, age | visit : museum _ id, visitor _ id, num _ of _ ticket, total _ spent",
        "gold_natsql": "select museum.Num_of_Staff , museum.Open_Year from museum  where  museum.Name = \"Plaza Museum\"  or  museum.Open_Year > 2010 "
    },
    {
        "input": "[struct _ sep0] Find the average number of staff working for the museums that were open before 2009 and that had no visitor yet ? [/struct _ sep0]| museum _ visit | museum : museum _ id, name, num _ of _ staff, open _ year | visitor : id, name, level _ of _ membership, age | visit : museum _ id, visitor _ id, num _ of _ ticket, total _ spent",
        "gold_natsql": "select avg ( museum.Num_of_Staff )  from museum  where  museum.Open_Year < 2009  and  @.@ not in visit.* "
    },
    {
        "input": "[struct _ sep0] Find the average number of staff working for the museums that were open before 2009 or that had no visitor yet ? [/struct _ sep0]| museum _ visit | museum : museum _ id, name, num _ of _ staff, open _ year | visitor : id, name, level _ of _ membership, age | visit : museum _ id, visitor _ id, num _ of _ ticket, total _ spent",
        "gold_natsql": "select avg ( museum.Num_of_Staff )  from museum  where  museum.Open_Year < 2009  or  @.@ not in visit.* "
    },
    {
        "input": "[struct _ sep0] What are the opening year and staff number of the museum named Plaza Museum and opened before 2009 and ? [/struct _ sep0]| museum _ visit | museum : museum _ id, name ( Plaza Museum ), num _ of _ staff, open _ year | visitor : id, name, level _ of _ membership, age | visit : museum _ id, visitor _ id, num _ of _ ticket, total _ spent",
        "gold_natsql": "select museum.Num_of_Staff , museum.Open_Year from museum  where  museum.Name = \"Plaza Museum\"  and  museum.Open_Year < 2009 "
    },
    {
        "input": "[struct _ sep0] What are the opening year and staff number of the museum named Plaza Museum or opened before 2009 and ? [/struct _ sep0]| museum _ visit | museum : museum _ id, name ( Plaza Museum ), num _ of _ staff, open _ year | visitor : id, name, level _ of _ membership, age | visit : museum _ id, visitor _ id, num _ of _ ticket, total _ spent",
        "gold_natsql": "select museum.Num_of_Staff , museum.Open_Year from museum  where  museum.Name = \"Plaza Museum\"  or  museum.Open_Year < 2009 "
    },
    {
        "input": "[struct _ sep0] What are the opening year and staff number of the museum named Plaza Museum and opened after 2010 . [/struct _ sep0]| museum _ visit | museum : museum _ id, name ( Plaza Museum ), num _ of _ staff, open _ year | visitor : id, name, level _ of _ membership, age | visit : museum _ id, visitor _ id, num _ of _ ticket, total _ spent",
        "gold_natsql": "select museum.Num_of_Staff , museum.Open_Year from museum  where  museum.Name = \"Plaza Museum\"  and  museum.Open_Year > 2010 "
    },
    {
        "input": "[struct _ sep0] What are the opening year and staff number of the museum named Plaza Museum or opened after 2010 . [/struct _ sep0]| museum _ visit | museum : museum _ id, name ( Plaza Museum ), num _ of _ staff, open _ year | visitor : id, name, level _ of _ membership, age | visit : museum _ id, visitor _ id, num _ of _ ticket, total _ spent",
        "gold_natsql": "select museum.Num_of_Staff , museum.Open_Year from museum  where  museum.Name = \"Plaza Museum\"  or  museum.Open_Year > 2010 "
    },
    {
        "input": "[struct _ sep0] What are the opening year and staff number of the museum named Plaza Museum and were opened after 2013 or ? [/struct _ sep0]| museum _ visit | museum : museum _ id, name ( Plaza Museum ), num _ of _ staff, open _ year | visitor : id, name, level _ of _ membership, age | visit : museum _ id, visitor _ id, num _ of _ ticket, total _ spent",
        "gold_natsql": "select museum.Num_of_Staff , museum.Open_Year from museum  where  museum.Name = \"Plaza Museum\"  and  museum.Open_Year > 2013 "
    },
    {
        "input": "[struct _ sep0] What are the opening year and staff number of the museum named Plaza Museum or were opened after 2013 or ? [/struct _ sep0]| museum _ visit | museum : museum _ id, name ( Plaza Museum ), num _ of _ staff, open _ year | visitor : id, name, level _ of _ membership, age | visit : museum _ id, visitor _ id, num _ of _ ticket, total _ spent",
        "gold_natsql": "select museum.Num_of_Staff , museum.Open_Year from museum  where  museum.Name = \"Plaza Museum\"  or  museum.Open_Year > 2013 "
    },
    {
        "input": "[struct _ sep0] Find the total number of players , from the country with code USA . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code ( USA ) | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc ( USA ), loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc ( USA ), winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select count ( players.* )  from players  where  players.country_code = \"USA\" "
    },
    {
        "input": "[struct _ sep0] find the number of distinct country codes of all players , from the country with code USA . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code ( USA ) | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc ( USA ), loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc ( USA ), winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select count (  distinct players.country_code )  from players  where  players.country_code = \"USA\" "
    },
    {
        "input": "[struct _ sep0] What is the first name and country code of the player with the most tours and from the country with code USA . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code ( USA ) | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc ( USA ), loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc ( USA ), winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.country_code , players.first_name from players  where  players.country_code = \"USA\"  order by rankings.tours desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the code of the country with the most players and from the country with code USA . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code ( USA ) | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc ( USA ), loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc ( USA ), winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.country_code from players  where  players.country_code = \"USA\"  group by players.country_code  order by count ( players.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the codes of countries with more than 50 players and from the country with code USA . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code ( USA ) | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc ( USA ), loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc ( USA ), winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.country_code from players  where  count ( players.* )  > 50  and  players.country_code = \"USA\"  group by players.country_code "
    },
    {
        "input": "[struct _ sep0] What are the codes of countries with more than 50 players or from the country with code USA . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code ( USA ) | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc ( USA ), loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc ( USA ), winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.country_code from players  where  count ( players.* )  > 50  or  players.country_code = \"USA\"  group by players.country_code "
    },
    {
        "input": "[struct _ sep0] Find the total number of players , from the USA ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code ( USA ) | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc ( USA ), loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc ( USA ), winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select count ( players.* )  from players  where  players.country_code = \"USA\" "
    },
    {
        "input": "[struct _ sep0] find the number of distinct country codes of all players , from the USA ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code ( USA ) | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc ( USA ), loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc ( USA ), winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select count (  distinct players.country_code )  from players  where  players.country_code = \"USA\" "
    },
    {
        "input": "[struct _ sep0] What is the first name and country code of the player with the most tours and from the USA ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code ( USA ) | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc ( USA ), loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc ( USA ), winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.country_code , players.first_name from players  where  players.country_code = \"USA\"  order by rankings.tours desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the code of the country with the most players and from the USA ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code ( USA ) | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc ( USA ), loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc ( USA ), winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.country_code from players  where  players.country_code = \"USA\"  group by players.country_code  order by count ( players.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the codes of countries with more than 50 players and from the USA ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code ( USA ) | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc ( USA ), loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc ( USA ), winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.country_code from players  where  count ( players.* )  > 50  and  players.country_code = \"USA\"  group by players.country_code "
    },
    {
        "input": "[struct _ sep0] What are the codes of countries with more than 50 players or from the USA ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code ( USA ) | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc ( USA ), loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc ( USA ), winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.country_code from players  where  count ( players.* )  > 50  or  players.country_code = \"USA\"  group by players.country_code "
    },
    {
        "input": "[struct _ sep0] Find the total number of matches , who played in years of 2013 or 2016 . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select count ( matches.* )  from players  where  matches.year = 2013  or  matches.year = 2016 "
    },
    {
        "input": "[struct _ sep0] Count the number of matches , who played in years of 2013 or 2016 . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select count ( matches.* )  from players  where  matches.year = 2013  or  matches.year = 2016 "
    },
    {
        "input": "[struct _ sep0] Find the average age of losers and winners of all matches , who played in years of 2013 or 2016 . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select avg ( matches.loser_age )  , avg ( matches.winner_age )  from players  where  matches.year = 2013  or  matches.year = 2016 "
    },
    {
        "input": "[struct _ sep0] What are the average ages of losers and winners across matches , who played in years of 2013 or 2016 . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select avg ( matches.loser_age )  , avg ( matches.winner_age )  from players  where  matches.year = 2013  or  matches.year = 2016 "
    },
    {
        "input": "[struct _ sep0] Find the average rank of winners in all matches , who played in years of 2013 or 2016 . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select avg ( matches.winner_rank )  from players  where  matches.year = 2013  or  matches.year = 2016 "
    },
    {
        "input": "[struct _ sep0] What is the average rank for winners in all matches , who played in years of 2013 or 2016 . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select avg ( matches.winner_rank )  from players  where  matches.year = 2013  or  matches.year = 2016 "
    },
    {
        "input": "[struct _ sep0] Find the highest rank of losers in all matches , who played in years of 2013 or 2016 . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select min ( matches.loser_rank )  from players  where  matches.year = 2013  or  matches.year = 2016 "
    },
    {
        "input": "[struct _ sep0] What is the best rank of losers across all matches , who played in years of 2013 or 2016 . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select min ( matches.loser_rank )  from players  where  matches.year = 2013  or  matches.year = 2016 "
    },
    {
        "input": "[struct _ sep0] Find the total number of matches that were played in 2013 or 2016 ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select count ( matches.* )  from players  where  matches.year = 2013  or  matches.year = 2016 "
    },
    {
        "input": "[struct _ sep0] Count the number of matches that were played in 2013 or 2016 ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select count ( matches.* )  from players  where  matches.year = 2013  or  matches.year = 2016 "
    },
    {
        "input": "[struct _ sep0] Find the average age of losers and winners of all matches that were played in 2013 or 2016 ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select avg ( matches.loser_age )  , avg ( matches.winner_age )  from players  where  matches.year = 2013  or  matches.year = 2016 "
    },
    {
        "input": "[struct _ sep0] What are the average ages of losers and winners across matches that were played in 2013 or 2016 ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select avg ( matches.loser_age )  , avg ( matches.winner_age )  from players  where  matches.year = 2013  or  matches.year = 2016 "
    },
    {
        "input": "[struct _ sep0] Find the average rank of winners in all matches that were played in 2013 or 2016 ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select avg ( matches.winner_rank )  from players  where  matches.year = 2013  or  matches.year = 2016 "
    },
    {
        "input": "[struct _ sep0] What is the average rank for winners in all matches that were played in 2013 or 2016 ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select avg ( matches.winner_rank )  from players  where  matches.year = 2013  or  matches.year = 2016 "
    },
    {
        "input": "[struct _ sep0] Find the highest rank of losers in all matches that were played in 2013 or 2016 ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select min ( matches.loser_rank )  from players  where  matches.year = 2013  or  matches.year = 2016 "
    },
    {
        "input": "[struct _ sep0] What is the best rank of losers across all matches that were played in 2013 or 2016 ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select min ( matches.loser_rank )  from players  where  matches.year = 2013  or  matches.year = 2016 "
    },
    {
        "input": "[struct _ sep0] List the first name and birth date of all players from the country with code USA , in the order of birth date . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name ( Date ), hand, birth _ date, country _ code ( USA ) | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc ( USA ), loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc ( USA ), winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.first_name , players.birth_date from players  where  players.country_code = \"USA\"  order by players.birth_date asc"
    },
    {
        "input": "[struct _ sep0] What are the first names and birth dates of players from the USA , in the order of birth date . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code ( USA ) | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc ( USA ), loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc ( USA ), winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.first_name , players.birth_date from players  where  players.country_code = \"USA\"  order by players.birth_date asc"
    },
    {
        "input": "[struct _ sep0] List the first name and birth date of all players from the country with code USA , sorted by birth date ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name ( Date ), hand, birth _ date, country _ code ( USA ) | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc ( USA ), loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc ( USA ), winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.first_name , players.birth_date from players  where  players.country_code = \"USA\"  order by players.birth_date asc"
    },
    {
        "input": "[struct _ sep0] What are the first names and birth dates of players from the USA , sorted by birth date ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code ( USA ) | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc ( USA ), loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc ( USA ), winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.first_name , players.birth_date from players  where  players.country_code = \"USA\"  order by players.birth_date asc"
    },
    {
        "input": "[struct _ sep0] Find the total number of players , who are left / L hand ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select count ( players.* )  from players  where  players.hand = \"L\" "
    },
    {
        "input": "[struct _ sep0] find the number of distinct country codes of all players , who are left / L hand ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select count (  distinct players.country_code )  from players  where  players.hand = \"L\" "
    },
    {
        "input": "[struct _ sep0] Find the first name and country code of the player who did the most number of tours and who are left / L hand ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.country_code , players.first_name from players  where  players.hand = \"L\"  order by rankings.tours desc limit 1"
    },
    {
        "input": "[struct _ sep0] List the first name and birth date of all players from the country with code USA , in the order of birth date . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name ( Date ), hand, birth _ date, country _ code ( USA ) | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc ( USA ), loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc ( USA ), winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.first_name , players.birth_date from players  where  players.country_code = \"USA\"  order by players.birth_date asc"
    },
    {
        "input": "[struct _ sep0] What are the first names and birth dates of players from the USA , in the order of birth date . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code ( USA ) | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc ( USA ), loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc ( USA ), winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.first_name , players.birth_date from players  where  players.country_code = \"USA\"  order by players.birth_date asc"
    },
    {
        "input": "[struct _ sep0] List the first name and birth date of all players from the country with code USA , in order of birth date ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name ( Date ), hand, birth _ date, country _ code ( USA ) | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc ( USA ), loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc ( USA ), winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.first_name , players.birth_date from players  where  players.country_code = \"USA\"  order by players.birth_date asc"
    },
    {
        "input": "[struct _ sep0] What are the first names and birth dates of players from the USA , in order of birth date ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code ( USA ) | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc ( USA ), loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc ( USA ), winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select players.first_name , players.birth_date from players  where  players.country_code = \"USA\"  order by players.birth_date asc"
    },
    {
        "input": "[struct _ sep0] List the names of all winners who played in both 2013 and 2016 and who has the highest rank points and ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select matches.winner_name from players  where  matches.year = 2013  and  matches.year = 2016  order by matches.winner_rank_points desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names of players who won in both 2013 and 2016 and who has the highest rank points and ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select matches.winner_name from players  where  matches.year = 2013  and  matches.year = 2016  order by matches.winner_rank_points desc limit 1"
    },
    {
        "input": "[struct _ sep0] Which year had the most matches and participated in the Australian Open tourney . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name ( Australian Open ), winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select matches.year from players  where  matches.tourney_name = \"Australian Open\"  group by matches.year  order by count ( matches.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Find the name and rank points of the winner who won the most times and who participated in the Australian Open tournament ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name ( Australian Open ), winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select matches.winner_name , matches.winner_rank_points from players  where  matches.tourney_name = \"Australian Open\"  group by matches.winner_name  order by count ( matches.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] find the names of loser and winner who played in the match with greatest number of minutes and who participated in the Australian Open tournament ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name ( Australian Open ), winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select matches.winner_name , matches.loser_name from players  where  matches.tourney_name = \"Australian Open\"  order by matches.minutes desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names of the winner and loser who played in the longest match and who participated in the Australian Open tournament ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name ( Australian Open ), winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select matches.winner_name , matches.loser_name from players  where  matches.tourney_name = \"Australian Open\"  order by matches.minutes desc limit 1"
    },
    {
        "input": "[struct _ sep0] List the names of all winners who played in both 2013 and 2016 and who played in the match with greatest number of minutes . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select matches.winner_name from players  where  matches.year = 2013  and  matches.year = 2016  order by matches.minutes desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names of players who won in both 2013 and 2016 and who played in the match with greatest number of minutes . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select matches.winner_name from players  where  matches.year = 2013  and  matches.year = 2016  order by matches.minutes desc limit 1"
    },
    {
        "input": "[struct _ sep0] List the names of all winners who played in both 2013 and 2016 and who played in the longest match ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select matches.winner_name from players  where  matches.year = 2013  and  matches.year = 2016  order by matches.minutes desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names of players who won in both 2013 and 2016 and who played in the longest match ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select matches.winner_name from players  where  matches.year = 2013  and  matches.year = 2016  order by matches.minutes desc limit 1"
    },
    {
        "input": "[struct _ sep0] find the number of players for each country , that have more than 50 players . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select count ( players.* )  , players.country_code from players  where  count ( players.* )  > 50  group by players.country_code "
    },
    {
        "input": "[struct _ sep0] How many players are from each country , that have more than 50 players . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select count ( players.* )  , players.country_code from players  where  count ( players.* )  > 50  group by players.country_code "
    },
    {
        "input": "[struct _ sep0] find the number of players for each country , with more than 50 players ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select count ( players.* )  , players.country_code from players  where  count ( players.* )  > 50  group by players.country_code "
    },
    {
        "input": "[struct _ sep0] How many players are from each country , with more than 50 players ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select count ( players.* )  , players.country_code from players  where  count ( players.* )  > 50  group by players.country_code "
    },
    {
        "input": "[struct _ sep0] Which year had the most matches and participated in the WTA Championships and ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name ( WTA Championships ), winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select matches.year from players  where  matches.tourney_name = \"WTA Championships\"  group by matches.year  order by count ( matches.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Which year had the most matches and were left handed ? [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name, winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select matches.year from players  where  matches.winner_hand = \"L\"  group by matches.year  order by count ( matches.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Find the name and rank points of the winner who won the most times and who participated in the WTA Championships . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name ( WTA Championships ), winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select matches.winner_name , matches.winner_rank_points from players  where  matches.tourney_name = \"WTA Championships\"  group by matches.winner_name  order by count ( matches.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] find the names of loser and winner who played in the match with greatest number of minutes and who participated in the WTA Championships . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name ( WTA Championships ), winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select matches.winner_name , matches.loser_name from players  where  matches.tourney_name = \"WTA Championships\"  order by matches.minutes desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names of the winner and loser who played in the longest match and who participated in the WTA Championships . [/struct _ sep0]| wta _ 1 | players : player _ id, first _ name, last _ name, hand, birth _ date, country _ code | matches : best _ of, draw _ size, loser _ age, loser _ entry, loser _ hand, loser _ ht, loser _ id, loser _ ioc, loser _ name, loser _ rank, loser _ rank _ points, loser _ seed, match _ num, minutes, round, score, surface, tourney _ date, tourney _ id, tourney _ level, tourney _ name ( WTA Championships ), winner _ age, winner _ entry, winner _ hand, winner _ ht, winner _ id, winner _ ioc, winner _ name, winner _ rank, winner _ rank _ points, winner _ seed, year | rankings : ranking _ date, ranking, player _ id, ranking _ points, tours",
        "gold_natsql": "select matches.winner_name , matches.loser_name from players  where  matches.tourney_name = \"WTA Championships\"  order by matches.minutes desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the death and injury situations caused by the ship with tonnage ' t ' and ended up being ' Captured ' ? [/struct _ sep0]| battle _ death | battle : id, name, date, bulgarian _ commander, latin _ commander, result | ship : lost _ in _ battle, id, name, tonnage, ship _ type, location, disposition _ of _ ship ( Captured ) | death : caused _ by _ ship _ id, id, note, killed, injured",
        "gold_natsql": "select death.killed , death.injured from battle  where  ship.tonnage = \"t\"  and  ship.disposition_of_ship = \"Captured\" "
    },
    {
        "input": "[struct _ sep0] What are the death and injury situations caused by the ship with tonnage ' t ' or ended up being ' Captured ' ? [/struct _ sep0]| battle _ death | battle : id, name, date, bulgarian _ commander, latin _ commander, result | ship : lost _ in _ battle, id, name, tonnage, ship _ type, location, disposition _ of _ ship ( Captured ) | death : caused _ by _ ship _ id, id, note, killed, injured",
        "gold_natsql": "select death.killed , death.injured from battle  where  ship.tonnage = \"t\"  or  ship.disposition_of_ship = \"Captured\" "
    },
    {
        "input": "[struct _ sep0] How many ships ended up being ' Captured ' and caused by the ship with tonnage ' t ' ? [/struct _ sep0]| battle _ death | battle : id, name, date, bulgarian _ commander, latin _ commander, result | ship : lost _ in _ battle, id, name, tonnage, ship _ type, location, disposition _ of _ ship ( Captured ) | death : caused _ by _ ship _ id, id, note, killed, injured",
        "gold_natsql": "select count ( ship.* )  from battle  where  ship.disposition_of_ship = \"Captured\"  and  ship.tonnage = \"t\" "
    },
    {
        "input": "[struct _ sep0] How many ships ended up being ' Captured ' or caused by the ship with tonnage ' t ' ? [/struct _ sep0]| battle _ death | battle : id, name, date, bulgarian _ commander, latin _ commander, result | ship : lost _ in _ battle, id, name, tonnage, ship _ type, location, disposition _ of _ ship ( Captured ) | death : caused _ by _ ship _ id, id, note, killed, injured",
        "gold_natsql": "select count ( ship.* )  from battle  where  ship.disposition_of_ship = \"Captured\"  or  ship.tonnage = \"t\" "
    },
    {
        "input": "[struct _ sep0] List the name , date and result of each battle , when the bulgarian commander is not ' Boril ' [/struct _ sep0]| battle : id, name, date, bulgarian _ commander ( Boril ), latin _ commander, result | ship : lost _ in _ battle, id, name, tonnage, ship _ type, location, disposition _ of _ ship | death : caused _ by _ ship _ id, id, note, killed, injured",
        "gold_natsql": "select battle.name , battle.date from battle  where  battle.bulgarian_commander != \"Boril\" "
    },
    {
        "input": "[struct _ sep0] How many different results are there for the battles , when the bulgarian commander is not ' Boril ' [/struct _ sep0]| battle : id, name, date, bulgarian _ commander ( Boril ), latin _ commander, result | ship : lost _ in _ battle, id, name, tonnage, ship _ type, location, disposition _ of _ ship | death : caused _ by _ ship _ id, id, note, killed, injured",
        "gold_natsql": "select count (  distinct battle.result )  from battle  where  battle.bulgarian_commander != \"Boril\" "
    },
    {
        "input": "[struct _ sep0] List the name , date and result of each battle , that lost any ' Brig ' type shipes ? [/struct _ sep0]| battle _ death | battle : id, name, date, bulgarian _ commander, latin _ commander, result | ship : lost _ in _ battle, id, name, tonnage, ship _ type ( Brig ), location, disposition _ of _ ship | death : caused _ by _ ship _ id, id, note, killed, injured",
        "gold_natsql": "select battle.name , battle.date from battle  where  ship.ship_type = \"Brig\" "
    },
    {
        "input": "[struct _ sep0] How many different results are there for the battles , that lost any ' Brig ' type shipes ? [/struct _ sep0]| battle _ death | battle : id, name, date, bulgarian _ commander, latin _ commander, result | ship : lost _ in _ battle, id, name, tonnage, ship _ type ( Brig ), location, disposition _ of _ ship | death : caused _ by _ ship _ id, id, note, killed, injured",
        "gold_natsql": "select count (  distinct battle.result )  from battle  where  ship.ship_type = \"Brig\" "
    },
    {
        "input": "[struct _ sep0] List the name , date and result of each battle that did not lose any ship ? [/struct _ sep0]| battle _ death | battle : id, name, date, bulgarian _ commander, latin _ commander, result | ship : lost _ in _ battle, id, name, tonnage, ship _ type, location, disposition _ of _ ship | death : caused _ by _ ship _ id, id, note, killed, injured",
        "gold_natsql": "select battle.name , battle.date from battle  where  @.@ not in ship.* "
    },
    {
        "input": "[struct _ sep0] How many different results are there for the battles that did not lose any ship ? [/struct _ sep0]| battle _ death | battle : id, name, date, bulgarian _ commander, latin _ commander, result | ship : lost _ in _ battle, id, name, tonnage, ship _ type, location, disposition _ of _ ship | death : caused _ by _ ship _ id, id, note, killed, injured",
        "gold_natsql": "select count (  distinct battle.result )  from battle  where  @.@ not in ship.* "
    },
    {
        "input": "[struct _ sep0] How many ships ended up being ' Captured ' and with tonnage ' 225 ' ? [/struct _ sep0]| battle _ death | battle : id, name, date, bulgarian _ commander, latin _ commander, result | ship : lost _ in _ battle, id, name, tonnage, ship _ type, location, disposition _ of _ ship ( Captured ) | death : caused _ by _ ship _ id, id, note, killed, injured",
        "gold_natsql": "select count ( ship.* )  from battle  where  ship.disposition_of_ship = \"Captured\"  and  ship.tonnage = \"225\" "
    },
    {
        "input": "[struct _ sep0] How many ships ended up being ' Captured ' or with tonnage ' 225 ' ? [/struct _ sep0]| battle _ death | battle : id, name, date, bulgarian _ commander, latin _ commander, result | ship : lost _ in _ battle, id, name, tonnage, ship _ type, location, disposition _ of _ ship ( Captured ) | death : caused _ by _ ship _ id, id, note, killed, injured",
        "gold_natsql": "select count ( ship.* )  from battle  where  ship.disposition_of_ship = \"Captured\"  or  ship.tonnage = \"225\" "
    },
    {
        "input": "[struct _ sep0] List the name , date and result of each battle , that has lost the ship named ' Lettice ' and ? [/struct _ sep0]| battle _ death | battle : id, name, date, bulgarian _ commander, latin _ commander, result | ship : lost _ in _ battle, id, name ( Lettice ), tonnage, ship _ type, location, disposition _ of _ ship | death : caused _ by _ ship _ id, id, note, killed, injured",
        "gold_natsql": "select battle.name , battle.date from battle  where  ship.name = \"Lettice\" "
    },
    {
        "input": "[struct _ sep0] What are the different ids and names of the battles that lost any ' Brig ' type shipes and that has lost the ship named ' Lettice ' and ? [/struct _ sep0]| battle _ death | battle : id, name, date, bulgarian _ commander, latin _ commander, result | ship : lost _ in _ battle, id, name ( Lettice ), tonnage, ship _ type ( Brig ), location, disposition _ of _ ship | death : caused _ by _ ship _ id, id, note, killed, injured",
        "gold_natsql": "select  distinct battle.id , battle.name from battle  where  ship.ship_type = \"Brig\"  and  ship.name = \"Lettice\" "
    },
    {
        "input": "[struct _ sep0] What are the different ids and names of the battles that lost any ' Brig ' type shipes or that has lost the ship named ' Lettice ' and ? [/struct _ sep0]| battle _ death | battle : id, name, date, bulgarian _ commander, latin _ commander, result | ship : lost _ in _ battle, id, name ( Lettice ), tonnage, ship _ type ( Brig ), location, disposition _ of _ ship | death : caused _ by _ ship _ id, id, note, killed, injured",
        "gold_natsql": "select  distinct battle.id , battle.name from battle  where  ship.ship_type = \"Brig\"  or  ship.name = \"Lettice\" "
    },
    {
        "input": "[struct _ sep0] How many different results are there for the battles , that has lost the ship named ' Lettice ' and ? [/struct _ sep0]| battle _ death | battle : id, name, date, bulgarian _ commander, latin _ commander, result | ship : lost _ in _ battle, id, name ( Lettice ), tonnage, ship _ type, location, disposition _ of _ ship | death : caused _ by _ ship _ id, id, note, killed, injured",
        "gold_natsql": "select count (  distinct battle.result )  from battle  where  ship.name = \"Lettice\" "
    },
    {
        "input": "[struct _ sep0] List the name , date and result of each battle , that has lost the ship named ' Lettice ' and the ship named ' HMS Atalanta ' [/struct _ sep0]| battle : id, name, date, bulgarian _ commander, latin _ commander, result | ship : lost _ in _ battle, id, name ( HMS Atalanta, Lettice ), tonnage, ship _ type, location, disposition _ of _ ship | death : caused _ by _ ship _ id, id, note, killed, injured",
        "gold_natsql": "select battle.name , battle.date from battle  where  ship.name = \"Lettice\"  and  ship.name = \"HMS Atalanta\" "
    },
    {
        "input": "[struct _ sep0] What are the different ids and names of the battles that lost any ' Brig ' type shipes and that has lost the ship named ' Lettice ' and the ship named ' HMS Atalanta ' [/struct _ sep0]| battle : id, name, date, bulgarian _ commander, latin _ commander, result | ship : lost _ in _ battle, id, name ( HMS Atalanta, Lettice ), tonnage, ship _ type ( Brig ), location, disposition _ of _ ship | death : caused _ by _ ship _ id, id, note, killed, injured",
        "gold_natsql": "select  distinct battle.id , battle.name from battle  where  ship.ship_type = \"Brig\"  and  ship.name = \"Lettice\"  and  ship.name = \"HMS Atalanta\" "
    },
    {
        "input": "[struct _ sep0] How many different results are there for the battles , that has lost the ship named ' Lettice ' and the ship named ' HMS Atalanta ' [/struct _ sep0]| battle : id, name, date, bulgarian _ commander, latin _ commander, result | ship : lost _ in _ battle, id, name ( HMS Atalanta, Lettice ), tonnage, ship _ type, location, disposition _ of _ ship | death : caused _ by _ ship _ id, id, note, killed, injured",
        "gold_natsql": "select count (  distinct battle.result )  from battle  where  ship.name = \"Lettice\"  and  ship.name = \"HMS Atalanta\" "
    },
    {
        "input": "[struct _ sep0] List the name , date and result of each battle , with no ships lost ? [/struct _ sep0]| battle _ death | battle : id, name, date, bulgarian _ commander, latin _ commander, result | ship : lost _ in _ battle, id, name, tonnage, ship _ type, location, disposition _ of _ ship | death : caused _ by _ ship _ id, id, note, killed, injured",
        "gold_natsql": "select battle.name , battle.date from battle  where  except_  @.@ is ship.* "
    },
    {
        "input": "[struct _ sep0] What is the first and second line for all addresses , in the city Port Chelsea ? [/struct _ sep0]| student _ transcripts _ tracking | addresses : address _ id, line _ 1, line _ 2, line _ 3, city ( Port Chelsea ), zip _ postcode, state _ province _ county, country, other _ address _ details | courses : course _ id, course _ name, course _ description, other _ details | departments : department _ id, department _ name, department _ description, other _ details | degree _ programs : degree _ program _ id, department _ id, degree _ summary _ name, degree _ summary _ description, other _ details | sections : section _ id, course _ id, section _ name, section _ description, other _ details | semesters : semester _ id, semester _ name, semester _ description, other _ details | students : student _ id, current _ address _ id, permanent _ address _ id, first _ name, middle _ name, last _ name, cell _ mobile _ number, email _ address, ssn, date _ first _ registered, date _ left, other _ student _ details | student _ enrolment : student _ enrolment _ id, degree _ program _ id, semester _ id, student _ id, other _ details | student _ enrolment _ courses : student _ course _ id, course _ id, student _ enrolment _ id | transcripts : transcript _ id, transcript _ date, other _ details | transcript _ contents : student _ course _ id, transcript _ id",
        "gold_natsql": "select addresses.line_1 , addresses.line_2 from addresses  where  addresses.city = \"Port Chelsea\" "
    },
    {
        "input": "[struct _ sep0] What are the names and descriptions of all the sections , in reversed lexicographical order . [/struct _ sep0]| student _ transcripts _ tracking | addresses : address _ id, line _ 1, line _ 2, line _ 3, city, zip _ postcode, state _ province _ county, country, other _ address _ details | courses : course _ id, course _ name, course _ description, other _ details | departments : department _ id, department _ name, department _ description, other _ details | degree _ programs : degree _ program _ id, department _ id, degree _ summary _ name, degree _ summary _ description, other _ details | sections : section _ id, course _ id, section _ name, section _ description, other _ details | semesters : semester _ id, semester _ name, semester _ description, other _ details | students : student _ id, current _ address _ id, permanent _ address _ id, first _ name, middle _ name, last _ name, cell _ mobile _ number, email _ address, ssn, date _ first _ registered, date _ left, other _ student _ details | student _ enrolment : student _ enrolment _ id, degree _ program _ id, semester _ id, student _ id, other _ details | student _ enrolment _ courses : student _ course _ id, course _ id, student _ enrolment _ id | transcripts : transcript _ id, transcript _ date, other _ details | transcript _ contents : student _ course _ id, transcript _ id",
        "gold_natsql": "select sections.section_name , sections.section_description from addresses  order by sections.section_name desc"
    },
    {
        "input": "[struct _ sep0] What are the names and descriptions for all the sections , in reversed lexicographical order . [/struct _ sep0]| student _ transcripts _ tracking | addresses : address _ id, line _ 1, line _ 2, line _ 3, city, zip _ postcode, state _ province _ county, country, other _ address _ details | courses : course _ id, course _ name, course _ description, other _ details | departments : department _ id, department _ name, department _ description, other _ details | degree _ programs : degree _ program _ id, department _ id, degree _ summary _ name, degree _ summary _ description, other _ details | sections : section _ id, course _ id, section _ name, section _ description, other _ details | semesters : semester _ id, semester _ name, semester _ description, other _ details | students : student _ id, current _ address _ id, permanent _ address _ id, first _ name, middle _ name, last _ name, cell _ mobile _ number, email _ address, ssn, date _ first _ registered, date _ left, other _ student _ details | student _ enrolment : student _ enrolment _ id, degree _ program _ id, semester _ id, student _ id, other _ details | student _ enrolment _ courses : student _ course _ id, course _ id, student _ enrolment _ id | transcripts : transcript _ id, transcript _ date, other _ details | transcript _ contents : student _ course _ id, transcript _ id",
        "gold_natsql": "select sections.section_name , sections.section_description from addresses  order by sections.section_name desc"
    },
    {
        "input": "[struct _ sep0] Describe the section h , in reversed lexicographical order . [/struct _ sep0]| student _ transcripts _ tracking | addresses : address _ id, line _ 1, line _ 2, line _ 3, city, zip _ postcode, state _ province _ county, country, other _ address _ details | courses : course _ id, course _ name, course _ description, other _ details | departments : department _ id, department _ name, department _ description, other _ details | degree _ programs : degree _ program _ id, department _ id, degree _ summary _ name, degree _ summary _ description, other _ details | sections : section _ id, course _ id, section _ name, section _ description, other _ details | semesters : semester _ id, semester _ name, semester _ description, other _ details | students : student _ id, current _ address _ id, permanent _ address _ id, first _ name, middle _ name, last _ name, cell _ mobile _ number, email _ address, ssn, date _ first _ registered, date _ left, other _ student _ details | student _ enrolment : student _ enrolment _ id, degree _ program _ id, semester _ id, student _ id, other _ details | student _ enrolment _ courses : student _ course _ id, course _ id, student _ enrolment _ id | transcripts : transcript _ id, transcript _ date, other _ details | transcript _ contents : student _ course _ id, transcript _ id",
        "gold_natsql": "select sections.section_description from addresses  where  sections.section_name = \"h\"  order by sections.section_name desc"
    },
    {
        "input": "[struct _ sep0] What is the description for the section named h , in reversed lexicographical order . [/struct _ sep0]| student _ transcripts _ tracking | addresses : address _ id, line _ 1, line _ 2, line _ 3, city, zip _ postcode, state _ province _ county, country, other _ address _ details | courses : course _ id, course _ name, course _ description, other _ details | departments : department _ id, department _ name, department _ description, other _ details | degree _ programs : degree _ program _ id, department _ id, degree _ summary _ name, degree _ summary _ description, other _ details | sections : section _ id, course _ id, section _ name, section _ description, other _ details | semesters : semester _ id, semester _ name, semester _ description, other _ details | students : student _ id, current _ address _ id, permanent _ address _ id, first _ name, middle _ name, last _ name, cell _ mobile _ number, email _ address, ssn, date _ first _ registered, date _ left, other _ student _ details | student _ enrolment : student _ enrolment _ id, degree _ program _ id, semester _ id, student _ id, other _ details | student _ enrolment _ courses : student _ course _ id, course _ id, student _ enrolment _ id | transcripts : transcript _ id, transcript _ date, other _ details | transcript _ contents : student _ course _ id, transcript _ id",
        "gold_natsql": "select sections.section_description from addresses  where  sections.section_name = \"h\"  order by sections.section_name desc"
    },
    {
        "input": "[struct _ sep0] What are the names and descriptions of all the sections , in reverse alphabetical order ? [/struct _ sep0]| student _ transcripts _ tracking | addresses : address _ id, line _ 1, line _ 2, line _ 3, city, zip _ postcode, state _ province _ county, country, other _ address _ details | courses : course _ id, course _ name, course _ description, other _ details | departments : department _ id, department _ name, department _ description, other _ details | degree _ programs : degree _ program _ id, department _ id, degree _ summary _ name, degree _ summary _ description, other _ details | sections : section _ id, course _ id, section _ name, section _ description, other _ details | semesters : semester _ id, semester _ name, semester _ description, other _ details | students : student _ id, current _ address _ id, permanent _ address _ id, first _ name, middle _ name, last _ name, cell _ mobile _ number, email _ address, ssn, date _ first _ registered, date _ left, other _ student _ details | student _ enrolment : student _ enrolment _ id, degree _ program _ id, semester _ id, student _ id, other _ details | student _ enrolment _ courses : student _ course _ id, course _ id, student _ enrolment _ id | transcripts : transcript _ id, transcript _ date, other _ details | transcript _ contents : student _ course _ id, transcript _ id",
        "gold_natsql": "select sections.section_name , sections.section_description from addresses  order by sections.section_name desc"
    },
    {
        "input": "[struct _ sep0] What are the names and descriptions for all the sections , in reverse alphabetical order ? [/struct _ sep0]| student _ transcripts _ tracking | addresses : address _ id, line _ 1, line _ 2, line _ 3, city, zip _ postcode, state _ province _ county, country, other _ address _ details | courses : course _ id, course _ name, course _ description, other _ details | departments : department _ id, department _ name, department _ description, other _ details | degree _ programs : degree _ program _ id, department _ id, degree _ summary _ name, degree _ summary _ description, other _ details | sections : section _ id, course _ id, section _ name, section _ description, other _ details | semesters : semester _ id, semester _ name, semester _ description, other _ details | students : student _ id, current _ address _ id, permanent _ address _ id, first _ name, middle _ name, last _ name, cell _ mobile _ number, email _ address, ssn, date _ first _ registered, date _ left, other _ student _ details | student _ enrolment : student _ enrolment _ id, degree _ program _ id, semester _ id, student _ id, other _ details | student _ enrolment _ courses : student _ course _ id, course _ id, student _ enrolment _ id | transcripts : transcript _ id, transcript _ date, other _ details | transcript _ contents : student _ course _ id, transcript _ id",
        "gold_natsql": "select sections.section_name , sections.section_description from addresses  order by sections.section_name desc"
    },
    {
        "input": "[struct _ sep0] Describe the section h , in reverse alphabetical order ? [/struct _ sep0]| student _ transcripts _ tracking | addresses : address _ id, line _ 1, line _ 2, line _ 3, city, zip _ postcode, state _ province _ county, country, other _ address _ details | courses : course _ id, course _ name, course _ description, other _ details | departments : department _ id, department _ name, department _ description, other _ details | degree _ programs : degree _ program _ id, department _ id, degree _ summary _ name, degree _ summary _ description, other _ details | sections : section _ id, course _ id, section _ name, section _ description, other _ details | semesters : semester _ id, semester _ name, semester _ description, other _ details | students : student _ id, current _ address _ id, permanent _ address _ id, first _ name, middle _ name, last _ name, cell _ mobile _ number, email _ address, ssn, date _ first _ registered, date _ left, other _ student _ details | student _ enrolment : student _ enrolment _ id, degree _ program _ id, semester _ id, student _ id, other _ details | student _ enrolment _ courses : student _ course _ id, course _ id, student _ enrolment _ id | transcripts : transcript _ id, transcript _ date, other _ details | transcript _ contents : student _ course _ id, transcript _ id",
        "gold_natsql": "select sections.section_description from addresses  where  sections.section_name = \"h\"  order by sections.section_name desc"
    },
    {
        "input": "[struct _ sep0] What is the description for the section named h , in reverse alphabetical order ? [/struct _ sep0]| student _ transcripts _ tracking | addresses : address _ id, line _ 1, line _ 2, line _ 3, city, zip _ postcode, state _ province _ county, country, other _ address _ details | courses : course _ id, course _ name, course _ description, other _ details | departments : department _ id, department _ name, department _ description, other _ details | degree _ programs : degree _ program _ id, department _ id, degree _ summary _ name, degree _ summary _ description, other _ details | sections : section _ id, course _ id, section _ name, section _ description, other _ details | semesters : semester _ id, semester _ name, semester _ description, other _ details | students : student _ id, current _ address _ id, permanent _ address _ id, first _ name, middle _ name, last _ name, cell _ mobile _ number, email _ address, ssn, date _ first _ registered, date _ left, other _ student _ details | student _ enrolment : student _ enrolment _ id, degree _ program _ id, semester _ id, student _ id, other _ details | student _ enrolment _ courses : student _ course _ id, course _ id, student _ enrolment _ id | transcripts : transcript _ id, transcript _ date, other _ details | transcript _ contents : student _ course _ id, transcript _ id",
        "gold_natsql": "select sections.section_description from addresses  where  sections.section_name = \"h\"  order by sections.section_name desc"
    },
    {
        "input": "[struct _ sep0] Who is enrolled in a Bachelor degree program ? List all the student details in reversed lexicographical order . [/struct _ sep0]| student _ transcripts _ tracking | addresses : address _ id, line _ 1, line _ 2, line _ 3, city, zip _ postcode, state _ province _ county, country, other _ address _ details | courses : course _ id, course _ name, course _ description, other _ details | departments : department _ id, department _ name, department _ description, other _ details | degree _ programs : degree _ program _ id, department _ id, degree _ summary _ name ( Bachelor ), degree _ summary _ description, other _ details | sections : section _ id, course _ id, section _ name, section _ description, other _ details | semesters : semester _ id, semester _ name, semester _ description, other _ details | students : student _ id, current _ address _ id, permanent _ address _ id, first _ name, middle _ name, last _ name, cell _ mobile _ number, email _ address, ssn, date _ first _ registered, date _ left, other _ student _ details | student _ enrolment : student _ enrolment _ id, degree _ program _ id, semester _ id, student _ id, other _ details | student _ enrolment _ courses : student _ course _ id, course _ id, student _ enrolment _ id | transcripts : transcript _ id, transcript _ date, other _ details | transcript _ contents : student _ course _ id, transcript _ id",
        "gold_natsql": "select students.other_student_details from addresses  where  degree_programs.degree_summary_name = \"Bachelor\"  order by students.other_student_details desc"
    },
    {
        "input": "[struct _ sep0] What are the names and descriptions of all the sections that named h ? [/struct _ sep0]| student _ transcripts _ tracking | addresses : address _ id, line _ 1, line _ 2, line _ 3, city, zip _ postcode, state _ province _ county, country, other _ address _ details | courses : course _ id, course _ name, course _ description, other _ details | departments : department _ id, department _ name, department _ description, other _ details | degree _ programs : degree _ program _ id, department _ id, degree _ summary _ name, degree _ summary _ description, other _ details | sections : section _ id, course _ id, section _ name, section _ description, other _ details | semesters : semester _ id, semester _ name, semester _ description, other _ details | students : student _ id, current _ address _ id, permanent _ address _ id, first _ name, middle _ name, last _ name, cell _ mobile _ number, email _ address, ssn, date _ first _ registered, date _ left, other _ student _ details | student _ enrolment : student _ enrolment _ id, degree _ program _ id, semester _ id, student _ id, other _ details | student _ enrolment _ courses : student _ course _ id, course _ id, student _ enrolment _ id | transcripts : transcript _ id, transcript _ date, other _ details | transcript _ contents : student _ course _ id, transcript _ id",
        "gold_natsql": "select sections.section_name , sections.section_description from addresses  where  sections.section_name = \"h\" "
    },
    {
        "input": "[struct _ sep0] What are the names and descriptions for all the sections that named h ? [/struct _ sep0]| student _ transcripts _ tracking | addresses : address _ id, line _ 1, line _ 2, line _ 3, city, zip _ postcode, state _ province _ county, country, other _ address _ details | courses : course _ id, course _ name, course _ description, other _ details | departments : department _ id, department _ name, department _ description, other _ details | degree _ programs : degree _ program _ id, department _ id, degree _ summary _ name, degree _ summary _ description, other _ details | sections : section _ id, course _ id, section _ name, section _ description, other _ details | semesters : semester _ id, semester _ name, semester _ description, other _ details | students : student _ id, current _ address _ id, permanent _ address _ id, first _ name, middle _ name, last _ name, cell _ mobile _ number, email _ address, ssn, date _ first _ registered, date _ left, other _ student _ details | student _ enrolment : student _ enrolment _ id, degree _ program _ id, semester _ id, student _ id, other _ details | student _ enrolment _ courses : student _ course _ id, course _ id, student _ enrolment _ id | transcripts : transcript _ id, transcript _ date, other _ details | transcript _ contents : student _ course _ id, transcript _ id",
        "gold_natsql": "select sections.section_name , sections.section_description from addresses  where  sections.section_name = \"h\" "
    },
    {
        "input": "[struct _ sep0] What are the names and id of courses having at most 2 sections and named h ? [/struct _ sep0]| student _ transcripts _ tracking | addresses : address _ id, line _ 1, line _ 2, line _ 3, city, zip _ postcode, state _ province _ county, country, other _ address _ details | courses : course _ id, course _ name, course _ description, other _ details | departments : department _ id, department _ name, department _ description, other _ details | degree _ programs : degree _ program _ id, department _ id, degree _ summary _ name, degree _ summary _ description, other _ details | sections : section _ id, course _ id, section _ name, section _ description, other _ details | semesters : semester _ id, semester _ name, semester _ description, other _ details | students : student _ id, current _ address _ id, permanent _ address _ id, first _ name, middle _ name, last _ name, cell _ mobile _ number, email _ address, ssn, date _ first _ registered, date _ left, other _ student _ details | student _ enrolment : student _ enrolment _ id, degree _ program _ id, semester _ id, student _ id, other _ details | student _ enrolment _ courses : student _ course _ id, course _ id, student _ enrolment _ id | transcripts : transcript _ id, transcript _ date, other _ details | transcript _ contents : student _ course _ id, transcript _ id",
        "gold_natsql": "select courses.course_name , courses.course_id from addresses  where  count ( sections.* )  <= 2  and  sections.section_name = \"h\"  group by courses.course_id "
    },
    {
        "input": "[struct _ sep0] What are the names and id of courses having at most 2 sections or named h ? [/struct _ sep0]| student _ transcripts _ tracking | addresses : address _ id, line _ 1, line _ 2, line _ 3, city, zip _ postcode, state _ province _ county, country, other _ address _ details | courses : course _ id, course _ name, course _ description, other _ details | departments : department _ id, department _ name, department _ description, other _ details | degree _ programs : degree _ program _ id, department _ id, degree _ summary _ name, degree _ summary _ description, other _ details | sections : section _ id, course _ id, section _ name, section _ description, other _ details | semesters : semester _ id, semester _ name, semester _ description, other _ details | students : student _ id, current _ address _ id, permanent _ address _ id, first _ name, middle _ name, last _ name, cell _ mobile _ number, email _ address, ssn, date _ first _ registered, date _ left, other _ student _ details | student _ enrolment : student _ enrolment _ id, degree _ program _ id, semester _ id, student _ id, other _ details | student _ enrolment _ courses : student _ course _ id, course _ id, student _ enrolment _ id | transcripts : transcript _ id, transcript _ date, other _ details | transcript _ contents : student _ course _ id, transcript _ id",
        "gold_natsql": "select courses.course_name , courses.course_id from addresses  where  count ( sections.* )  <= 2  or  sections.section_name = \"h\"  group by courses.course_id "
    },
    {
        "input": "[struct _ sep0] List all cartoon directed by ' Ben Jones ' , in alphabetical order . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title from tv_channel  where  cartoon.Directed_by = \"Ben Jones\"  order by cartoon.Title asc"
    },
    {
        "input": "[struct _ sep0] What are the names of all cartoons directed by Ben Jones , in alphabetical order . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title from tv_channel  where  cartoon.Directed_by = \"Ben Jones\"  order by cartoon.Title asc"
    },
    {
        "input": "[struct _ sep0] List the title of all cartoon directed by ' Ben Jones ' or ' Brandon Vietti ' , in alphabetical order . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Brandon Vietti, Ben Jones ), written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title from tv_channel  where  cartoon.Directed_by = \"Ben Jones\"  or  cartoon.Directed_by = \"Brandon Vietti\"  order by cartoon.Title asc"
    },
    {
        "input": "[struct _ sep0] What are the titles of all cartoons directed by Ben Jones or Brandon Vietti , in alphabetical order . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Brandon Vietti, Ben Jones ), written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title from tv_channel  where  cartoon.Directed_by = \"Ben Jones\"  or  cartoon.Directed_by = \"Brandon Vietti\"  order by cartoon.Title asc"
    },
    {
        "input": "[struct _ sep0] List the title of all Cartoons showed on TV Channel with series name ' Sky Radio ' , in alphabetical order . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title from tv_channel  where  tv_channel.series_name = \"Sky Radio\"  order by cartoon.Title asc"
    },
    {
        "input": "[struct _ sep0] How many cartoons were written by ' Joseph Kuhr ' and directed by Ben Jones ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by ( Joseph Kuhr ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select count ( cartoon.* )  from tv_channel  where  cartoon.Written_by = \"Joseph Kuhr\"  and  cartoon.Directed_by = \"Ben Jones\" "
    },
    {
        "input": "[struct _ sep0] How many cartoons were written by ' Joseph Kuhr ' or directed by Ben Jones ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by ( Joseph Kuhr ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select count ( cartoon.* )  from tv_channel  where  cartoon.Written_by = \"Joseph Kuhr\"  or  cartoon.Directed_by = \"Ben Jones\" "
    },
    {
        "input": "[struct _ sep0] What is the number of cartoones written by Joseph Kuhr and directed by Ben Jones ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by ( Joseph Kuhr ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select count ( cartoon.* )  from tv_channel  where  cartoon.Written_by = \"Joseph Kuhr\"  and  cartoon.Directed_by = \"Ben Jones\" "
    },
    {
        "input": "[struct _ sep0] What is the number of cartoones written by Joseph Kuhr or directed by Ben Jones ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by ( Joseph Kuhr ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select count ( cartoon.* )  from tv_channel  where  cartoon.Written_by = \"Joseph Kuhr\"  or  cartoon.Directed_by = \"Ben Jones\" "
    },
    {
        "input": "[struct _ sep0] which countries ' tv channels are playing some cartoon written by Todd Casey and directed by Ben Jones ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Country from tv_channel  where  cartoon.Written_by = \"Todd Casey\"  and  cartoon.Directed_by = \"Ben Jones\" "
    },
    {
        "input": "[struct _ sep0] which countries ' tv channels are playing some cartoon written by Todd Casey or directed by Ben Jones ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Country from tv_channel  where  cartoon.Written_by = \"Todd Casey\"  or  cartoon.Directed_by = \"Ben Jones\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all cartoons directed by Ben Jones and were written by ' Joseph Kuhr ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by ( Joseph Kuhr ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title from tv_channel  where  cartoon.Directed_by = \"Ben Jones\"  and  cartoon.Written_by = \"Joseph Kuhr\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all cartoons directed by Ben Jones or were written by ' Joseph Kuhr ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by ( Joseph Kuhr ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title from tv_channel  where  cartoon.Directed_by = \"Ben Jones\"  or  cartoon.Written_by = \"Joseph Kuhr\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all cartoons directed by Ben Jones and written by Joseph Kuhr ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by ( Joseph Kuhr ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title from tv_channel  where  cartoon.Directed_by = \"Ben Jones\"  and  cartoon.Written_by = \"Joseph Kuhr\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all cartoons directed by Ben Jones or written by Joseph Kuhr ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by ( Joseph Kuhr ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title from tv_channel  where  cartoon.Directed_by = \"Ben Jones\"  or  cartoon.Written_by = \"Joseph Kuhr\" "
    },
    {
        "input": "[struct _ sep0] List all cartoon directed by ' Ben Jones ' , ordered by their air date ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title from tv_channel  where  cartoon.Directed_by = \"Ben Jones\"  order by cartoon.Original_air_date asc"
    },
    {
        "input": "[struct _ sep0] What are the names of all cartoons directed by Ben Jones , ordered by their air date ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title from tv_channel  where  cartoon.Directed_by = \"Ben Jones\"  order by cartoon.Original_air_date asc"
    },
    {
        "input": "[struct _ sep0] List the title of all cartoon directed by ' Ben Jones ' or ' Brandon Vietti ' , ordered by their air date ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Brandon Vietti, Ben Jones ), written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title from tv_channel  where  cartoon.Directed_by = \"Ben Jones\"  or  cartoon.Directed_by = \"Brandon Vietti\"  order by cartoon.Original_air_date asc"
    },
    {
        "input": "[struct _ sep0] What are the titles of all cartoons directed by Ben Jones or Brandon Vietti , ordered by their air date ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Brandon Vietti, Ben Jones ), written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title from tv_channel  where  cartoon.Directed_by = \"Ben Jones\"  or  cartoon.Directed_by = \"Brandon Vietti\"  order by cartoon.Original_air_date asc"
    },
    {
        "input": "[struct _ sep0] What is the title of all the cartools that are on the TV Channel with the series name ' Sky Radio ' , that are ordered by air date ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title from tv_channel  where  tv_channel.series_name = \"Sky Radio\"  order by cartoon.Original_air_date asc"
    },
    {
        "input": "[struct _ sep0] How many cartoons were written by ' Joseph Kuhr ' and directed by Ben Jones or ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by ( Joseph Kuhr ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select count ( cartoon.* )  from tv_channel  where  cartoon.Written_by = \"Joseph Kuhr\"  and  cartoon.Directed_by = \"Ben Jones\" "
    },
    {
        "input": "[struct _ sep0] How many cartoons were written by ' Joseph Kuhr ' or directed by Ben Jones or ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by ( Joseph Kuhr ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select count ( cartoon.* )  from tv_channel  where  cartoon.Written_by = \"Joseph Kuhr\"  or  cartoon.Directed_by = \"Ben Jones\" "
    },
    {
        "input": "[struct _ sep0] What is the number of cartoones written by Joseph Kuhr and directed by Ben Jones or ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by ( Joseph Kuhr ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select count ( cartoon.* )  from tv_channel  where  cartoon.Written_by = \"Joseph Kuhr\"  and  cartoon.Directed_by = \"Ben Jones\" "
    },
    {
        "input": "[struct _ sep0] What is the number of cartoones written by Joseph Kuhr or directed by Ben Jones or ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by ( Joseph Kuhr ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select count ( cartoon.* )  from tv_channel  where  cartoon.Written_by = \"Joseph Kuhr\"  or  cartoon.Directed_by = \"Ben Jones\" "
    },
    {
        "input": "[struct _ sep0] which countries ' tv channels are playing some cartoon written by Todd Casey and directed by Ben Jones or ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Country from tv_channel  where  cartoon.Written_by = \"Todd Casey\"  and  cartoon.Directed_by = \"Ben Jones\" "
    },
    {
        "input": "[struct _ sep0] which countries ' tv channels are playing some cartoon written by Todd Casey or directed by Ben Jones or ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Country from tv_channel  where  cartoon.Written_by = \"Todd Casey\"  or  cartoon.Directed_by = \"Ben Jones\" "
    },
    {
        "input": "[struct _ sep0] How many TV Channel using language English and with serial name ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select count ( tv_channel.* )  from tv_channel  where  tv_channel.Language = \"English\"  and  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] How many TV Channel using language English or with serial name ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select count ( tv_channel.* )  from tv_channel  where  tv_channel.Language = \"English\"  or  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] find id of the tv channels that from the countries where have more than two tv channels and with serial name ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.id from tv_channel  where  count ( tv_channel.* )  > 2  and  tv_channel.series_name = \"Sky Radio\"  group by tv_channel.Country "
    },
    {
        "input": "[struct _ sep0] find id of the tv channels that from the countries where have more than two tv channels or with serial name ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.id from tv_channel  where  count ( tv_channel.* )  > 2  or  tv_channel.series_name = \"Sky Radio\"  group by tv_channel.Country "
    },
    {
        "input": "[struct _ sep0] How many TV Channel using language English and with serial name ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select count ( tv_channel.* )  from tv_channel  where  tv_channel.Language = \"English\"  and  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] How many TV Channel using language English or with serial name ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select count ( tv_channel.* )  from tv_channel  where  tv_channel.Language = \"English\"  or  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] find id of the tv channels that from the countries where have more than two tv channels and with serial name ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.id from tv_channel  where  count ( tv_channel.* )  > 2  and  tv_channel.series_name = \"Sky Radio\"  group by tv_channel.Country "
    },
    {
        "input": "[struct _ sep0] find id of the tv channels that from the countries where have more than two tv channels or with serial name ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.id from tv_channel  where  count ( tv_channel.* )  > 2  or  tv_channel.series_name = \"Sky Radio\"  group by tv_channel.Country "
    },
    {
        "input": "[struct _ sep0] What is the content of TV Channel with serial name ' Sky Radio ' and using language English ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Content from tv_channel  where  tv_channel.series_name = \"Sky Radio\"  and  tv_channel.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] What is the content of TV Channel with serial name ' Sky Radio ' or using language English ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Content from tv_channel  where  tv_channel.series_name = \"Sky Radio\"  or  tv_channel.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] What is the Package Option of TV Channel with serial name ' Sky Radio ' and using language English ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option ( Option ) | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option from tv_channel  where  tv_channel.series_name = \"Sky Radio\"  and  tv_channel.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] What is the Package Option of TV Channel with serial name ' Sky Radio ' or using language English ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option ( Option ) | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option from tv_channel  where  tv_channel.series_name = \"Sky Radio\"  or  tv_channel.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] What is the episode for the TV series named ' Sky Radio ' and using language English ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_series.Episode from tv_channel  where  tv_channel.series_name = \"Sky Radio\"  and  tv_channel.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] What is the episode for the TV series named ' Sky Radio ' or using language English ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_series.Episode from tv_channel  where  tv_channel.series_name = \"Sky Radio\"  or  tv_channel.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] which countries ' tv channels are playing some cartoon written by Todd Casey and using language English ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Country from tv_channel  where  cartoon.Written_by = \"Todd Casey\"  and  tv_channel.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] which countries ' tv channels are playing some cartoon written by Todd Casey or using language English ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Country from tv_channel  where  cartoon.Written_by = \"Todd Casey\"  or  tv_channel.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] What is the episode for the TV series named ' Sky Radio ' and use the English language ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_series.Episode from tv_channel  where  tv_channel.series_name = \"Sky Radio\"  and  tv_channel.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] What is the episode for the TV series named ' Sky Radio ' or use the English language ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_series.Episode from tv_channel  where  tv_channel.series_name = \"Sky Radio\"  or  tv_channel.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] which countries ' tv channels are playing some cartoon written by Todd Casey and use the English language ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Country from tv_channel  where  cartoon.Written_by = \"Todd Casey\"  and  tv_channel.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] which countries ' tv channels are playing some cartoon written by Todd Casey or use the English language ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Country from tv_channel  where  cartoon.Written_by = \"Todd Casey\"  or  tv_channel.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] find id of the tv channels that from the countries where have more than two tv channels and on TV Channel with series name ' Sky Radio ' . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.id from tv_channel  where  count ( tv_channel.* )  > 2  and  tv_channel.series_name = \"Sky Radio\"  group by tv_channel.Country "
    },
    {
        "input": "[struct _ sep0] find id of the tv channels that from the countries where have more than two tv channels or on TV Channel with series name ' Sky Radio ' . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.id from tv_channel  where  count ( tv_channel.* )  > 2  or  tv_channel.series_name = \"Sky Radio\"  group by tv_channel.Country "
    },
    {
        "input": "[struct _ sep0] Find the package choice and series name of the TV channel that has high definition TV and that are on the TV Channel with the series name ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option , tv_channel.series_name from tv_channel  where  tv_channel.Hight_definition_TV = \"yes\"  and  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] Find the package choice and series name of the TV channel that has high definition TV or that are on the TV Channel with the series name ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option , tv_channel.series_name from tv_channel  where  tv_channel.Hight_definition_TV = \"yes\"  or  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] What are the package options and the name of the series for the TV Channel that supports high definition TV and that are on the TV Channel with the series name ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option ( Option ) | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option , tv_channel.series_name from tv_channel  where  tv_channel.Hight_definition_TV = \"yes\"  and  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] What are the package options and the name of the series for the TV Channel that supports high definition TV or that are on the TV Channel with the series name ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option ( Option ) | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option , tv_channel.series_name from tv_channel  where  tv_channel.Hight_definition_TV = \"yes\"  or  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] find the pixel aspect ratio and nation of the tv channels that do not use English and that are on the TV Channel with the series name ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  tv_channel.Language != \"English\"  and  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] find the pixel aspect ratio and nation of the tv channels that do not use English or that are on the TV Channel with the series name ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  tv_channel.Language != \"English\"  or  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] What is the pixel aspect ratio and country of origin for all TV channels that do not use English and that are on the TV Channel with the series name ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  tv_channel.Language != \"English\"  and  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] What is the pixel aspect ratio and country of origin for all TV channels that do not use English or that are on the TV Channel with the series name ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  tv_channel.Language != \"English\"  or  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] What are the ids of all tv channels that have more than 2 TV channels and that are on the TV Channel with the series name ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.id from tv_channel  where  count ( tv_channel.* )  > 2  and  tv_channel.series_name = \"Sky Radio\"  group by tv_channel.Country "
    },
    {
        "input": "[struct _ sep0] What are the ids of all tv channels that have more than 2 TV channels or that are on the TV Channel with the series name ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.id from tv_channel  where  count ( tv_channel.* )  > 2  or  tv_channel.series_name = \"Sky Radio\"  group by tv_channel.Country "
    },
    {
        "input": "[struct _ sep0] What is the air date of TV series with Episode ' A Love of a Lifetime ' , sorted by rating . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_series.Air_Date from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\"  order by tv_series.Rating asc"
    },
    {
        "input": "[struct _ sep0] When did the episode ' A Love of a Lifetime ' air , sorted by rating . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_series.Air_Date from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\"  order by tv_series.Rating asc"
    },
    {
        "input": "[struct _ sep0] What is Weekly Rank of TV series with Episode ' A Love of a Lifetime ' , sorted by rating . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_series.Weekly_Rank from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\"  order by tv_series.Rating asc"
    },
    {
        "input": "[struct _ sep0] What is the weekly rank for the episode ' A Love of a Lifetime ' , sorted by rating . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_series.Weekly_Rank from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\"  order by tv_series.Rating asc"
    },
    {
        "input": "[struct _ sep0] What is the episode for the TV series named ' Sky Radio ' , sorted by rating . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_series.Episode from tv_channel  where  tv_channel.series_name = \"Sky Radio\"  order by tv_series.Rating asc"
    },
    {
        "input": "[struct _ sep0] What is the air date of TV series with Episode ' A Love of a Lifetime ' , ordered by ratings ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_series.Air_Date from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\"  order by tv_series.Rating asc"
    },
    {
        "input": "[struct _ sep0] When did the episode ' A Love of a Lifetime ' air , ordered by ratings ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_series.Air_Date from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\"  order by tv_series.Rating asc"
    },
    {
        "input": "[struct _ sep0] What is Weekly Rank of TV series with Episode ' A Love of a Lifetime ' , ordered by ratings ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_series.Weekly_Rank from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\"  order by tv_series.Rating asc"
    },
    {
        "input": "[struct _ sep0] What is the weekly rank for the episode ' A Love of a Lifetime ' , ordered by ratings ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_series.Weekly_Rank from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\"  order by tv_series.Rating asc"
    },
    {
        "input": "[struct _ sep0] What is the episode for the TV series named ' Sky Radio ' , ordered by ratings ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_series.Episode from tv_channel  where  tv_channel.series_name = \"Sky Radio\"  order by tv_series.Rating asc"
    },
    {
        "input": "[struct _ sep0] List top 3 highest Rating TV series . List the Episode of all TV series showed on TV Channel with series name ' Sky Radio ' . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_series.Episode from tv_channel  where  tv_channel.series_name = \"Sky Radio\"  order by tv_series.Rating desc limit 3"
    },
    {
        "input": "[struct _ sep0] What is minimum and maximum share of TV series , with Episode ' A Love of a Lifetime ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select max ( tv_series.Share )  , min ( tv_series.Share )  from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\" "
    },
    {
        "input": "[struct _ sep0] What is the maximum and minimum share for the TV series , with Episode ' A Love of a Lifetime ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select max ( tv_series.Share )  , min ( tv_series.Share )  from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\" "
    },
    {
        "input": "[struct _ sep0] List the Episode of all TV series showed on TV Channel with series name ' Sky Radio ' and with Episode ' A Love of a Lifetime ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_series.Episode from tv_channel  where  tv_channel.series_name = \"Sky Radio\"  and  tv_series.Episode = \"A Love of a Lifetime\" "
    },
    {
        "input": "[struct _ sep0] List the Episode of all TV series showed on TV Channel with series name ' Sky Radio ' or with Episode ' A Love of a Lifetime ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_series.Episode from tv_channel  where  tv_channel.series_name = \"Sky Radio\"  or  tv_series.Episode = \"A Love of a Lifetime\" "
    },
    {
        "input": "[struct _ sep0] What is the episode for the TV series named ' Sky Radio ' and with Episode ' A Love of a Lifetime ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_series.Episode from tv_channel  where  tv_channel.series_name = \"Sky Radio\"  and  tv_series.Episode = \"A Love of a Lifetime\" "
    },
    {
        "input": "[struct _ sep0] What is the episode for the TV series named ' Sky Radio ' or with Episode ' A Love of a Lifetime ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_series.Episode from tv_channel  where  tv_channel.series_name = \"Sky Radio\"  or  tv_series.Episode = \"A Love of a Lifetime\" "
    },
    {
        "input": "[struct _ sep0] What is minimum and maximum share of TV series , with Episode ' A Love of a Lifetime ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select max ( tv_series.Share )  , min ( tv_series.Share )  from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\" "
    },
    {
        "input": "[struct _ sep0] What is the maximum and minimum share for the TV series , with Episode ' A Love of a Lifetime ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select max ( tv_series.Share )  , min ( tv_series.Share )  from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\" "
    },
    {
        "input": "[struct _ sep0] List the Episode of all TV series showed on TV Channel with series name ' Sky Radio ' and with Episode ' A Love of a Lifetime ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_series.Episode from tv_channel  where  tv_channel.series_name = \"Sky Radio\"  and  tv_series.Episode = \"A Love of a Lifetime\" "
    },
    {
        "input": "[struct _ sep0] List the Episode of all TV series showed on TV Channel with series name ' Sky Radio ' or with Episode ' A Love of a Lifetime ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_series.Episode from tv_channel  where  tv_channel.series_name = \"Sky Radio\"  or  tv_series.Episode = \"A Love of a Lifetime\" "
    },
    {
        "input": "[struct _ sep0] What is the episode for the TV series named ' Sky Radio ' and with Episode ' A Love of a Lifetime ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_series.Episode from tv_channel  where  tv_channel.series_name = \"Sky Radio\"  and  tv_series.Episode = \"A Love of a Lifetime\" "
    },
    {
        "input": "[struct _ sep0] What is the episode for the TV series named ' Sky Radio ' or with Episode ' A Love of a Lifetime ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_series.Episode from tv_channel  where  tv_channel.series_name = \"Sky Radio\"  or  tv_series.Episode = \"A Love of a Lifetime\" "
    },
    {
        "input": "[struct _ sep0] What is the TV Channel of TV series with Episode ' A Love of a Lifetime ' ? List the number of different series names and contents in the TV Channel table . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select count (  distinct tv_channel.series_name )  , count (  distinct tv_channel.Content )  from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\" "
    },
    {
        "input": "[struct _ sep0] What is the TV Channel of TV series with Episode ' A Love of a Lifetime ' ? List the language used least number of TV Channel . List language and number of TV Channel . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Language , count ( tv_channel.* )  from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\"  group by tv_channel.Language  order by count ( tv_channel.* )  asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the TV Channel of TV series with Episode ' A Love of a Lifetime ' ? List each language and the number of TV Channels using it . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Language , count ( tv_channel.* )  from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\"  group by tv_channel.Language "
    },
    {
        "input": "[struct _ sep0] What is the TV Channel of TV series with Episode ' A Love of a Lifetime ' ? Find the package choice and series name of the TV channel that has high definition TV . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option , tv_channel.series_name from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\"  and  tv_channel.Hight_definition_TV = \"yes\" "
    },
    {
        "input": "[struct _ sep0] What is the TV Channel of TV series with Episode ' A Love of a Lifetime ' ? find the pixel aspect ratio and nation of the tv channels that do not use English . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\"  and  tv_channel.Language != \"English\" "
    },
    {
        "input": "[struct _ sep0] What is the TV Channel of TV series with Episode ' A Love of a Lifetime ' ? find id of the tv channels that from the countries where have more than two tv channels . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.id from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\"  and  count ( tv_channel.* )  > 2  group by tv_channel.Country "
    },
    {
        "input": "[struct _ sep0] Find the package choice and series name of the TV channel that has high definition TV and that has the episode ' A Love of a Lifetime ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option , tv_channel.series_name from tv_channel  where  tv_channel.Hight_definition_TV = \"yes\"  and  tv_series.Episode = \"A Love of a Lifetime\" "
    },
    {
        "input": "[struct _ sep0] Find the package choice and series name of the TV channel that has high definition TV or that has the episode ' A Love of a Lifetime ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option , tv_channel.series_name from tv_channel  where  tv_channel.Hight_definition_TV = \"yes\"  or  tv_series.Episode = \"A Love of a Lifetime\" "
    },
    {
        "input": "[struct _ sep0] What are the package options and the name of the series for the TV Channel that supports high definition TV and that has the episode ' A Love of a Lifetime ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option ( Option ) | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option , tv_channel.series_name from tv_channel  where  tv_channel.Hight_definition_TV = \"yes\"  and  tv_series.Episode = \"A Love of a Lifetime\" "
    },
    {
        "input": "[struct _ sep0] What are the package options and the name of the series for the TV Channel that supports high definition TV or that has the episode ' A Love of a Lifetime ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option ( Option ) | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option , tv_channel.series_name from tv_channel  where  tv_channel.Hight_definition_TV = \"yes\"  or  tv_series.Episode = \"A Love of a Lifetime\" "
    },
    {
        "input": "[struct _ sep0] What are the countries that have cartoons on TV that were written by Todd Casey and that has the episode ' A Love of a Lifetime ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Country from tv_channel  where  cartoon.Written_by = \"Todd Casey\"  and  tv_series.Episode = \"A Love of a Lifetime\" "
    },
    {
        "input": "[struct _ sep0] What are the countries that have cartoons on TV that were written by Todd Casey or that has the episode ' A Love of a Lifetime ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Country from tv_channel  where  cartoon.Written_by = \"Todd Casey\"  or  tv_series.Episode = \"A Love of a Lifetime\" "
    },
    {
        "input": "[struct _ sep0] find the pixel aspect ratio and nation of the tv channels that do not use English and that has the episode ' A Love of a Lifetime ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  tv_channel.Language != \"English\"  and  tv_series.Episode = \"A Love of a Lifetime\" "
    },
    {
        "input": "[struct _ sep0] find the pixel aspect ratio and nation of the tv channels that do not use English or that has the episode ' A Love of a Lifetime ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  tv_channel.Language != \"English\"  or  tv_series.Episode = \"A Love of a Lifetime\" "
    },
    {
        "input": "[struct _ sep0] What is the pixel aspect ratio and country of origin for all TV channels that do not use English and that has the episode ' A Love of a Lifetime ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  tv_channel.Language != \"English\"  and  tv_series.Episode = \"A Love of a Lifetime\" "
    },
    {
        "input": "[struct _ sep0] What is the pixel aspect ratio and country of origin for all TV channels that do not use English or that has the episode ' A Love of a Lifetime ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  tv_channel.Language != \"English\"  or  tv_series.Episode = \"A Love of a Lifetime\" "
    },
    {
        "input": "[struct _ sep0] What are the ids of all tv channels that have more than 2 TV channels and that has the episode ' A Love of a Lifetime ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.id from tv_channel  where  count ( tv_channel.* )  > 2  and  tv_series.Episode = \"A Love of a Lifetime\"  group by tv_channel.Country "
    },
    {
        "input": "[struct _ sep0] What are the ids of all tv channels that have more than 2 TV channels or that has the episode ' A Love of a Lifetime ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.id from tv_channel  where  count ( tv_channel.* )  > 2  or  tv_series.Episode = \"A Love of a Lifetime\"  group by tv_channel.Country "
    },
    {
        "input": "[struct _ sep0] What is the air date of TV series with Episode ' A Love of a Lifetime ' and on TV Channel with series name ' Sky Radio ' . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_series.Air_Date from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\"  and  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] What is the air date of TV series with Episode ' A Love of a Lifetime ' or on TV Channel with series name ' Sky Radio ' . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_series.Air_Date from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\"  or  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] What is Weekly Rank of TV series with Episode ' A Love of a Lifetime ' and on TV Channel with series name ' Sky Radio ' . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_series.Weekly_Rank from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\"  and  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] What is Weekly Rank of TV series with Episode ' A Love of a Lifetime ' or on TV Channel with series name ' Sky Radio ' . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_series.Weekly_Rank from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\"  or  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] find id of the tv channels that from the countries where have more than two tv channels and on TV Channel with series name ' Sky Radio ' . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.id from tv_channel  where  count ( tv_channel.* )  > 2  and  tv_channel.series_name = \"Sky Radio\"  group by tv_channel.Country "
    },
    {
        "input": "[struct _ sep0] find id of the tv channels that from the countries where have more than two tv channels or on TV Channel with series name ' Sky Radio ' . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.id from tv_channel  where  count ( tv_channel.* )  > 2  or  tv_channel.series_name = \"Sky Radio\"  group by tv_channel.Country "
    },
    {
        "input": "[struct _ sep0] How many TV Channel using language English and named ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select count ( tv_channel.* )  from tv_channel  where  tv_channel.Language = \"English\"  and  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] How many TV Channel using language English or named ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select count ( tv_channel.* )  from tv_channel  where  tv_channel.Language = \"English\"  or  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] How many TV Channels use the English language and named ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select count ( tv_channel.* )  from tv_channel  where  tv_channel.Language = \"English\"  and  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] How many TV Channels use the English language or named ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select count ( tv_channel.* )  from tv_channel  where  tv_channel.Language = \"English\"  or  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] What is minimum and maximum share of TV series that named ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select max ( tv_series.Share )  , min ( tv_series.Share )  from tv_channel  where  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] What is the maximum and minimum share for the TV series that named ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select max ( tv_series.Share )  , min ( tv_series.Share )  from tv_channel  where  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] What is the air date of TV series with Episode ' A Love of a Lifetime ' and named ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_series.Air_Date from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\"  and  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] What is the air date of TV series with Episode ' A Love of a Lifetime ' or named ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_series.Air_Date from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\"  or  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] What is Weekly Rank of TV series with Episode ' A Love of a Lifetime ' and named ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_series.Weekly_Rank from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\"  and  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] What is Weekly Rank of TV series with Episode ' A Love of a Lifetime ' or named ' Sky Radio ' ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_series.Weekly_Rank from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\"  or  tv_channel.series_name = \"Sky Radio\" "
    },
    {
        "input": "[struct _ sep0] What is the title of all the cartools that are on the TV Channel with the series name ' Sky Radio ' and that has high definition TV . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title from tv_channel  where  tv_channel.series_name = \"Sky Radio\"  and  tv_channel.Hight_definition_TV = \"yes\" "
    },
    {
        "input": "[struct _ sep0] What is the title of all the cartools that are on the TV Channel with the series name ' Sky Radio ' or that has high definition TV . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title from tv_channel  where  tv_channel.series_name = \"Sky Radio\"  or  tv_channel.Hight_definition_TV = \"yes\" "
    },
    {
        "input": "[struct _ sep0] What is the name of the series that has the episode ' A Love of a Lifetime ' and that has high definition TV . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.series_name from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\"  and  tv_channel.Hight_definition_TV = \"yes\" "
    },
    {
        "input": "[struct _ sep0] What is the name of the series that has the episode ' A Love of a Lifetime ' or that has high definition TV . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.series_name from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\"  or  tv_channel.Hight_definition_TV = \"yes\" "
    },
    {
        "input": "[struct _ sep0] What are the countries that have cartoons on TV that were written by Todd Casey and that has high definition TV . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Country from tv_channel  where  cartoon.Written_by = \"Todd Casey\"  and  tv_channel.Hight_definition_TV = \"yes\" "
    },
    {
        "input": "[struct _ sep0] What are the countries that have cartoons on TV that were written by Todd Casey or that has high definition TV . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Country from tv_channel  where  cartoon.Written_by = \"Todd Casey\"  or  tv_channel.Hight_definition_TV = \"yes\" "
    },
    {
        "input": "[struct _ sep0] find the pixel aspect ratio and nation of the tv channels that do not use English and that has high definition TV . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  tv_channel.Language != \"English\"  and  tv_channel.Hight_definition_TV = \"yes\" "
    },
    {
        "input": "[struct _ sep0] find the pixel aspect ratio and nation of the tv channels that do not use English or that has high definition TV . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  tv_channel.Language != \"English\"  or  tv_channel.Hight_definition_TV = \"yes\" "
    },
    {
        "input": "[struct _ sep0] What is the pixel aspect ratio and country of origin for all TV channels that do not use English and that has high definition TV . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  tv_channel.Language != \"English\"  and  tv_channel.Hight_definition_TV = \"yes\" "
    },
    {
        "input": "[struct _ sep0] What is the pixel aspect ratio and country of origin for all TV channels that do not use English or that has high definition TV . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  tv_channel.Language != \"English\"  or  tv_channel.Hight_definition_TV = \"yes\" "
    },
    {
        "input": "[struct _ sep0] What are the ids of all tv channels that have more than 2 TV channels and that has high definition TV . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.id from tv_channel  where  count ( tv_channel.* )  > 2  and  tv_channel.Hight_definition_TV = \"yes\"  group by tv_channel.Country "
    },
    {
        "input": "[struct _ sep0] What are the ids of all tv channels that have more than 2 TV channels or that has high definition TV . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.id from tv_channel  where  count ( tv_channel.* )  > 2  or  tv_channel.Hight_definition_TV = \"yes\"  group by tv_channel.Country "
    },
    {
        "input": "[struct _ sep0] What is the title of all the cartools that are on the TV Channel with the series name ' Sky Radio ' and that supports high definition TV ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title from tv_channel  where  tv_channel.series_name = \"Sky Radio\"  and  tv_channel.Hight_definition_TV = \"yes\" "
    },
    {
        "input": "[struct _ sep0] What is the title of all the cartools that are on the TV Channel with the series name ' Sky Radio ' or that supports high definition TV ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title from tv_channel  where  tv_channel.series_name = \"Sky Radio\"  or  tv_channel.Hight_definition_TV = \"yes\" "
    },
    {
        "input": "[struct _ sep0] What is the name of the series that has the episode ' A Love of a Lifetime ' and that supports high definition TV ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.series_name from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\"  and  tv_channel.Hight_definition_TV = \"yes\" "
    },
    {
        "input": "[struct _ sep0] What is the name of the series that has the episode ' A Love of a Lifetime ' or that supports high definition TV ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.series_name from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\"  or  tv_channel.Hight_definition_TV = \"yes\" "
    },
    {
        "input": "[struct _ sep0] What are the countries that have cartoons on TV that were written by Todd Casey and that supports high definition TV ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Country from tv_channel  where  cartoon.Written_by = \"Todd Casey\"  and  tv_channel.Hight_definition_TV = \"yes\" "
    },
    {
        "input": "[struct _ sep0] What are the countries that have cartoons on TV that were written by Todd Casey or that supports high definition TV ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Country from tv_channel  where  cartoon.Written_by = \"Todd Casey\"  or  tv_channel.Hight_definition_TV = \"yes\" "
    },
    {
        "input": "[struct _ sep0] find the pixel aspect ratio and nation of the tv channels that do not use English and that supports high definition TV ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  tv_channel.Language != \"English\"  and  tv_channel.Hight_definition_TV = \"yes\" "
    },
    {
        "input": "[struct _ sep0] find the pixel aspect ratio and nation of the tv channels that do not use English or that supports high definition TV ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  tv_channel.Language != \"English\"  or  tv_channel.Hight_definition_TV = \"yes\" "
    },
    {
        "input": "[struct _ sep0] What is the pixel aspect ratio and country of origin for all TV channels that do not use English and that supports high definition TV ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  tv_channel.Language != \"English\"  and  tv_channel.Hight_definition_TV = \"yes\" "
    },
    {
        "input": "[struct _ sep0] What is the pixel aspect ratio and country of origin for all TV channels that do not use English or that supports high definition TV ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  tv_channel.Language != \"English\"  or  tv_channel.Hight_definition_TV = \"yes\" "
    },
    {
        "input": "[struct _ sep0] What are the ids of all tv channels that have more than 2 TV channels and that supports high definition TV ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.id from tv_channel  where  count ( tv_channel.* )  > 2  and  tv_channel.Hight_definition_TV = \"yes\"  group by tv_channel.Country "
    },
    {
        "input": "[struct _ sep0] What are the ids of all tv channels that have more than 2 TV channels or that supports high definition TV ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.id from tv_channel  where  count ( tv_channel.* )  > 2  or  tv_channel.Hight_definition_TV = \"yes\"  group by tv_channel.Country "
    },
    {
        "input": "[struct _ sep0] What are the names of all cartoons directed by Ben Jones and are playing some cartoon written by Todd Casey ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title from tv_channel  where  cartoon.Directed_by = \"Ben Jones\"  and  cartoon.Written_by = \"Todd Casey\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all cartoons directed by Ben Jones or are playing some cartoon written by Todd Casey ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title from tv_channel  where  cartoon.Directed_by = \"Ben Jones\"  or  cartoon.Written_by = \"Todd Casey\" "
    },
    {
        "input": "[struct _ sep0] How many TV Channel using language English and are playing some cartoon written by Todd Casey ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select count ( tv_channel.* )  from tv_channel  where  tv_channel.Language = \"English\"  and  cartoon.Written_by = \"Todd Casey\" "
    },
    {
        "input": "[struct _ sep0] How many TV Channels use the English language and are playing some cartoon written by Todd Casey ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select count ( tv_channel.* )  from tv_channel  where  tv_channel.Language = \"English\"  and  cartoon.Written_by = \"Todd Casey\" "
    },
    {
        "input": "[struct _ sep0] What is the name of the series that has the episode ' A Love of a Lifetime ' and that have cartoons on TV that were written by Todd Casey ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.series_name from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\"  and  cartoon.Written_by = \"Todd Casey\" "
    },
    {
        "input": "[struct _ sep0] Find the package choice and series name of the TV channel that has high definition TV and that have cartoons on TV that were written by Todd Casey ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option , tv_channel.series_name from tv_channel  where  tv_channel.Hight_definition_TV = \"yes\"  and  cartoon.Written_by = \"Todd Casey\" "
    },
    {
        "input": "[struct _ sep0] What are the package options and the name of the series for the TV Channel that supports high definition TV and that have cartoons on TV that were written by Todd Casey ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option ( Option ) | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option , tv_channel.series_name from tv_channel  where  tv_channel.Hight_definition_TV = \"yes\"  and  cartoon.Written_by = \"Todd Casey\" "
    },
    {
        "input": "[struct _ sep0] find the pixel aspect ratio and nation of the tv channels that do not use English and that have cartoons on TV that were written by Todd Casey ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  tv_channel.Language != \"English\"  and  cartoon.Written_by = \"Todd Casey\" "
    },
    {
        "input": "[struct _ sep0] What is the pixel aspect ratio and country of origin for all TV channels that do not use English and that have cartoons on TV that were written by Todd Casey ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  tv_channel.Language != \"English\"  and  cartoon.Written_by = \"Todd Casey\" "
    },
    {
        "input": "[struct _ sep0] What are the ids of all tv channels that have more than 2 TV channels and that have cartoons on TV that were written by Todd Casey ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.id from tv_channel  where  count ( tv_channel.* )  > 2  and  cartoon.Written_by = \"Todd Casey\"  group by tv_channel.Country "
    },
    {
        "input": "[struct _ sep0] What are the names of all cartoons directed by Ben Jones and written by Todd Casey ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title from tv_channel  where  cartoon.Directed_by = \"Ben Jones\"  and  cartoon.Written_by = \"Todd Casey\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all cartoons directed by Ben Jones or written by Todd Casey ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title from tv_channel  where  cartoon.Directed_by = \"Ben Jones\"  or  cartoon.Written_by = \"Todd Casey\" "
    },
    {
        "input": "[struct _ sep0] How many TV Channel using language English and written by Todd Casey ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select count ( tv_channel.* )  from tv_channel  where  tv_channel.Language = \"English\"  and  cartoon.Written_by = \"Todd Casey\" "
    },
    {
        "input": "[struct _ sep0] How many TV Channels use the English language and written by Todd Casey ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select count ( tv_channel.* )  from tv_channel  where  tv_channel.Language = \"English\"  and  cartoon.Written_by = \"Todd Casey\" "
    },
    {
        "input": "[struct _ sep0] What is the name of the series that has the episode ' A Love of a Lifetime ' and that are not playing cartoons ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.series_name from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\"  except_  @.@ join cartoon.* "
    },
    {
        "input": "[struct _ sep0] What is the name of the series that has the episode ' A Love of a Lifetime ' or that are not playing cartoons ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.series_name from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\"  except_  @.@ join cartoon.* "
    },
    {
        "input": "[struct _ sep0] Find the package choice and series name of the TV channel that has high definition TV and that are not playing cartoons ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option , tv_channel.series_name from tv_channel  where  tv_channel.Hight_definition_TV = \"yes\"  except_  @.@ join cartoon.* "
    },
    {
        "input": "[struct _ sep0] Find the package choice and series name of the TV channel that has high definition TV or that are not playing cartoons ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option , tv_channel.series_name from tv_channel  where  tv_channel.Hight_definition_TV = \"yes\"  except_  @.@ join cartoon.* "
    },
    {
        "input": "[struct _ sep0] What are the package options and the name of the series for the TV Channel that supports high definition TV and that are not playing cartoons ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option ( Option ) | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option , tv_channel.series_name from tv_channel  where  tv_channel.Hight_definition_TV = \"yes\"  except_  @.@ join cartoon.* "
    },
    {
        "input": "[struct _ sep0] What are the package options and the name of the series for the TV Channel that supports high definition TV or that are not playing cartoons ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option ( Option ) | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option , tv_channel.series_name from tv_channel  where  tv_channel.Hight_definition_TV = \"yes\"  except_  @.@ join cartoon.* "
    },
    {
        "input": "[struct _ sep0] find the pixel aspect ratio and nation of the tv channels that do not use English and that are not playing cartoons ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  tv_channel.Language != \"English\"  except_  @.@ join cartoon.* "
    },
    {
        "input": "[struct _ sep0] find the pixel aspect ratio and nation of the tv channels that do not use English or that are not playing cartoons ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  tv_channel.Language != \"English\"  except_  @.@ join cartoon.* "
    },
    {
        "input": "[struct _ sep0] What is the pixel aspect ratio and country of origin for all TV channels that do not use English and that are not playing cartoons ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  tv_channel.Language != \"English\"  except_  @.@ join cartoon.* "
    },
    {
        "input": "[struct _ sep0] What is the pixel aspect ratio and country of origin for all TV channels that do not use English or that are not playing cartoons ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  tv_channel.Language != \"English\"  except_  @.@ join cartoon.* "
    },
    {
        "input": "[struct _ sep0] What are the ids of all tv channels that have more than 2 TV channels and that are not playing cartoons ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.id from tv_channel  where  count ( tv_channel.* )  > 2  except_  @.@ join cartoon.*  group by tv_channel.Country "
    },
    {
        "input": "[struct _ sep0] What are the ids of all tv channels that have more than 2 TV channels or that are not playing cartoons ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.id from tv_channel  where  count ( tv_channel.* )  > 2  except_  @.@ join cartoon.*  group by tv_channel.Country "
    },
    {
        "input": "[struct _ sep0] What are the names of all cartoons directed by Ben Jones and written by Todd Casey ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title from tv_channel  where  cartoon.Directed_by = \"Ben Jones\"  and  cartoon.Written_by = \"Todd Casey\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all cartoons directed by Ben Jones or written by Todd Casey ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title from tv_channel  where  cartoon.Directed_by = \"Ben Jones\"  or  cartoon.Written_by = \"Todd Casey\" "
    },
    {
        "input": "[struct _ sep0] How many TV Channel using language English and written by Todd Casey ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select count ( tv_channel.* )  from tv_channel  where  tv_channel.Language = \"English\"  and  cartoon.Written_by = \"Todd Casey\" "
    },
    {
        "input": "[struct _ sep0] How many TV Channels use the English language and written by Todd Casey ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select count ( tv_channel.* )  from tv_channel  where  tv_channel.Language = \"English\"  and  cartoon.Written_by = \"Todd Casey\" "
    },
    {
        "input": "[struct _ sep0] which countries ' tv channels are playing some cartoon written by Todd Casey and directed by Ben Jones and Michael Chang ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Michael Chang, Ben Jones ), written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Country from tv_channel  where  cartoon.Written_by = \"Todd Casey\"  and  cartoon.Directed_by = \"Ben Jones\"  and  cartoon.Directed_by = \"Michael Chang\" "
    },
    {
        "input": "[struct _ sep0] which countries ' tv channels are playing some cartoon written by Todd Casey and directed by Ben Jones and cartoons directed by Michael Chang ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Michael Chang, Ben Jones ), written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Country from tv_channel  where  cartoon.Written_by = \"Todd Casey\"  and  cartoon.Directed_by = \"Ben Jones\"  and  cartoon.Directed_by = \"Michael Chang\" "
    },
    {
        "input": "[struct _ sep0] What is the title of all the cartools that are on the TV Channel with the series name ' Sky Radio ' and that do not use English . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title from tv_channel  where  tv_channel.series_name = \"Sky Radio\"  and  tv_channel.Language != \"English\" "
    },
    {
        "input": "[struct _ sep0] What is the title of all the cartools that are on the TV Channel with the series name ' Sky Radio ' or that do not use English . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title from tv_channel  where  tv_channel.series_name = \"Sky Radio\"  or  tv_channel.Language != \"English\" "
    },
    {
        "input": "[struct _ sep0] What is the name of the series that has the episode ' A Love of a Lifetime ' and that do not use English . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.series_name from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\"  and  tv_channel.Language != \"English\" "
    },
    {
        "input": "[struct _ sep0] What is the name of the series that has the episode ' A Love of a Lifetime ' or that do not use English . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.series_name from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\"  or  tv_channel.Language != \"English\" "
    },
    {
        "input": "[struct _ sep0] Find the package choice and series name of the TV channel that has high definition TV and that do not use English . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option , tv_channel.series_name from tv_channel  where  tv_channel.Hight_definition_TV = \"yes\"  and  tv_channel.Language != \"English\" "
    },
    {
        "input": "[struct _ sep0] Find the package choice and series name of the TV channel that has high definition TV or that do not use English . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option , tv_channel.series_name from tv_channel  where  tv_channel.Hight_definition_TV = \"yes\"  or  tv_channel.Language != \"English\" "
    },
    {
        "input": "[struct _ sep0] What are the package options and the name of the series for the TV Channel that supports high definition TV and that do not use English . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option ( Option ) | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option , tv_channel.series_name from tv_channel  where  tv_channel.Hight_definition_TV = \"yes\"  and  tv_channel.Language != \"English\" "
    },
    {
        "input": "[struct _ sep0] What are the package options and the name of the series for the TV Channel that supports high definition TV or that do not use English . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option ( Option ) | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option , tv_channel.series_name from tv_channel  where  tv_channel.Hight_definition_TV = \"yes\"  or  tv_channel.Language != \"English\" "
    },
    {
        "input": "[struct _ sep0] What are the countries that have cartoons on TV that were written by Todd Casey and that do not use English . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Country from tv_channel  where  cartoon.Written_by = \"Todd Casey\"  and  tv_channel.Language != \"English\" "
    },
    {
        "input": "[struct _ sep0] What are the countries that have cartoons on TV that were written by Todd Casey or that do not use English . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Country from tv_channel  where  cartoon.Written_by = \"Todd Casey\"  or  tv_channel.Language != \"English\" "
    },
    {
        "input": "[struct _ sep0] What are the ids of all tv channels that have more than 2 TV channels and that do not use English . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.id from tv_channel  where  count ( tv_channel.* )  > 2  and  tv_channel.Language != \"English\"  group by tv_channel.Country "
    },
    {
        "input": "[struct _ sep0] What are the ids of all tv channels that have more than 2 TV channels or that do not use English . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.id from tv_channel  where  count ( tv_channel.* )  > 2  or  tv_channel.Language != \"English\"  group by tv_channel.Country "
    },
    {
        "input": "[struct _ sep0] What is the title of all the cartools that are on the TV Channel with the series name ' Sky Radio ' and that do not use English ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title from tv_channel  where  tv_channel.series_name = \"Sky Radio\"  and  tv_channel.Language != \"English\" "
    },
    {
        "input": "[struct _ sep0] What is the title of all the cartools that are on the TV Channel with the series name ' Sky Radio ' or that do not use English ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name ( Sky Radio ), country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select cartoon.Title from tv_channel  where  tv_channel.series_name = \"Sky Radio\"  or  tv_channel.Language != \"English\" "
    },
    {
        "input": "[struct _ sep0] What is the name of the series that has the episode ' A Love of a Lifetime ' and that do not use English ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.series_name from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\"  and  tv_channel.Language != \"English\" "
    },
    {
        "input": "[struct _ sep0] What is the name of the series that has the episode ' A Love of a Lifetime ' or that do not use English ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.series_name from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\"  or  tv_channel.Language != \"English\" "
    },
    {
        "input": "[struct _ sep0] Find the package choice and series name of the TV channel that has high definition TV and that do not use English ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option , tv_channel.series_name from tv_channel  where  tv_channel.Hight_definition_TV = \"yes\"  and  tv_channel.Language != \"English\" "
    },
    {
        "input": "[struct _ sep0] Find the package choice and series name of the TV channel that has high definition TV or that do not use English ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option , tv_channel.series_name from tv_channel  where  tv_channel.Hight_definition_TV = \"yes\"  or  tv_channel.Language != \"English\" "
    },
    {
        "input": "[struct _ sep0] What are the package options and the name of the series for the TV Channel that supports high definition TV and that do not use English ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option ( Option ) | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option , tv_channel.series_name from tv_channel  where  tv_channel.Hight_definition_TV = \"yes\"  and  tv_channel.Language != \"English\" "
    },
    {
        "input": "[struct _ sep0] What are the package options and the name of the series for the TV Channel that supports high definition TV or that do not use English ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option ( Option ) | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option , tv_channel.series_name from tv_channel  where  tv_channel.Hight_definition_TV = \"yes\"  or  tv_channel.Language != \"English\" "
    },
    {
        "input": "[struct _ sep0] What are the countries that have cartoons on TV that were written by Todd Casey and that do not use English ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Country from tv_channel  where  cartoon.Written_by = \"Todd Casey\"  and  tv_channel.Language != \"English\" "
    },
    {
        "input": "[struct _ sep0] What are the countries that have cartoons on TV that were written by Todd Casey or that do not use English ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Country from tv_channel  where  cartoon.Written_by = \"Todd Casey\"  or  tv_channel.Language != \"English\" "
    },
    {
        "input": "[struct _ sep0] What are the ids of all tv channels that have more than 2 TV channels and that do not use English ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.id from tv_channel  where  count ( tv_channel.* )  > 2  and  tv_channel.Language != \"English\"  group by tv_channel.Country "
    },
    {
        "input": "[struct _ sep0] What are the ids of all tv channels that have more than 2 TV channels or that do not use English ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.id from tv_channel  where  count ( tv_channel.* )  > 2  or  tv_channel.Language != \"English\"  group by tv_channel.Country "
    },
    {
        "input": "[struct _ sep0] What is the name of the series that has the episode ' A Love of a Lifetime ' and that do not play any cartoon ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.series_name from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\"  except_  @.@ join cartoon.* "
    },
    {
        "input": "[struct _ sep0] What is the name of the series that has the episode ' A Love of a Lifetime ' or that do not play any cartoon ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.series_name from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\"  except_  @.@ join cartoon.* "
    },
    {
        "input": "[struct _ sep0] Find the package choice and series name of the TV channel that has high definition TV and that do not play any cartoon ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option , tv_channel.series_name from tv_channel  where  tv_channel.Hight_definition_TV = \"yes\"  except_  @.@ join cartoon.* "
    },
    {
        "input": "[struct _ sep0] Find the package choice and series name of the TV channel that has high definition TV or that do not play any cartoon ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option , tv_channel.series_name from tv_channel  where  tv_channel.Hight_definition_TV = \"yes\"  except_  @.@ join cartoon.* "
    },
    {
        "input": "[struct _ sep0] What are the package options and the name of the series for the TV Channel that supports high definition TV and that do not play any cartoon ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option ( Option ) | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option , tv_channel.series_name from tv_channel  where  tv_channel.Hight_definition_TV = \"yes\"  except_  @.@ join cartoon.* "
    },
    {
        "input": "[struct _ sep0] What are the package options and the name of the series for the TV Channel that supports high definition TV or that do not play any cartoon ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option ( Option ) | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option , tv_channel.series_name from tv_channel  where  tv_channel.Hight_definition_TV = \"yes\"  except_  @.@ join cartoon.* "
    },
    {
        "input": "[struct _ sep0] find the pixel aspect ratio and nation of the tv channels that do not use English and that do not play any cartoon ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  tv_channel.Language != \"English\"  except_  @.@ join cartoon.* "
    },
    {
        "input": "[struct _ sep0] find the pixel aspect ratio and nation of the tv channels that do not use English or that do not play any cartoon ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  tv_channel.Language != \"English\"  except_  @.@ join cartoon.* "
    },
    {
        "input": "[struct _ sep0] What is the pixel aspect ratio and country of origin for all TV channels that do not use English and that do not play any cartoon ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  tv_channel.Language != \"English\"  except_  @.@ join cartoon.* "
    },
    {
        "input": "[struct _ sep0] What is the pixel aspect ratio and country of origin for all TV channels that do not use English or that do not play any cartoon ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  tv_channel.Language != \"English\"  except_  @.@ join cartoon.* "
    },
    {
        "input": "[struct _ sep0] What are the ids of all tv channels that have more than 2 TV channels and that do not play any cartoon ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.id from tv_channel  where  count ( tv_channel.* )  > 2  except_  @.@ join cartoon.*  group by tv_channel.Country "
    },
    {
        "input": "[struct _ sep0] What are the ids of all tv channels that have more than 2 TV channels or that do not play any cartoon ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.id from tv_channel  where  count ( tv_channel.* )  > 2  except_  @.@ join cartoon.*  group by tv_channel.Country "
    },
    {
        "input": "[struct _ sep0] How many cartoons were written by ' Joseph Kuhr ' and directed by Ben Jones . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by ( Joseph Kuhr ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select count ( cartoon.* )  from tv_channel  where  cartoon.Written_by = \"Joseph Kuhr\"  and  cartoon.Directed_by = \"Ben Jones\" "
    },
    {
        "input": "[struct _ sep0] How many cartoons were written by ' Joseph Kuhr ' or directed by Ben Jones . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by ( Joseph Kuhr ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select count ( cartoon.* )  from tv_channel  where  cartoon.Written_by = \"Joseph Kuhr\"  or  cartoon.Directed_by = \"Ben Jones\" "
    },
    {
        "input": "[struct _ sep0] What is the number of cartoones written by Joseph Kuhr and directed by Ben Jones . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by ( Joseph Kuhr ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select count ( cartoon.* )  from tv_channel  where  cartoon.Written_by = \"Joseph Kuhr\"  and  cartoon.Directed_by = \"Ben Jones\" "
    },
    {
        "input": "[struct _ sep0] What is the number of cartoones written by Joseph Kuhr or directed by Ben Jones . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by ( Joseph Kuhr ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select count ( cartoon.* )  from tv_channel  where  cartoon.Written_by = \"Joseph Kuhr\"  or  cartoon.Directed_by = \"Ben Jones\" "
    },
    {
        "input": "[struct _ sep0] How many TV Channel using language English and directed by Ben Jones . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select count ( tv_channel.* )  from tv_channel  where  tv_channel.Language = \"English\"  and  cartoon.Directed_by = \"Ben Jones\" "
    },
    {
        "input": "[struct _ sep0] How many TV Channels use the English language and directed by Ben Jones . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select count ( tv_channel.* )  from tv_channel  where  tv_channel.Language = \"English\"  and  cartoon.Directed_by = \"Ben Jones\" "
    },
    {
        "input": "[struct _ sep0] which countries ' tv channels are playing some cartoon written by Todd Casey and directed by Ben Jones . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Country from tv_channel  where  cartoon.Written_by = \"Todd Casey\"  and  cartoon.Directed_by = \"Ben Jones\" "
    },
    {
        "input": "[struct _ sep0] which countries ' tv channels are playing some cartoon written by Todd Casey or directed by Ben Jones . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Country from tv_channel  where  cartoon.Written_by = \"Todd Casey\"  or  cartoon.Directed_by = \"Ben Jones\" "
    },
    {
        "input": "[struct _ sep0] What is the name of the series that has the episode ' A Love of a Lifetime ' and that do not have any cartoon directed by Ben Jones . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.series_name from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\"  and  @.@ not in cartoon.*  and  cartoon.Directed_by = \"Ben Jones\" "
    },
    {
        "input": "[struct _ sep0] Find the package choice and series name of the TV channel that has high definition TV and that do not have any cartoon directed by Ben Jones . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option , tv_channel.series_name from tv_channel  where  tv_channel.Hight_definition_TV = \"yes\"  and  @.@ not in cartoon.*  and  cartoon.Directed_by = \"Ben Jones\" "
    },
    {
        "input": "[struct _ sep0] What are the package options and the name of the series for the TV Channel that supports high definition TV and that do not have any cartoon directed by Ben Jones . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option ( Option ) | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option , tv_channel.series_name from tv_channel  where  tv_channel.Hight_definition_TV = \"yes\"  and  @.@ not in cartoon.*  and  cartoon.Directed_by = \"Ben Jones\" "
    },
    {
        "input": "[struct _ sep0] find the pixel aspect ratio and nation of the tv channels that do not use English and that do not have any cartoon directed by Ben Jones . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  tv_channel.Language != \"English\"  and  @.@ not in cartoon.*  and  cartoon.Directed_by = \"Ben Jones\" "
    },
    {
        "input": "[struct _ sep0] What is the pixel aspect ratio and country of origin for all TV channels that do not use English and that do not have any cartoon directed by Ben Jones . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  tv_channel.Language != \"English\"  and  @.@ not in cartoon.*  and  cartoon.Directed_by = \"Ben Jones\" "
    },
    {
        "input": "[struct _ sep0] What are the ids of all tv channels that have more than 2 TV channels and that do not have any cartoon directed by Ben Jones . [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.id from tv_channel  where  count ( tv_channel.* )  > 2  and  @.@ not in cartoon.*  and  cartoon.Directed_by = \"Ben Jones\"  group by tv_channel.Country "
    },
    {
        "input": "[struct _ sep0] What is the name of the series that has the episode ' A Love of a Lifetime ' and that are not playing any cartoons ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.series_name from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\"  and  @.@ not in cartoon.* "
    },
    {
        "input": "[struct _ sep0] What is the name of the series that has the episode ' A Love of a Lifetime ' or that are not playing any cartoons ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode ( A Love of a Lifetime ), air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.series_name from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\"  or  @.@ not in cartoon.* "
    },
    {
        "input": "[struct _ sep0] Find the package choice and series name of the TV channel that has high definition TV and that are not playing any cartoons ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option , tv_channel.series_name from tv_channel  where  tv_channel.Hight_definition_TV = \"yes\"  and  @.@ not in cartoon.* "
    },
    {
        "input": "[struct _ sep0] Find the package choice and series name of the TV channel that has high definition TV or that are not playing any cartoons ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option , tv_channel.series_name from tv_channel  where  tv_channel.Hight_definition_TV = \"yes\"  or  @.@ not in cartoon.* "
    },
    {
        "input": "[struct _ sep0] What are the package options and the name of the series for the TV Channel that supports high definition TV and that are not playing any cartoons ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option ( Option ) | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option , tv_channel.series_name from tv_channel  where  tv_channel.Hight_definition_TV = \"yes\"  and  @.@ not in cartoon.* "
    },
    {
        "input": "[struct _ sep0] What are the package options and the name of the series for the TV Channel that supports high definition TV or that are not playing any cartoons ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option ( Option ) | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Package_Option , tv_channel.series_name from tv_channel  where  tv_channel.Hight_definition_TV = \"yes\"  or  @.@ not in cartoon.* "
    },
    {
        "input": "[struct _ sep0] find the pixel aspect ratio and nation of the tv channels that do not use English and that are not playing any cartoons ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  tv_channel.Language != \"English\"  and  @.@ not in cartoon.* "
    },
    {
        "input": "[struct _ sep0] find the pixel aspect ratio and nation of the tv channels that do not use English or that are not playing any cartoons ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  tv_channel.Language != \"English\"  or  @.@ not in cartoon.* "
    },
    {
        "input": "[struct _ sep0] What is the pixel aspect ratio and country of origin for all TV channels that do not use English and that are not playing any cartoons ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  tv_channel.Language != \"English\"  and  @.@ not in cartoon.* "
    },
    {
        "input": "[struct _ sep0] What is the pixel aspect ratio and country of origin for all TV channels that do not use English or that are not playing any cartoons ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  tv_channel.Language != \"English\"  or  @.@ not in cartoon.* "
    },
    {
        "input": "[struct _ sep0] What are the ids of all tv channels that have more than 2 TV channels and that are not playing any cartoons ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.id from tv_channel  where  count ( tv_channel.* )  > 2  and  @.@ not in cartoon.*  group by tv_channel.Country "
    },
    {
        "input": "[struct _ sep0] What are the ids of all tv channels that have more than 2 TV channels or that are not playing any cartoons ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by, written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.id from tv_channel  where  count ( tv_channel.* )  > 2  or  @.@ not in cartoon.*  group by tv_channel.Country "
    },
    {
        "input": "[struct _ sep0] How many cartoons were written by ' Joseph Kuhr ' and directed by Ben Jones ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by ( Joseph Kuhr ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select count ( cartoon.* )  from tv_channel  where  cartoon.Written_by = \"Joseph Kuhr\"  and  cartoon.Directed_by = \"Ben Jones\" "
    },
    {
        "input": "[struct _ sep0] How many cartoons were written by ' Joseph Kuhr ' or directed by Ben Jones ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by ( Joseph Kuhr ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select count ( cartoon.* )  from tv_channel  where  cartoon.Written_by = \"Joseph Kuhr\"  or  cartoon.Directed_by = \"Ben Jones\" "
    },
    {
        "input": "[struct _ sep0] What is the number of cartoones written by Joseph Kuhr and directed by Ben Jones ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by ( Joseph Kuhr ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select count ( cartoon.* )  from tv_channel  where  cartoon.Written_by = \"Joseph Kuhr\"  and  cartoon.Directed_by = \"Ben Jones\" "
    },
    {
        "input": "[struct _ sep0] What is the number of cartoones written by Joseph Kuhr or directed by Ben Jones ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by ( Joseph Kuhr ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select count ( cartoon.* )  from tv_channel  where  cartoon.Written_by = \"Joseph Kuhr\"  or  cartoon.Directed_by = \"Ben Jones\" "
    },
    {
        "input": "[struct _ sep0] How many TV Channel using language English and directed by Ben Jones ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select count ( tv_channel.* )  from tv_channel  where  tv_channel.Language = \"English\"  and  cartoon.Directed_by = \"Ben Jones\" "
    },
    {
        "input": "[struct _ sep0] How many TV Channels use the English language and directed by Ben Jones ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language ( English ), content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by, original _ air _ date, production _ code, channel",
        "gold_natsql": "select count ( tv_channel.* )  from tv_channel  where  tv_channel.Language = \"English\"  and  cartoon.Directed_by = \"Ben Jones\" "
    },
    {
        "input": "[struct _ sep0] which countries ' tv channels are playing some cartoon written by Todd Casey and directed by Ben Jones ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Country from tv_channel  where  cartoon.Written_by = \"Todd Casey\"  and  cartoon.Directed_by = \"Ben Jones\" "
    },
    {
        "input": "[struct _ sep0] which countries ' tv channels are playing some cartoon written by Todd Casey or directed by Ben Jones ? [/struct _ sep0]| tvshow | tv _ channel : id, series _ name, country, language, content, pixel _ aspect _ ratio _ par, hight _ definition _ tv, pay _ per _ view _ ppv, package _ option | tv _ series : id, episode, air _ date, rating, share, 18 _ 49 _ rating _ share, viewers _ m, weekly _ rank, channel | cartoon : id, title, directed _ by ( Ben Jones ), written _ by ( Todd Casey ), original _ air _ date, production _ code, channel",
        "gold_natsql": "select tv_channel.Country from tv_channel  where  cartoon.Written_by = \"Todd Casey\"  or  cartoon.Directed_by = \"Ben Jones\" "
    },
    {
        "input": "[struct _ sep0] List the final tables made and the best finishes of poker players , with the highest earnings ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select poker_player.Final_Table_Made , poker_player.Best_Finish from poker_player  order by poker_player.Earnings desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the final tables made and best finishes for all poker players , with the highest earnings ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select poker_player.Final_Table_Made , poker_player.Best_Finish from poker_player  order by poker_player.Earnings desc limit 1"
    },
    {
        "input": "[struct _ sep0] List the final tables made and the best finishes of poker players , with the greatest earnings . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select poker_player.Final_Table_Made , poker_player.Best_Finish from poker_player  order by poker_player.Earnings desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the final tables made and best finishes for all poker players , with the greatest earnings . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select poker_player.Final_Table_Made , poker_player.Best_Finish from poker_player  order by poker_player.Earnings desc limit 1"
    },
    {
        "input": "[struct _ sep0] Count the number of poker players , with earnings less than 200000 ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select count ( poker_player.* )  from poker_player  where  poker_player.Earnings < 200000 "
    },
    {
        "input": "[struct _ sep0] List the final tables made and the best finishes of poker players , with earnings less than 200000 ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select poker_player.Final_Table_Made , poker_player.Best_Finish from poker_player  where  poker_player.Earnings < 200000 "
    },
    {
        "input": "[struct _ sep0] What are the final tables made and best finishes for all poker players , with earnings less than 200000 ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select poker_player.Final_Table_Made , poker_player.Best_Finish from poker_player  where  poker_player.Earnings < 200000 "
    },
    {
        "input": "[struct _ sep0] What is the average earnings of poker players , with earnings less than 200000 ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select avg ( poker_player.Earnings )  from poker_player  where  poker_player.Earnings < 200000 "
    },
    {
        "input": "[struct _ sep0] Return the average earnings across all poker players , with earnings less than 200000 ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select avg ( poker_player.Earnings )  from poker_player  where  poker_player.Earnings < 200000 "
    },
    {
        "input": "[struct _ sep0] Return the money rank of the poker player with the greatest height and with earnings less than 200000 ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select poker_player.Money_Rank from poker_player  where  poker_player.Earnings < 200000  order by people.Height desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the average earnings of poker players with height higher than 200 and with earnings less than 200000 ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select avg ( poker_player.Earnings )  from poker_player  where  people.Height > 200  and  poker_player.Earnings < 200000 "
    },
    {
        "input": "[struct _ sep0] What is the average earnings of poker players with height higher than 200 or with earnings less than 200000 ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select avg ( poker_player.Earnings )  from poker_player  where  people.Height > 200  or  poker_player.Earnings < 200000 "
    },
    {
        "input": "[struct _ sep0] Count the number of poker players , who have earnings below 200000 . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select count ( poker_player.* )  from poker_player  where  poker_player.Earnings < 200000 "
    },
    {
        "input": "[struct _ sep0] List the final tables made and the best finishes of poker players , who have earnings below 200000 . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select poker_player.Final_Table_Made , poker_player.Best_Finish from poker_player  where  poker_player.Earnings < 200000 "
    },
    {
        "input": "[struct _ sep0] What are the final tables made and best finishes for all poker players , who have earnings below 200000 . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select poker_player.Final_Table_Made , poker_player.Best_Finish from poker_player  where  poker_player.Earnings < 200000 "
    },
    {
        "input": "[struct _ sep0] What is the average earnings of poker players , who have earnings below 200000 . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select avg ( poker_player.Earnings )  from poker_player  where  poker_player.Earnings < 200000 "
    },
    {
        "input": "[struct _ sep0] Return the average earnings across all poker players , who have earnings below 200000 . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select avg ( poker_player.Earnings )  from poker_player  where  poker_player.Earnings < 200000 "
    },
    {
        "input": "[struct _ sep0] Give average earnings of poker players who are taller than 200 and who have earnings below 200000 . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select avg ( poker_player.Earnings )  from poker_player  where  people.Height > 200  and  poker_player.Earnings < 200000 "
    },
    {
        "input": "[struct _ sep0] Give average earnings of poker players who are taller than 200 or who have earnings below 200000 . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select avg ( poker_player.Earnings )  from poker_player  where  people.Height > 200  or  poker_player.Earnings < 200000 "
    },
    {
        "input": "[struct _ sep0] Show names of people whose nationality is not ' Russia ' and whose earnings is higher than 300000 ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality ( Russia ), name, birth _ date, height",
        "gold_natsql": "select people.Name from poker_player  where  people.Nationality != \"Russia\"  and  poker_player.Earnings > 300000 "
    },
    {
        "input": "[struct _ sep0] Show names of people whose nationality is not ' Russia ' or whose earnings is higher than 300000 ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality ( Russia ), name, birth _ date, height",
        "gold_natsql": "select people.Name from poker_player  where  people.Nationality != \"Russia\"  or  poker_player.Earnings > 300000 "
    },
    {
        "input": "[struct _ sep0] What are the names of people who are not from Russia and who have earnings above 300000 . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality ( Russia ), name, birth _ date, height",
        "gold_natsql": "select people.Name from poker_player  where  people.Nationality != \"Russia\"  and  poker_player.Earnings > 300000 "
    },
    {
        "input": "[struct _ sep0] What are the names of people who are not from Russia or who have earnings above 300000 . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality ( Russia ), name, birth _ date, height",
        "gold_natsql": "select people.Name from poker_player  where  people.Nationality != \"Russia\"  or  poker_player.Earnings > 300000 "
    },
    {
        "input": "[struct _ sep0] Count the number of poker players , with height higher than 200 ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select count ( poker_player.* )  from poker_player  where  people.Height > 200 "
    },
    {
        "input": "[struct _ sep0] List the final tables made and the best finishes of poker players , with height higher than 200 ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select poker_player.Final_Table_Made , poker_player.Best_Finish from poker_player  where  people.Height > 200 "
    },
    {
        "input": "[struct _ sep0] What are the final tables made and best finishes for all poker players , with height higher than 200 ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select poker_player.Final_Table_Made , poker_player.Best_Finish from poker_player  where  people.Height > 200 "
    },
    {
        "input": "[struct _ sep0] What is the average earnings of poker players , with height higher than 200 ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select avg ( poker_player.Earnings )  from poker_player  where  people.Height > 200 "
    },
    {
        "input": "[struct _ sep0] Return the average earnings across all poker players , with height higher than 200 ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select avg ( poker_player.Earnings )  from poker_player  where  people.Height > 200 "
    },
    {
        "input": "[struct _ sep0] What is the money rank of the poker player with the highest earnings and with height higher than 200 ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select poker_player.Money_Rank from poker_player  where  people.Height > 200  order by poker_player.Earnings desc limit 1"
    },
    {
        "input": "[struct _ sep0] Return the money rank of the player with the greatest earnings and with height higher than 200 ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select poker_player.Money_Rank from poker_player  where  people.Height > 200  order by poker_player.Earnings desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the maximum number of final tables made among poker players with earnings less than 200000 and with height higher than 200 ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select max ( poker_player.Final_Table_Made )  from poker_player  where  poker_player.Earnings < 200000  and  people.Height > 200 "
    },
    {
        "input": "[struct _ sep0] What is the maximum number of final tables made among poker players with earnings less than 200000 or with height higher than 200 ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select max ( poker_player.Final_Table_Made )  from poker_player  where  poker_player.Earnings < 200000  or  people.Height > 200 "
    },
    {
        "input": "[struct _ sep0] Return the nationalities for which there are two or more people and with height higher than 200 ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select people.Nationality from poker_player  where  count ( people.* )  >= 2  and  people.Height > 200  group by people.Nationality "
    },
    {
        "input": "[struct _ sep0] Return the nationalities for which there are two or more people or with height higher than 200 ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select people.Nationality from poker_player  where  count ( people.* )  >= 2  or  people.Height > 200  group by people.Nationality "
    },
    {
        "input": "[struct _ sep0] Count the number of poker players , who are taller than 200 . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select count ( poker_player.* )  from poker_player  where  people.Height > 200 "
    },
    {
        "input": "[struct _ sep0] List the final tables made and the best finishes of poker players , who are taller than 200 . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select poker_player.Final_Table_Made , poker_player.Best_Finish from poker_player  where  people.Height > 200 "
    },
    {
        "input": "[struct _ sep0] What are the final tables made and best finishes for all poker players , who are taller than 200 . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select poker_player.Final_Table_Made , poker_player.Best_Finish from poker_player  where  people.Height > 200 "
    },
    {
        "input": "[struct _ sep0] What is the average earnings of poker players , who are taller than 200 . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select avg ( poker_player.Earnings )  from poker_player  where  people.Height > 200 "
    },
    {
        "input": "[struct _ sep0] Return the average earnings across all poker players , who are taller than 200 . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select avg ( poker_player.Earnings )  from poker_player  where  people.Height > 200 "
    },
    {
        "input": "[struct _ sep0] Return the maximum final tables made across all poker players who have earnings below 200000 and who are taller than 200 . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select max ( poker_player.Final_Table_Made )  from poker_player  where  poker_player.Earnings < 200000  and  people.Height > 200 "
    },
    {
        "input": "[struct _ sep0] Return the maximum final tables made across all poker players who have earnings below 200000 or who are taller than 200 . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select max ( poker_player.Final_Table_Made )  from poker_player  where  poker_player.Earnings < 200000  or  people.Height > 200 "
    },
    {
        "input": "[struct _ sep0] What are the names of people who are not from Russia and who are taller than 200 . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality ( Russia ), name, birth _ date, height",
        "gold_natsql": "select people.Name from poker_player  where  people.Nationality != \"Russia\"  and  people.Height > 200 "
    },
    {
        "input": "[struct _ sep0] What are the names of people who are not from Russia or who are taller than 200 . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality ( Russia ), name, birth _ date, height",
        "gold_natsql": "select people.Name from poker_player  where  people.Nationality != \"Russia\"  or  people.Height > 200 "
    },
    {
        "input": "[struct _ sep0] How many people are there of each nationality , that are shared by at least two people ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select people.Nationality , count ( people.* )  from poker_player  where  count ( people.* )  >= 2  group by people.Nationality "
    },
    {
        "input": "[struct _ sep0] How many people are there of each nationality , for which there are two or more people . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select people.Nationality , count ( people.* )  from poker_player  where  count ( people.* )  >= 2  group by people.Nationality "
    },
    {
        "input": "[struct _ sep0] Show names of people whose nationality is not ' Russia ' , in ascending alphabetical order of name . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality ( Russia ), name, birth _ date, height",
        "gold_natsql": "select people.Name from poker_player  where  people.Nationality != \"Russia\"  order by people.Name asc"
    },
    {
        "input": "[struct _ sep0] What are the names of people who are not from Russia , in ascending alphabetical order of name . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality ( Russia ), name, birth _ date, height",
        "gold_natsql": "select people.Name from poker_player  where  people.Nationality != \"Russia\"  order by people.Name asc"
    },
    {
        "input": "[struct _ sep0] Show names of people whose nationality is not ' Russia ' , ordered by their names in alphabetical order ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality ( Russia ), name, birth _ date, height",
        "gold_natsql": "select people.Name from poker_player  where  people.Nationality != \"Russia\"  order by people.Name asc"
    },
    {
        "input": "[struct _ sep0] What are the names of people who are not from Russia , ordered by their names in alphabetical order ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality ( Russia ), name, birth _ date, height",
        "gold_natsql": "select people.Name from poker_player  where  people.Nationality != \"Russia\"  order by people.Name asc"
    },
    {
        "input": "[struct _ sep0] What are the names of poker players whose earnings is higher than 300000 and whose nationality is not ' Russia ' . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality ( Russia ), name, birth _ date, height",
        "gold_natsql": "select people.Name from poker_player  where  poker_player.Earnings > 300000  and  people.Nationality != \"Russia\" "
    },
    {
        "input": "[struct _ sep0] What are the names of poker players whose earnings is higher than 300000 or whose nationality is not ' Russia ' . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality ( Russia ), name, birth _ date, height",
        "gold_natsql": "select people.Name from poker_player  where  poker_player.Earnings > 300000  or  people.Nationality != \"Russia\" "
    },
    {
        "input": "[struct _ sep0] Give the names of poker players who have earnings above 300000 and who are not from Russia ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality ( Russia ), name, birth _ date, height",
        "gold_natsql": "select people.Name from poker_player  where  poker_player.Earnings > 300000  and  people.Nationality != \"Russia\" "
    },
    {
        "input": "[struct _ sep0] Give the names of poker players who have earnings above 300000 or who are not from Russia ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality ( Russia ), name, birth _ date, height",
        "gold_natsql": "select people.Name from poker_player  where  poker_player.Earnings > 300000  or  people.Nationality != \"Russia\" "
    },
    {
        "input": "[struct _ sep0] Give average earnings of poker players who are taller than 200 and who are not from Russia ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality ( Russia ), name, birth _ date, height",
        "gold_natsql": "select avg ( poker_player.Earnings )  from poker_player  where  people.Height > 200  and  people.Nationality != \"Russia\" "
    },
    {
        "input": "[struct _ sep0] Give average earnings of poker players who are taller than 200 or who are not from Russia ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality ( Russia ), name, birth _ date, height",
        "gold_natsql": "select avg ( poker_player.Earnings )  from poker_player  where  people.Height > 200  or  people.Nationality != \"Russia\" "
    },
    {
        "input": "[struct _ sep0] What are the nationalities that are shared by at least two people and that are not poker players . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select people.Nationality from poker_player  where  count ( people.* )  >= 2  and  @.@ not in poker_player.*  group by people.Nationality "
    },
    {
        "input": "[struct _ sep0] What are the nationalities that are shared by at least two people or that are not poker players . [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality, name, birth _ date, height",
        "gold_natsql": "select people.Nationality from poker_player  where  count ( people.* )  >= 2  or  @.@ not in poker_player.*  group by people.Nationality "
    },
    {
        "input": "[struct _ sep0] What are the names of people who are not from Russia and who do not play poker ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality ( Russia ), name, birth _ date, height",
        "gold_natsql": "select people.Name from poker_player  where  people.Nationality != \"Russia\"  and  @.@ not in poker_player.* "
    },
    {
        "input": "[struct _ sep0] What are the names of people who are not from Russia or who do not play poker ? [/struct _ sep0]| poker _ player | poker _ player : poker _ player _ id, people _ id, final _ table _ made, best _ finish, money _ rank, earnings | people : people _ id, nationality ( Russia ), name, birth _ date, height",
        "gold_natsql": "select people.Name from poker_player  where  people.Nationality != \"Russia\"  or  @.@ not in poker_player.* "
    },
    {
        "input": "[struct _ sep0] What are the names of the contestants whose names are not ' Jessie Alloway ' , ordered by contestant name descending . [/struct _ sep0]| voter _ 1 | area _ code _ state : area _ code, state | contestants : contestant _ number, contestant _ name ( Jessie Alloway ) | votes : vote _ id, phone _ number, state, contestant _ number, created",
        "gold_natsql": "select contestants.contestant_name from area_code_state  where  contestants.contestant_name != \"Jessie Alloway\"  order by contestants.contestant_name desc"
    },
    {
        "input": "[struct _ sep0] Return the names of the contestants whose names contain the substring ' Al ' , ordered by contestant name descending . [/struct _ sep0]| voter _ 1 | area _ code _ state : area _ code, state ( AL ) | contestants : contestant _ number, contestant _ name | votes : vote _ id, phone _ number, state, contestant _ number, created",
        "gold_natsql": "select contestants.contestant_name from area_code_state  where  contestants.contestant_name like \"%Al%\"  order by contestants.contestant_name desc"
    },
    {
        "input": "[struct _ sep0] List the vote ids , phone numbers and states of all votes , from the state ' CA ' ? [/struct _ sep0]| voter _ 1 | area _ code _ state : area _ code, state ( CA ) | contestants : contestant _ number, contestant _ name | votes : vote _ id, phone _ number, state ( CA ), contestant _ number, created",
        "gold_natsql": "select votes.vote_id , votes.phone_number , votes.state from area_code_state  where  votes.state = \"CA\" "
    },
    {
        "input": "[struct _ sep0] What are the distinct states and create time of all votes , from the state ' CA ' ? [/struct _ sep0]| voter _ 1 | area _ code _ state : area _ code, state ( CA ) | contestants : contestant _ number, contestant _ name | votes : vote _ id, phone _ number, state ( CA ), contestant _ number, created",
        "gold_natsql": "select  distinct votes.state , votes.created from area_code_state  where  votes.state = \"CA\" "
    },
    {
        "input": "[struct _ sep0] List the vote ids , phone numbers and states of all votes , from state ' NY ' or ' CA ' ? [/struct _ sep0]| voter _ 1 | area _ code _ state : area _ code, state ( CA, NY ) | contestants : contestant _ number, contestant _ name | votes : vote _ id, phone _ number, state ( CA, NY ), contestant _ number, created",
        "gold_natsql": "select votes.vote_id , votes.phone_number , votes.state from area_code_state  where  votes.state = \"NY\"  or  votes.state = \"CA\" "
    },
    {
        "input": "[struct _ sep0] What are the distinct states and create time of all votes , from state ' NY ' or ' CA ' ? [/struct _ sep0]| voter _ 1 | area _ code _ state : area _ code, state ( CA, NY ) | contestants : contestant _ number, contestant _ name | votes : vote _ id, phone _ number, state ( CA, NY ), contestant _ number, created",
        "gold_natsql": "select  distinct votes.state , votes.created from area_code_state  where  votes.state = \"NY\"  or  votes.state = \"CA\" "
    },
    {
        "input": "[struct _ sep0] List the vote ids , phone numbers and states of all votes , that were for the contestant named ' Tabatha Gehling ' ? [/struct _ sep0]| voter _ 1 | area _ code _ state : area _ code, state | contestants : contestant _ number, contestant _ name ( Tabatha Gehling ) | votes : vote _ id, phone _ number, state, contestant _ number, created",
        "gold_natsql": "select votes.vote_id , votes.phone_number , votes.state from area_code_state  where  contestants.contestant_name = \"Tabatha Gehling\" "
    },
    {
        "input": "[struct _ sep0] What are the distinct states and create time of all votes , that were for the contestant named ' Tabatha Gehling ' ? [/struct _ sep0]| voter _ 1 | area _ code _ state : area _ code, state | contestants : contestant _ number, contestant _ name ( Tabatha Gehling ) | votes : vote _ id, phone _ number, state, contestant _ number, created",
        "gold_natsql": "select  distinct votes.state , votes.created from area_code_state  where  contestants.contestant_name = \"Tabatha Gehling\" "
    },
    {
        "input": "[struct _ sep0] What are the maximum and minimum values of area codes , in which voters voted both for the contestant ' Tabatha Gehling ' and ? [/struct _ sep0]| voter _ 1 | area _ code _ state : area _ code, state | contestants : contestant _ number, contestant _ name ( Tabatha Gehling ) | votes : vote _ id, phone _ number, state, contestant _ number, created",
        "gold_natsql": "select max ( area_code_state.area_code )  , min ( area_code_state.area_code )  from area_code_state  where  contestants.contestant_name = \"Tabatha Gehling\" "
    },
    {
        "input": "[struct _ sep0] What is the area code in which the most voters voted and in which voters voted both for the contestant ' Tabatha Gehling ' and ? [/struct _ sep0]| voter _ 1 | area _ code _ state : area _ code, state | contestants : contestant _ number, contestant _ name ( Tabatha Gehling ) | votes : vote _ id, phone _ number, state, contestant _ number, created",
        "gold_natsql": "select area_code_state.area_code from area_code_state  where  contestants.contestant_name = \"Tabatha Gehling\"  group by area_code_state.area_code  order by count ( votes.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the maximum and minimum values of area codes , in which voters voted both for the contestant ' Tabatha Gehling ' and the contestant ' Kelly Clauss ' . [/struct _ sep0]| voter _ 1 | area _ code _ state : area _ code, state | contestants : contestant _ number, contestant _ name ( Tabatha Gehling, Kelly Clauss ) | votes : vote _ id, phone _ number, state, contestant _ number, created",
        "gold_natsql": "select max ( area_code_state.area_code )  , min ( area_code_state.area_code )  from area_code_state  where  contestants.contestant_name = \"Tabatha Gehling\"  and  contestants.contestant_name = \"Kelly Clauss\" "
    },
    {
        "input": "[struct _ sep0] What is the name of country that has the shortest life expectancy in Asia and that became independent after 1950 ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  and  country.IndepYear > 1950  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the name of country that has the shortest life expectancy in Asia or that became independent after 1950 ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  or  country.IndepYear > 1950  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is name of the country that speaks the largest number of languages and that became independent after 1950 ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  group by country.Name  order by count ( countrylanguage.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the name of the nation that uses the greatest amount of languages and that became independent after 1950 ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  group by country.Name  order by count ( countrylanguage.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the language that is used by the largest number of Asia nations and that became independent after 1950 ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  country.Continent = \"Asia\"  and  country.IndepYear > 1950  group by countrylanguage.Language  order by count ( country.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the language that is used by the largest number of Asia nations or that became independent after 1950 ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  country.Continent = \"Asia\"  or  country.IndepYear > 1950  group by countrylanguage.Language  order by count ( country.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the name , year of Independence , and surface area of the country that has the lowest population and that became independent after 1950 ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.IndepYear > 1950  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the name , population , and head of state for the country that has the largest area and that became independent after 1950 ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.IndepYear > 1950  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72 and that became independent after 1950 ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , country.GovernmentForm from city  where  avg ( country.LifeExpectancy )  > 72  and  country.IndepYear > 1950  group by country.GovernmentForm "
    },
    {
        "input": "[struct _ sep0] What is the name of country that has the shortest life expectancy in Asia and that were founded after 1950 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  and  country.IndepYear > 1950  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the name of country that has the shortest life expectancy in Asia or that were founded after 1950 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  or  country.IndepYear > 1950  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is name of the country that speaks the largest number of languages and that were founded after 1950 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  group by country.Name  order by count ( countrylanguage.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the name of the nation that uses the greatest amount of languages and that were founded after 1950 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  group by country.Name  order by count ( countrylanguage.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the language that is used by the largest number of Asia nations and that were founded after 1950 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  country.Continent = \"Asia\"  and  country.IndepYear > 1950  group by countrylanguage.Language  order by count ( country.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the language that is used by the largest number of Asia nations or that were founded after 1950 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  country.Continent = \"Asia\"  or  country.IndepYear > 1950  group by countrylanguage.Language  order by count ( country.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the name , year of Independence , and surface area of the country that has the lowest population and that were founded after 1950 . [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.IndepYear > 1950  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the name , population , and head of state for the country that has the largest area and that were founded after 1950 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.IndepYear > 1950  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72 and that were founded after 1950 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , country.GovernmentForm from city  where  avg ( country.LifeExpectancy )  > 72  and  country.IndepYear > 1950  group by country.GovernmentForm "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region and have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  and  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region or have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  or  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] How much surface area do the countires in the Caribbean cover together and have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  and  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] How much surface area do the countires in the Caribbean cover together or have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  or  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa and have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa or have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Give the name of the country in Asia with the lowest life expectancy and have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  and  country.GovernmentForm = \"Republic\"  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the name of the country in Asia with the lowest life expectancy or have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  or  country.GovernmentForm = \"Republic\"  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] How many different forms of governments are there in Africa and have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Africa\"  and  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] How many different forms of governments are there in Africa or have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Africa\"  or  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of languages used in Aruba and have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.Name = \"Aruba\"  and  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of languages used in Aruba or have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.Name = \"Aruba\"  or  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] How many languages are spoken in Aruba and have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.Name = \"Aruba\"  and  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] How many languages are spoken in Aruba or have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.Name = \"Aruba\"  or  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Which continent has the most diverse languages and have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  country.GovernmentForm = \"Republic\"  group by country.Continent  order by count ( countrylanguage.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Which continent speaks the most languages and have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  country.GovernmentForm = \"Republic\"  group by country.Continent  order by count ( countrylanguage.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] How many continents speak Chinese and have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language ( Chinese ), isofficial, percentage",
        "gold_natsql": "select count (  distinct country.Continent )  from city  where  countrylanguage.Language = \"Chinese\"  and  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] How many continents speak Chinese or have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language ( Chinese ), isofficial, percentage",
        "gold_natsql": "select count (  distinct country.Continent )  from city  where  countrylanguage.Language = \"Chinese\"  or  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Find the name , population and expected life length of Asia country with the largest area and have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.LifeExpectancy from city  where  country.Continent = \"Asia\"  and  country.GovernmentForm = \"Republic\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] Find the name , population and expected life length of Asia country with the largest area or have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.LifeExpectancy from city  where  country.Continent = \"Asia\"  or  country.GovernmentForm = \"Republic\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country with the smallest population and have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.GovernmentForm = \"Republic\"  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country with the largest area and have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.GovernmentForm = \"Republic\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries with the top 5 largest area and have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  country.GovernmentForm = \"Republic\"  order by country.SurfaceArea desc limit 5"
    },
    {
        "input": "[struct _ sep0] What are names of countries with the top 3 largest population and have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.GovernmentForm = \"Republic\"  order by country.Population desc limit 3"
    },
    {
        "input": "[struct _ sep0] Return the names of the 3 countries with the fewest people and have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.GovernmentForm = \"Republic\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] how many countries are in Asia and have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  and  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] how many countries are in Asia or have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  or  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Count the number of countries in Asia and have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  and  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Count the number of countries in Asia or have a Republic as their form of government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  or  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region and have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  and  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region or have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  or  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] How much surface area do the countires in the Caribbean cover together and have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  and  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] How much surface area do the countires in the Caribbean cover together or have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  or  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa and have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa or have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Give the name of the country in Asia with the lowest life expectancy and have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  and  country.GovernmentForm = \"Republic\"  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the name of the country in Asia with the lowest life expectancy or have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  or  country.GovernmentForm = \"Republic\"  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] How many different forms of governments are there in Africa and have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Africa\"  and  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] How many different forms of governments are there in Africa or have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Africa\"  or  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of languages used in Aruba and have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.Name = \"Aruba\"  and  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of languages used in Aruba or have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.Name = \"Aruba\"  or  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] How many languages are spoken in Aruba and have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.Name = \"Aruba\"  and  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] How many languages are spoken in Aruba or have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.Name = \"Aruba\"  or  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Which continent has the most diverse languages and have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  country.GovernmentForm = \"Republic\"  group by country.Continent  order by count ( countrylanguage.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Which continent speaks the most languages and have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  country.GovernmentForm = \"Republic\"  group by country.Continent  order by count ( countrylanguage.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] How many continents speak Chinese and have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language ( Chinese ), isofficial, percentage",
        "gold_natsql": "select count (  distinct country.Continent )  from city  where  countrylanguage.Language = \"Chinese\"  and  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] How many continents speak Chinese or have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language ( Chinese ), isofficial, percentage",
        "gold_natsql": "select count (  distinct country.Continent )  from city  where  countrylanguage.Language = \"Chinese\"  or  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Find the name , population and expected life length of Asia country with the largest area and have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.LifeExpectancy from city  where  country.Continent = \"Asia\"  and  country.GovernmentForm = \"Republic\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] Find the name , population and expected life length of Asia country with the largest area or have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.LifeExpectancy from city  where  country.Continent = \"Asia\"  or  country.GovernmentForm = \"Republic\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country with the smallest population and have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.GovernmentForm = \"Republic\"  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country with the largest area and have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.GovernmentForm = \"Republic\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries with the top 5 largest area and have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  country.GovernmentForm = \"Republic\"  order by country.SurfaceArea desc limit 5"
    },
    {
        "input": "[struct _ sep0] What are names of countries with the top 3 largest population and have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.GovernmentForm = \"Republic\"  order by country.Population desc limit 3"
    },
    {
        "input": "[struct _ sep0] Return the names of the 3 countries with the fewest people and have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.GovernmentForm = \"Republic\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] how many countries are in Asia and have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  and  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] how many countries are in Asia or have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  or  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Count the number of countries in Asia and have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  and  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Count the number of countries in Asia or have governments that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  or  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government and in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government or in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic and in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic or in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil and in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  and  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil or in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  or  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] Give the name of the country in Asia with the lowest life expectancy and in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  and  country.Region = \"Caribbean\"  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the name of the country in Asia with the lowest life expectancy or in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  or  country.Region = \"Caribbean\"  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the total population and maximum GNP in Asia and in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , max ( country.GNP )  from city  where  country.Continent = \"Asia\"  and  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] What is the total population and maximum GNP in Asia or in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , max ( country.GNP )  from city  where  country.Continent = \"Asia\"  or  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] How many type of governments are in Africa and in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Africa\"  and  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] How many type of governments are in Africa or in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Africa\"  or  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] Find the name , population and expected life length of Asia country with the largest area and in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.LifeExpectancy from city  where  country.Continent = \"Asia\"  and  country.Region = \"Caribbean\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] Find the name , population and expected life length of Asia country with the largest area or in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.LifeExpectancy from city  where  country.Continent = \"Asia\"  or  country.Region = \"Caribbean\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country with the smallest population and in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Region = \"Caribbean\"  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country with the largest area and in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Region = \"Caribbean\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries with the top 5 largest area and in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  country.Region = \"Caribbean\"  order by country.SurfaceArea desc limit 5"
    },
    {
        "input": "[struct _ sep0] What are names of countries with the top 3 largest population and in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Region = \"Caribbean\"  order by country.Population desc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the names of the nations with the 3 lowest populations and in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Region = \"Caribbean\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] Return the names of the 3 countries with the fewest people and in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Region = \"Caribbean\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] how many countries are in Asia and in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  and  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] how many countries are in Asia or in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  or  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] Count the number of countries in Asia and in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  and  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] Count the number of countries in Asia or in the Caribbean region ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  or  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government and do the countires in the Caribbean cover together ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government or do the countires in the Caribbean cover together ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic and do the countires in the Caribbean cover together ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic or do the countires in the Caribbean cover together ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] How many different forms of governments are there in Africa and do the countires in the Caribbean cover together ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Africa\"  and  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] How many different forms of governments are there in Africa or do the countires in the Caribbean cover together ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Africa\"  or  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of languages used in Aruba and do the countires in the Caribbean cover together ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.Name = \"Aruba\"  and  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of languages used in Aruba or do the countires in the Caribbean cover together ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.Name = \"Aruba\"  or  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] How many languages are spoken in Aruba and do the countires in the Caribbean cover together ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.Name = \"Aruba\"  and  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] How many languages are spoken in Aruba or do the countires in the Caribbean cover together ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.Name = \"Aruba\"  or  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] Which continent has the most diverse languages and do the countires in the Caribbean cover together ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  country.Region = \"Caribbean\"  group by country.Continent  order by count ( countrylanguage.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Which continent speaks the most languages and do the countires in the Caribbean cover together ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  country.Region = \"Caribbean\"  group by country.Continent  order by count ( countrylanguage.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] How many continents speak Chinese and do the countires in the Caribbean cover together ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Chinese, Caribbean ), isofficial, percentage",
        "gold_natsql": "select count (  distinct country.Continent )  from city  where  countrylanguage.Language = \"Chinese\"  and  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] How many continents speak Chinese or do the countires in the Caribbean cover together ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Chinese, Caribbean ), isofficial, percentage",
        "gold_natsql": "select count (  distinct country.Continent )  from city  where  countrylanguage.Language = \"Chinese\"  or  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] how many countries are in Asia and do the countires in the Caribbean cover together ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  and  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] how many countries are in Asia or do the countires in the Caribbean cover together ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  or  country.Region = \"Caribbean\" "
    },
    {
        "input": "[struct _ sep0] Give the mean GNP and total population of nations which are considered US Territory and which Anguilla belongs to ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Anguilla ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Anguilla ), governmentform ( US Territory ), headofstate, capital, code2 ( US ) | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  country.GovernmentForm = \"US Territory\"  and  country.Name = \"Anguilla\" "
    },
    {
        "input": "[struct _ sep0] Give the mean GNP and total population of nations which are considered US Territory or which Anguilla belongs to ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Anguilla ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Anguilla ), governmentform ( US Territory ), headofstate, capital, code2 ( US ) | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  country.GovernmentForm = \"US Territory\"  or  country.Name = \"Anguilla\" "
    },
    {
        "input": "[struct _ sep0] What is the official language used in the country the name of whose head of state is Beatrix and is the most popular ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate ( Beatrix ), capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  countrylanguage.IsOfficial = \"T\"  and  country.HeadOfState = \"Beatrix\"  order by countrylanguage.Percentage desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region and in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  and  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region or in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  or  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa and in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa or in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Central Africa and in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Central Africa or in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] Give the name of the country in Asia with the lowest life expectancy and in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  and  country.Name = \"Aruba\"  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the name of the country in Asia with the lowest life expectancy or in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  or  country.Name = \"Aruba\"  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the total population and maximum GNP in Asia and in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , max ( country.GNP )  from city  where  country.Continent = \"Asia\"  and  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] What is the total population and maximum GNP in Asia or in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , max ( country.GNP )  from city  where  country.Continent = \"Asia\"  or  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] How many type of governments are in Africa and in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Africa\"  and  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] How many type of governments are in Africa or in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Africa\"  or  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] Give the country codes for countries in which people speak langauges that are not English and in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select  distinct countrylanguage.CountryCode from city  where  countrylanguage.Language != \"English\"  and  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] Give the country codes for countries in which people speak langauges that are not English or in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select  distinct countrylanguage.CountryCode from city  where  countrylanguage.Language != \"English\"  or  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] Count the number of countries in Asia and in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  and  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] Count the number of countries in Asia or in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  or  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] What is the official language used in the country the name of whose head of state is Beatrix and is predominantly spoken ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate ( Beatrix ), capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  countrylanguage.IsOfficial = \"T\"  and  country.HeadOfState = \"Beatrix\"  order by countrylanguage.Percentage desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region and in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  and  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region or in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  or  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa and in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa or in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Central Africa and in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Central Africa or in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] Give the name of the country in Asia with the lowest life expectancy and in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  and  country.Name = \"Aruba\"  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the name of the country in Asia with the lowest life expectancy or in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  or  country.Name = \"Aruba\"  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the total population and maximum GNP in Asia and in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , max ( country.GNP )  from city  where  country.Continent = \"Asia\"  and  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] What is the total population and maximum GNP in Asia or in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , max ( country.GNP )  from city  where  country.Continent = \"Asia\"  or  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] How many type of governments are in Africa and in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Africa\"  and  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] How many type of governments are in Africa or in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Africa\"  or  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] Give the country codes for countries in which people speak langauges that are not English and in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select  distinct countrylanguage.CountryCode from city  where  countrylanguage.Language != \"English\"  and  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] Give the country codes for countries in which people speak langauges that are not English or in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select  distinct countrylanguage.CountryCode from city  where  countrylanguage.Language != \"English\"  or  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] Count the number of countries in Asia and in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  and  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] Count the number of countries in Asia or in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  or  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region and in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  and  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region or in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  or  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa and in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa or in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Central Africa and in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Central Africa or in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] Give the name of the country in Asia with the lowest life expectancy and in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  and  country.Name = \"Brazil\"  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the name of the country in Asia with the lowest life expectancy or in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  or  country.Name = \"Brazil\"  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the total population and maximum GNP in Asia and in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , max ( country.GNP )  from city  where  country.Continent = \"Asia\"  and  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] What is the total population and maximum GNP in Asia or in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , max ( country.GNP )  from city  where  country.Continent = \"Asia\"  or  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] How many type of governments are in Africa and in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Africa\"  and  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] How many type of governments are in Africa or in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Africa\"  or  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] Find the name , population and expected life length of Asia country with the largest area and in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.LifeExpectancy from city  where  country.Continent = \"Asia\"  and  country.Name = \"Brazil\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] Find the name , population and expected life length of Asia country with the largest area or in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.LifeExpectancy from city  where  country.Continent = \"Asia\"  or  country.Name = \"Brazil\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country with the smallest population and in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Name = \"Brazil\"  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country with the largest area and in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Name = \"Brazil\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries with the top 5 largest area and in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  country.Name = \"Brazil\"  order by country.SurfaceArea desc limit 5"
    },
    {
        "input": "[struct _ sep0] What are names of countries with the top 3 largest population and in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Name = \"Brazil\"  order by country.Population desc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the names of the nations with the 3 lowest populations and in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Name = \"Brazil\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] Return the names of the 3 countries with the fewest people and in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Name = \"Brazil\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] Count the number of countries in Asia and in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  and  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] Count the number of countries in Asia or in Brazil ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  or  country.Name = \"Brazil\" "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government and in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government or in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic and in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic or in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil and in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  and  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil or in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  or  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the name of the country in Asia with the lowest life expectancy and in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  and  country.Region = \"Central Africa\"  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the name of the country in Asia with the lowest life expectancy or in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  or  country.Region = \"Central Africa\"  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the total population and maximum GNP in Asia and in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , max ( country.GNP )  from city  where  country.Continent = \"Asia\"  and  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the total population and maximum GNP in Asia or in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , max ( country.GNP )  from city  where  country.Continent = \"Asia\"  or  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] How many type of governments are in Africa and in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Africa\"  and  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] How many type of governments are in Africa or in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Africa\"  or  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] Find the name , population and expected life length of Asia country with the largest area and in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.LifeExpectancy from city  where  country.Continent = \"Asia\"  and  country.Region = \"Central Africa\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] Find the name , population and expected life length of Asia country with the largest area or in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.LifeExpectancy from city  where  country.Continent = \"Asia\"  or  country.Region = \"Central Africa\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country with the smallest population and in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Region = \"Central Africa\"  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country with the largest area and in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Region = \"Central Africa\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries with the top 5 largest area and in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  country.Region = \"Central Africa\"  order by country.SurfaceArea desc limit 5"
    },
    {
        "input": "[struct _ sep0] What are names of countries with the top 3 largest population and in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Region = \"Central Africa\"  order by country.Population desc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the names of the nations with the 3 lowest populations and in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Region = \"Central Africa\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] Return the names of the 3 countries with the fewest people and in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Region = \"Central Africa\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] how many countries are in Asia and in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  and  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] how many countries are in Asia or in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  or  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] Count the number of countries in Asia and in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  and  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] Count the number of countries in Asia or in the region of Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  or  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil and in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  and  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil or in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  or  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] Give the name of the country in Asia with the lowest life expectancy and in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  and  country.Region = \"Central Africa\"  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the name of the country in Asia with the lowest life expectancy or in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  or  country.Region = \"Central Africa\"  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the total population and maximum GNP in Asia and in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , max ( country.GNP )  from city  where  country.Continent = \"Asia\"  and  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the total population and maximum GNP in Asia or in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , max ( country.GNP )  from city  where  country.Continent = \"Asia\"  or  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] How many type of governments are in Africa and in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Africa\"  and  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] How many type of governments are in Africa or in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Africa\"  or  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] Find the name , population and expected life length of Asia country with the largest area and in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.LifeExpectancy from city  where  country.Continent = \"Asia\"  and  country.Region = \"Central Africa\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] Find the name , population and expected life length of Asia country with the largest area or in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.LifeExpectancy from city  where  country.Continent = \"Asia\"  or  country.Region = \"Central Africa\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country with the smallest population and in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Region = \"Central Africa\"  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country with the largest area and in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Region = \"Central Africa\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries with the top 5 largest area and in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  country.Region = \"Central Africa\"  order by country.SurfaceArea desc limit 5"
    },
    {
        "input": "[struct _ sep0] What are names of countries with the top 3 largest population and in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Region = \"Central Africa\"  order by country.Population desc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the names of the nations with the 3 lowest populations and in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Region = \"Central Africa\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] Return the names of the 3 countries with the fewest people and in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Region = \"Central Africa\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] Count the number of countries in Asia and in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  and  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] Count the number of countries in Asia or in Central Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  or  country.Region = \"Central Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries that became independent after 1950 and that has the shortest life expectancy ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the names of the nations that were founded after 1950 and that has the shortest life expectancy ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the names of nations that speak both English and French and that has the shortest life expectancy ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, French ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.Language = \"French\"  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the regions that use English or Dutch and that has the shortest life expectancy ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, Dutch ), isofficial, percentage",
        "gold_natsql": "select  distinct country.Region from city  where  countrylanguage.Language = \"English\"  or  countrylanguage.Language = \"Dutch\"  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the codes of the countries that do not speak English and whose government forms are not Republic and that has the shortest life expectancy ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Code from city  where  countrylanguage.Language != \"English\"  and  country.GovernmentForm != \"Republic\"  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] Return the codes of countries that do not speak English and do not have Republic for governments and that has the shortest life expectancy ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Code from city  where  countrylanguage.Language != \"English\"  and  country.GovernmentForm != \"Republic\"  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names of the countries that are in the continent of Europe and have a population of 80000 and that has the shortest life expectancy ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  and  country.Population = \"80000\"  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the names of countries that are in Europe and have a population equal to 80000 and that has the shortest life expectancy ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  and  country.Population = \"80000\"  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region or in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil or in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa or in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Central Africa and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Central Africa or in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country with the smallest population and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Continent = \"Asia\"  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country with the largest area and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Continent = \"Asia\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries with the top 5 largest area and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  country.Continent = \"Asia\"  order by country.SurfaceArea desc limit 5"
    },
    {
        "input": "[struct _ sep0] What are names of countries with the top 3 largest population and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  order by country.Population desc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the names of the nations with the 3 lowest populations and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] Return the names of the 3 countries with the fewest people and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government or in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic or in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region or in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil or in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa or in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Central Africa and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Central Africa or in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country with the smallest population and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Continent = \"Asia\"  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country with the largest area and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Continent = \"Asia\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries with the top 5 largest area and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  country.Continent = \"Asia\"  order by country.SurfaceArea desc limit 5"
    },
    {
        "input": "[struct _ sep0] What are names of countries with the top 3 largest population and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  order by country.Population desc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the names of the nations with the 3 lowest populations and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] Return the names of the 3 countries with the fewest people and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil and with the lowest life expectancy . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region or in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil or in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa or in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Central Africa and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Central Africa or in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country with the smallest population and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Continent = \"Asia\"  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country with the largest area and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Continent = \"Asia\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries with the top 5 largest area and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  country.Continent = \"Asia\"  order by country.SurfaceArea desc limit 5"
    },
    {
        "input": "[struct _ sep0] What are names of countries with the top 3 largest population and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  order by country.Population desc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the names of the nations with the 3 lowest populations and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] Return the names of the 3 countries with the fewest people and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government and live in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government or live in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic and live in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic or live in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How much surface area do the countires in the Caribbean cover together and live in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How much surface area do the countires in the Caribbean cover together or live in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of languages used in Aruba and live in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.Name = \"Aruba\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of languages used in Aruba or live in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.Name = \"Aruba\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many languages are spoken in Aruba and live in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.Name = \"Aruba\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many languages are spoken in Aruba or live in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.Name = \"Aruba\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Which continent has the most diverse languages and live in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  country.Continent = \"Asia\"  group by country.Continent  order by count ( countrylanguage.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Which continent speaks the most languages and live in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  country.Continent = \"Asia\"  group by country.Continent  order by count ( countrylanguage.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] How many continents speak Chinese and live in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Chinese ), isofficial, percentage",
        "gold_natsql": "select count (  distinct country.Continent )  from city  where  countrylanguage.Language = \"Chinese\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many continents speak Chinese or live in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Chinese ), isofficial, percentage",
        "gold_natsql": "select count (  distinct country.Continent )  from city  where  countrylanguage.Language = \"Chinese\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region and in Africa countries ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region or in Africa countries ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  or  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil and in Africa countries ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil or in Africa countries ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  or  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa and in Africa countries ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa or in Africa countries ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Central Africa and in Africa countries ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Central Africa or in Africa countries ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country with the smallest population and in Africa countries ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Continent = \"Africa\"  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country with the largest area and in Africa countries ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Continent = \"Africa\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries with the top 5 largest area and in Africa countries ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  country.Continent = \"Africa\"  order by country.SurfaceArea desc limit 5"
    },
    {
        "input": "[struct _ sep0] What are names of countries with the top 3 largest population and in Africa countries ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Africa\"  order by country.Population desc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the names of the nations with the 3 lowest populations and in Africa countries ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Africa\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] Return the names of the 3 countries with the fewest people and in Africa countries ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Africa\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries that became independent after 1950 and that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  and  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries that became independent after 1950 or that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  or  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations that were founded after 1950 and that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  and  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations that were founded after 1950 or that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  or  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What is the name of country that has the shortest life expectancy in Asia and that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  and  country.GovernmentForm = \"Republic\"  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the name of country that has the shortest life expectancy in Asia or that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  or  country.GovernmentForm = \"Republic\"  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is name of the country that speaks the largest number of languages and that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.GovernmentForm = \"Republic\"  group by country.Name  order by count ( countrylanguage.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the name of the nation that uses the greatest amount of languages and that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.GovernmentForm = \"Republic\"  group by country.Name  order by count ( countrylanguage.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the language that is used by the largest number of Asia nations and that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  country.Continent = \"Asia\"  and  country.GovernmentForm = \"Republic\"  group by countrylanguage.Language  order by count ( country.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the language that is used by the largest number of Asia nations or that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  country.Continent = \"Asia\"  or  country.GovernmentForm = \"Republic\"  group by countrylanguage.Language  order by count ( country.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the name , year of Independence , and surface area of the country that has the lowest population and that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.GovernmentForm = \"Republic\"  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the name , population , and head of state for the country that has the largest area and that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.GovernmentForm = \"Republic\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72 and that are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , country.GovernmentForm from city  where  avg ( country.LifeExpectancy )  > 72  and  country.GovernmentForm = \"Republic\"  group by country.GovernmentForm "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government or in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic or in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region or in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  or  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil or in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  or  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa or in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Central Africa and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Central Africa or in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country with the smallest population and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Continent = \"Africa\"  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country with the largest area and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Continent = \"Africa\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries with the top 5 largest area and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  country.Continent = \"Africa\"  order by country.SurfaceArea desc limit 5"
    },
    {
        "input": "[struct _ sep0] What are names of countries with the top 3 largest population and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Africa\"  order by country.Population desc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the names of the nations with the 3 lowest populations and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Africa\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] Return the names of the 3 countries with the fewest people and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Africa\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] What is the continent name which Anguilla belongs to and which are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Anguilla ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Anguilla ), governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  country.Name = \"Anguilla\"  and  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What is the continent name which Anguilla belongs to or which are Republic ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Anguilla ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Anguilla ), governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  country.Name = \"Anguilla\"  or  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil and in Asia or Europe . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Europe, Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  and  country.Continent = \"Asia\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What is the continent name which Anguilla belongs to and which are considered US Territory . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Anguilla ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Anguilla ), governmentform ( US Territory ), headofstate, capital, code2 ( US ) | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  country.Name = \"Anguilla\"  and  country.GovernmentForm = \"US Territory\" "
    },
    {
        "input": "[struct _ sep0] What is the continent name which Anguilla belongs to or which are considered US Territory . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Anguilla ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Anguilla ), governmentform ( US Territory ), headofstate, capital, code2 ( US ) | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  country.Name = \"Anguilla\"  or  country.GovernmentForm = \"US Territory\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region or in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  or  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil or in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  or  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa or in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Central Africa and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Central Africa or in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country with the smallest population and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Continent = \"Africa\"  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country with the largest area and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Continent = \"Africa\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries with the top 5 largest area and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  country.Continent = \"Africa\"  order by country.SurfaceArea desc limit 5"
    },
    {
        "input": "[struct _ sep0] What are names of countries with the top 3 largest population and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Africa\"  order by country.Population desc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the names of the nations with the 3 lowest populations and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Africa\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] Return the names of the 3 countries with the fewest people and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Africa\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government and are there in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government or are there in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic and are there in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic or are there in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] How much surface area do the countires in the Caribbean cover together and are there in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] How much surface area do the countires in the Caribbean cover together or are there in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  or  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of languages used in Aruba and are there in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.Name = \"Aruba\"  and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of languages used in Aruba or are there in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.Name = \"Aruba\"  or  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] How many languages are spoken in Aruba and are there in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.Name = \"Aruba\"  and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] How many languages are spoken in Aruba or are there in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.Name = \"Aruba\"  or  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] Which continent has the most diverse languages and are there in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  country.Continent = \"Africa\"  group by country.Continent  order by count ( countrylanguage.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Which continent speaks the most languages and are there in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  country.Continent = \"Africa\"  group by country.Continent  order by count ( countrylanguage.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] How many continents speak Chinese and are there in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Chinese ), isofficial, percentage",
        "gold_natsql": "select count (  distinct country.Continent )  from city  where  countrylanguage.Language = \"Chinese\"  and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] How many continents speak Chinese or are there in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Chinese ), isofficial, percentage",
        "gold_natsql": "select count (  distinct country.Continent )  from city  where  countrylanguage.Language = \"Chinese\"  or  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government and used in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government or used in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic and used in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic or used in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] How much surface area do the countires in the Caribbean cover together and used in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  and  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] How much surface area do the countires in the Caribbean cover together or used in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  or  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] How many different forms of governments are there in Africa and used in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Africa\"  and  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] How many different forms of governments are there in Africa or used in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Africa\"  or  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] how many countries are in Asia and used in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  and  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] how many countries are in Asia or used in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  or  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] Which language is spoken by the largest number of countries and used in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  country.Name = \"Aruba\"  group by countrylanguage.Language  order by count ( countrylanguage.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government and are spoken in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government or are spoken in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic and are spoken in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic or are spoken in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] How much surface area do the countires in the Caribbean cover together and are spoken in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  and  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] How much surface area do the countires in the Caribbean cover together or are spoken in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  or  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] How many different forms of governments are there in Africa and are spoken in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Africa\"  and  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] How many different forms of governments are there in Africa or are spoken in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Africa\"  or  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] how many countries are in Asia and are spoken in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  and  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] how many countries are in Asia or are spoken in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  or  country.Name = \"Aruba\" "
    },
    {
        "input": "[struct _ sep0] Which language is spoken by the largest number of countries and are spoken in Aruba ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  country.Name = \"Aruba\"  group by countrylanguage.Language  order by count ( countrylanguage.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government and does Afghanistan have ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Afghanistan ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Name = \"Afghanistan\" "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government or does Afghanistan have ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Afghanistan ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Name = \"Afghanistan\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic and does Afghanistan have ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Afghanistan ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Name = \"Afghanistan\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic or does Afghanistan have ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Afghanistan ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Name = \"Afghanistan\" "
    },
    {
        "input": "[struct _ sep0] How much surface area do the countires in the Caribbean cover together and does Afghanistan have ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Afghanistan ), continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  and  country.Name = \"Afghanistan\" "
    },
    {
        "input": "[struct _ sep0] How much surface area do the countires in the Caribbean cover together or does Afghanistan have ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Afghanistan ), continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  or  country.Name = \"Afghanistan\" "
    },
    {
        "input": "[struct _ sep0] How many different forms of governments are there in Africa and does Afghanistan have ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Afghanistan ), continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Africa\"  and  country.Name = \"Afghanistan\" "
    },
    {
        "input": "[struct _ sep0] How many different forms of governments are there in Africa or does Afghanistan have ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Afghanistan ), continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Africa\"  or  country.Name = \"Afghanistan\" "
    },
    {
        "input": "[struct _ sep0] Which continent has the most diverse languages and does Afghanistan have ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Afghanistan ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  country.Name = \"Afghanistan\"  group by country.Continent  order by count ( countrylanguage.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Which continent speaks the most languages and does Afghanistan have ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Afghanistan ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  country.Name = \"Afghanistan\"  group by country.Continent  order by count ( countrylanguage.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] How many continents speak Chinese and does Afghanistan have ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Afghanistan ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Chinese ), isofficial, percentage",
        "gold_natsql": "select count (  distinct country.Continent )  from city  where  countrylanguage.Language = \"Chinese\"  and  country.Name = \"Afghanistan\" "
    },
    {
        "input": "[struct _ sep0] How many continents speak Chinese or does Afghanistan have ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Afghanistan ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Chinese ), isofficial, percentage",
        "gold_natsql": "select count (  distinct country.Continent )  from city  where  countrylanguage.Language = \"Chinese\"  or  country.Name = \"Afghanistan\" "
    },
    {
        "input": "[struct _ sep0] how many countries are in Asia and does Afghanistan have ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Afghanistan ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  and  country.Name = \"Afghanistan\" "
    },
    {
        "input": "[struct _ sep0] how many countries are in Asia or does Afghanistan have ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Afghanistan ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  or  country.Name = \"Afghanistan\" "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government and are spoken in Afghanistan ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Afghanistan ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Name = \"Afghanistan\" "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government or are spoken in Afghanistan ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Afghanistan ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Name = \"Afghanistan\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic and are spoken in Afghanistan ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Afghanistan ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Name = \"Afghanistan\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic or are spoken in Afghanistan ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Afghanistan ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Name = \"Afghanistan\" "
    },
    {
        "input": "[struct _ sep0] How much surface area do the countires in the Caribbean cover together and are spoken in Afghanistan ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Afghanistan ), continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  and  country.Name = \"Afghanistan\" "
    },
    {
        "input": "[struct _ sep0] How much surface area do the countires in the Caribbean cover together or are spoken in Afghanistan ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Afghanistan ), continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  or  country.Name = \"Afghanistan\" "
    },
    {
        "input": "[struct _ sep0] How many different forms of governments are there in Africa and are spoken in Afghanistan ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Afghanistan ), continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Africa\"  and  country.Name = \"Afghanistan\" "
    },
    {
        "input": "[struct _ sep0] How many different forms of governments are there in Africa or are spoken in Afghanistan ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Afghanistan ), continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Africa\"  or  country.Name = \"Afghanistan\" "
    },
    {
        "input": "[struct _ sep0] Which continent has the most diverse languages and are spoken in Afghanistan ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Afghanistan ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  country.Name = \"Afghanistan\"  group by country.Continent  order by count ( countrylanguage.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Which continent speaks the most languages and are spoken in Afghanistan ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Afghanistan ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  country.Name = \"Afghanistan\"  group by country.Continent  order by count ( countrylanguage.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] How many continents speak Chinese and are spoken in Afghanistan ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Afghanistan ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Chinese ), isofficial, percentage",
        "gold_natsql": "select count (  distinct country.Continent )  from city  where  countrylanguage.Language = \"Chinese\"  and  country.Name = \"Afghanistan\" "
    },
    {
        "input": "[struct _ sep0] How many continents speak Chinese or are spoken in Afghanistan ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Afghanistan ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Chinese ), isofficial, percentage",
        "gold_natsql": "select count (  distinct country.Continent )  from city  where  countrylanguage.Language = \"Chinese\"  or  country.Name = \"Afghanistan\" "
    },
    {
        "input": "[struct _ sep0] how many countries are in Asia and are spoken in Afghanistan ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Afghanistan ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  and  country.Name = \"Afghanistan\" "
    },
    {
        "input": "[struct _ sep0] how many countries are in Asia or are spoken in Afghanistan ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Afghanistan ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  or  country.Name = \"Afghanistan\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries that became independent after 1950 and that use English and Dutch ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, Dutch ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  and  countrylanguage.Language = \"English\"  and  countrylanguage.Language = \"Dutch\" "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations that were founded after 1950 and that use English and Dutch ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, Dutch ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  and  countrylanguage.Language = \"English\"  and  countrylanguage.Language = \"Dutch\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries that became independent after 1950 and that speak both English and French . [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, French ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  and  countrylanguage.Language = \"English\"  and  countrylanguage.Language = \"French\" "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations that were founded after 1950 and that speak both English and French . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, French ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  and  countrylanguage.Language = \"English\"  and  countrylanguage.Language = \"French\" "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government and with English and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  countrylanguage.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic and with English and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  countrylanguage.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region and with English and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean, English ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  and  countrylanguage.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil and with English and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  and  countrylanguage.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil or with English and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  or  countrylanguage.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa and with English and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  countrylanguage.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Central Africa and with English and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  countrylanguage.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] Give the name of the country in Asia with the lowest life expectancy and with English and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  and  countrylanguage.Language = \"English\"  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the name of the country in Asia with the lowest life expectancy or with English and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  or  countrylanguage.Language = \"English\"  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the total population and maximum GNP in Asia and with English and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , max ( country.GNP )  from city  where  country.Continent = \"Asia\"  and  countrylanguage.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] How many type of governments are in Africa and with English and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Africa\"  and  countrylanguage.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] Find the name , population and expected life length of Asia country with the largest area and with English and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.LifeExpectancy from city  where  country.Continent = \"Asia\"  and  countrylanguage.Language = \"English\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] Find the name , population and expected life length of Asia country with the largest area or with English and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.LifeExpectancy from city  where  country.Continent = \"Asia\"  or  countrylanguage.Language = \"English\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country with the smallest population and with English and ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  countrylanguage.Language = \"English\"  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country with the largest area and with English and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  countrylanguage.Language = \"English\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries with the top 5 largest area and with English and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  countrylanguage.Language = \"English\"  order by country.SurfaceArea desc limit 5"
    },
    {
        "input": "[struct _ sep0] What are names of countries with the top 3 largest population and with English and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  countrylanguage.Language = \"English\"  order by country.Population desc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the names of the nations with the 3 lowest populations and with English and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  countrylanguage.Language = \"English\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] Return the names of the 3 countries with the fewest people and with English and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  countrylanguage.Language = \"English\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] how many countries are in Asia and with English and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  and  countrylanguage.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] Count the number of countries in Asia and with English and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  and  countrylanguage.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 72 and where Chinese is spoken ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Chinese ), isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , avg ( country.LifeExpectancy )  , country.Continent from city  where  avg ( country.LifeExpectancy )  < 72  and  countrylanguage.Language = \"Chinese\"  group by country.Continent "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government and speak Chinese ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language ( Chinese ), isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  countrylanguage.Language = \"Chinese\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic and speak Chinese ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language ( Chinese ), isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  countrylanguage.Language = \"Chinese\" "
    },
    {
        "input": "[struct _ sep0] How much surface area do the countires in the Caribbean cover together and speak Chinese ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Chinese, Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  and  countrylanguage.Language = \"Chinese\" "
    },
    {
        "input": "[struct _ sep0] How many different forms of governments are there in Africa and speak Chinese ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Chinese ), isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Africa\"  and  countrylanguage.Language = \"Chinese\" "
    },
    {
        "input": "[struct _ sep0] Which continent has the most diverse languages and speak Chinese ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Chinese ), isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  countrylanguage.Language = \"Chinese\"  group by country.Continent  order by count ( countrylanguage.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Which continent speaks the most languages and speak Chinese ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Chinese ), isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  countrylanguage.Language = \"Chinese\"  group by country.Continent  order by count ( countrylanguage.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] how many countries are in Asia and speak Chinese ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Chinese ), isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  and  countrylanguage.Language = \"Chinese\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries that became independent after 1950 and that use English or Dutch ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, Dutch ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  and  countrylanguage.Language = \"English\"  or  countrylanguage.Language = \"Dutch\" "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations that were founded after 1950 and that use English or Dutch ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, Dutch ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  and  countrylanguage.Language = \"English\"  or  countrylanguage.Language = \"Dutch\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region and on the Asia continent ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region or on the Asia continent ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil and on the Asia continent ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil or on the Asia continent ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa and on the Asia continent ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa or on the Asia continent ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Central Africa and on the Asia continent ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Central Africa or on the Asia continent ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the country codes for countries in which people speak langauges that are not English and on the Asia continent ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select  distinct countrylanguage.CountryCode from city  where  countrylanguage.Language != \"English\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the country codes for countries in which people speak langauges that are not English or on the Asia continent ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select  distinct countrylanguage.CountryCode from city  where  countrylanguage.Language != \"English\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Which language is the most popular in Aruba and are spoken by only one country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  country.Name = \"Aruba\"  and  count ( country.* )  = 1  group by countrylanguage.Language  order by countrylanguage.Percentage desc limit 1"
    },
    {
        "input": "[struct _ sep0] Which language is the most popular in Aruba or are spoken by only one country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  country.Name = \"Aruba\"  or  count ( country.* )  = 1  group by countrylanguage.Language  order by countrylanguage.Percentage desc limit 1"
    },
    {
        "input": "[struct _ sep0] What language is predominantly spoken in Aruba and are spoken by only one country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  country.Name = \"Aruba\"  and  count ( country.* )  = 1  group by countrylanguage.Language  order by countrylanguage.Percentage desc limit 1"
    },
    {
        "input": "[struct _ sep0] What language is predominantly spoken in Aruba or are spoken by only one country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  country.Name = \"Aruba\"  or  count ( country.* )  = 1  group by countrylanguage.Language  order by countrylanguage.Percentage desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region and in Republic governments ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  and  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region or in Republic governments ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  or  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil and in Republic governments ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  and  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil or in Republic governments ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  or  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa and in Republic governments ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa or in Republic governments ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Central Africa and in Republic governments ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Central Africa or in Republic governments ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Give the name of the country in Asia with the lowest life expectancy and in Republic governments ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  and  country.GovernmentForm = \"Republic\"  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the name of the country in Asia with the lowest life expectancy or in Republic governments ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  or  country.GovernmentForm = \"Republic\"  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the total population and maximum GNP in Asia and in Republic governments ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , max ( country.GNP )  from city  where  country.Continent = \"Asia\"  and  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What is the total population and maximum GNP in Asia or in Republic governments ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , max ( country.GNP )  from city  where  country.Continent = \"Asia\"  or  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] How many type of governments are in Africa and in Republic governments ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Africa\"  and  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] How many type of governments are in Africa or in Republic governments ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Africa\"  or  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Give the country codes for countries in which people speak langauges that are not English and in Republic governments ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select  distinct countrylanguage.CountryCode from city  where  countrylanguage.Language != \"English\"  and  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Give the country codes for countries in which people speak langauges that are not English or in Republic governments ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select  distinct countrylanguage.CountryCode from city  where  countrylanguage.Language != \"English\"  or  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] how many countries are in Asia and in Republic governments ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  and  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] how many countries are in Asia or in Republic governments ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  or  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Count the number of countries in Asia and in Republic governments ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  and  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Count the number of countries in Asia or in Republic governments ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  or  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Which language is the most popular in Aruba and are only used by a single country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  country.Name = \"Aruba\"  and  count ( country.* )  = 1  group by countrylanguage.Language  order by countrylanguage.Percentage desc limit 1"
    },
    {
        "input": "[struct _ sep0] Which language is the most popular in Aruba or are only used by a single country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  country.Name = \"Aruba\"  or  count ( country.* )  = 1  group by countrylanguage.Language  order by countrylanguage.Percentage desc limit 1"
    },
    {
        "input": "[struct _ sep0] What language is predominantly spoken in Aruba and are only used by a single country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  country.Name = \"Aruba\"  and  count ( country.* )  = 1  group by countrylanguage.Language  order by countrylanguage.Percentage desc limit 1"
    },
    {
        "input": "[struct _ sep0] What language is predominantly spoken in Aruba or are only used by a single country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  country.Name = \"Aruba\"  or  count ( country.* )  = 1  group by countrylanguage.Language  order by countrylanguage.Percentage desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region and with a Republic government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  and  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region or with a Republic government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  or  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil and with a Republic government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  and  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil or with a Republic government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  or  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa and with a Republic government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa or with a Republic government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Central Africa and with a Republic government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Central Africa or with a Republic government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Give the name of the country in Asia with the lowest life expectancy and with a Republic government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  and  country.GovernmentForm = \"Republic\"  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the name of the country in Asia with the lowest life expectancy or with a Republic government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  or  country.GovernmentForm = \"Republic\"  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the total population and maximum GNP in Asia and with a Republic government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , max ( country.GNP )  from city  where  country.Continent = \"Asia\"  and  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What is the total population and maximum GNP in Asia or with a Republic government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , max ( country.GNP )  from city  where  country.Continent = \"Asia\"  or  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] How many type of governments are in Africa and with a Republic government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Africa\"  and  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] How many type of governments are in Africa or with a Republic government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Africa\"  or  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Give the country codes for countries in which people speak langauges that are not English and with a Republic government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select  distinct countrylanguage.CountryCode from city  where  countrylanguage.Language != \"English\"  and  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Give the country codes for countries in which people speak langauges that are not English or with a Republic government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select  distinct countrylanguage.CountryCode from city  where  countrylanguage.Language != \"English\"  or  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] how many countries are in Asia and with a Republic government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  and  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] how many countries are in Asia or with a Republic government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  or  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Count the number of countries in Asia and with a Republic government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  and  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Count the number of countries in Asia or with a Republic government ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  or  country.GovernmentForm = \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Return the names of cities that have a population between 160000 and 900000 and that uses English . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select city.Name from city  where  city.Population between 160000 and 900000  and  countrylanguage.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] Return the names of cities that have a population between 160000 and 900000 or that uses English . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select city.Name from city  where  city.Population between 160000 and 900000  or  countrylanguage.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] Return the names of cities that have a population between 160000 and 900000 and that speaks English ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select city.Name from city  where  city.Population between 160000 and 900000  and  countrylanguage.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] Return the names of cities that have a population between 160000 and 900000 or that speaks English ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select city.Name from city  where  city.Population between 160000 and 900000  or  countrylanguage.Language = \"English\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil and with the largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the average GNP and total population in all nations whose government is US Territory and whose head of state is Beatrix ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( US Territory ), headofstate ( Beatrix ), capital, code2 ( US ) | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  country.GovernmentForm = \"US Territory\"  and  country.HeadOfState = \"Beatrix\" "
    },
    {
        "input": "[struct _ sep0] What is the average GNP and total population in all nations whose government is US Territory or whose head of state is Beatrix ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( US Territory ), headofstate ( Beatrix ), capital, code2 ( US ) | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  country.GovernmentForm = \"US Territory\"  or  country.HeadOfState = \"Beatrix\" "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government and used in the country the name of whose head of state is Beatrix . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate ( Beatrix ), capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.HeadOfState = \"Beatrix\" "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government or used in the country the name of whose head of state is Beatrix . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate ( Beatrix ), capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.HeadOfState = \"Beatrix\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic and used in the country the name of whose head of state is Beatrix . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate ( Beatrix ), capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.HeadOfState = \"Beatrix\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic or used in the country the name of whose head of state is Beatrix . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate ( Beatrix ), capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.HeadOfState = \"Beatrix\" "
    },
    {
        "input": "[struct _ sep0] How much surface area do the countires in the Caribbean cover together and used in the country the name of whose head of state is Beatrix . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate ( Beatrix ), capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  and  country.HeadOfState = \"Beatrix\" "
    },
    {
        "input": "[struct _ sep0] How much surface area do the countires in the Caribbean cover together or used in the country the name of whose head of state is Beatrix . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate ( Beatrix ), capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  or  country.HeadOfState = \"Beatrix\" "
    },
    {
        "input": "[struct _ sep0] Which language is the most popular in Aruba and used in the country the name of whose head of state is Beatrix . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate ( Beatrix ), capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  country.Name = \"Aruba\"  and  country.HeadOfState = \"Beatrix\"  order by countrylanguage.Percentage desc limit 1"
    },
    {
        "input": "[struct _ sep0] Which language is the most popular in Aruba or used in the country the name of whose head of state is Beatrix . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate ( Beatrix ), capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  country.Name = \"Aruba\"  or  country.HeadOfState = \"Beatrix\"  order by countrylanguage.Percentage desc limit 1"
    },
    {
        "input": "[struct _ sep0] What language is predominantly spoken in Aruba and used in the country the name of whose head of state is Beatrix . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate ( Beatrix ), capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  country.Name = \"Aruba\"  and  country.HeadOfState = \"Beatrix\"  order by countrylanguage.Percentage desc limit 1"
    },
    {
        "input": "[struct _ sep0] What language is predominantly spoken in Aruba or used in the country the name of whose head of state is Beatrix . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate ( Beatrix ), capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  country.Name = \"Aruba\"  or  country.HeadOfState = \"Beatrix\"  order by countrylanguage.Percentage desc limit 1"
    },
    {
        "input": "[struct _ sep0] How many different forms of governments are there in Africa and used in the country the name of whose head of state is Beatrix . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate ( Beatrix ), capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Africa\"  and  country.HeadOfState = \"Beatrix\" "
    },
    {
        "input": "[struct _ sep0] How many different forms of governments are there in Africa or used in the country the name of whose head of state is Beatrix . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate ( Beatrix ), capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Africa\"  or  country.HeadOfState = \"Beatrix\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of languages used in Aruba and used in the country the name of whose head of state is Beatrix . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate ( Beatrix ), capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.Name = \"Aruba\"  and  country.HeadOfState = \"Beatrix\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of languages used in Aruba or used in the country the name of whose head of state is Beatrix . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate ( Beatrix ), capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.Name = \"Aruba\"  or  country.HeadOfState = \"Beatrix\" "
    },
    {
        "input": "[struct _ sep0] How many languages are spoken in Aruba and used in the country the name of whose head of state is Beatrix . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate ( Beatrix ), capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.Name = \"Aruba\"  and  country.HeadOfState = \"Beatrix\" "
    },
    {
        "input": "[struct _ sep0] How many languages are spoken in Aruba or used in the country the name of whose head of state is Beatrix . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate ( Beatrix ), capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.Name = \"Aruba\"  or  country.HeadOfState = \"Beatrix\" "
    },
    {
        "input": "[struct _ sep0] how many countries are in Asia and used in the country the name of whose head of state is Beatrix . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate ( Beatrix ), capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  and  country.HeadOfState = \"Beatrix\" "
    },
    {
        "input": "[struct _ sep0] how many countries are in Asia or used in the country the name of whose head of state is Beatrix . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate ( Beatrix ), capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  or  country.HeadOfState = \"Beatrix\" "
    },
    {
        "input": "[struct _ sep0] Which language is spoken by the largest number of countries and used in the country the name of whose head of state is Beatrix . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate ( Beatrix ), capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  country.HeadOfState = \"Beatrix\"  group by countrylanguage.Language  order by count ( countrylanguage.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the language that is used by the largest number of Asia nations and that are founded before 1930 ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  country.Continent = \"Asia\"  and  country.IndepYear < 1930  group by countrylanguage.Language  order by count ( country.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the language that is used by the largest number of Asia nations or that are founded before 1930 ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  country.Continent = \"Asia\"  or  country.IndepYear < 1930  group by countrylanguage.Language  order by count ( country.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72 and that are founded before 1930 ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , country.GovernmentForm from city  where  avg ( country.LifeExpectancy )  > 72  and  country.IndepYear < 1930  group by country.GovernmentForm "
    },
    {
        "input": "[struct _ sep0] Give the language that is spoken in the most countries and that are founded before 1930 ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  country.IndepYear < 1930  group by countrylanguage.Language  order by count ( countrylanguage.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries that became independent after 1950 and that have greater surface area than any country ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  and  @.@ > min ( country.SurfaceArea )  "
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries that became independent after 1950 or that have greater surface area than any country ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  or  @.@ > min ( country.SurfaceArea )  "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations that were founded after 1950 and that have greater surface area than any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  and  @.@ > min ( country.SurfaceArea )  "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations that were founded after 1950 or that have greater surface area than any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  or  @.@ > min ( country.SurfaceArea )  "
    },
    {
        "input": "[struct _ sep0] What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72 and that have greater surface area than any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , country.GovernmentForm from city  where  avg ( country.LifeExpectancy )  > 72  and  @.@ > min ( country.SurfaceArea )   group by country.GovernmentForm "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government and in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government or in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic and in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic or in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region and in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  and  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region or in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil and in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  and  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil or in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa and in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa or in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Central Africa and in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Central Africa or in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country with the smallest population and in Europe ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Continent = \"Europe\"  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country with the largest area and in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Continent = \"Europe\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries with the top 5 largest area and in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  country.Continent = \"Europe\"  order by country.SurfaceArea desc limit 5"
    },
    {
        "input": "[struct _ sep0] What are names of countries with the top 3 largest population and in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  order by country.Population desc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the names of the nations with the 3 lowest populations and in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] Return the names of the 3 countries with the fewest people and in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government and have greater area than that of any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  @.@ > min ( country.SurfaceArea )  "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government or have greater area than that of any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  @.@ > min ( country.SurfaceArea )  "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic and have greater area than that of any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  @.@ > min ( country.SurfaceArea )  "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic or have greater area than that of any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  @.@ > min ( country.SurfaceArea )  "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region and have greater area than that of any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  and  @.@ > min ( country.SurfaceArea )  "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region or have greater area than that of any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  or  @.@ > min ( country.SurfaceArea )  "
    },
    {
        "input": "[struct _ sep0] How much surface area do the countires in the Caribbean cover together and have greater area than that of any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  and  @.@ > min ( country.SurfaceArea )  "
    },
    {
        "input": "[struct _ sep0] How much surface area do the countires in the Caribbean cover together or have greater area than that of any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  or  @.@ > min ( country.SurfaceArea )  "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa and have greater area than that of any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  @.@ > min ( country.SurfaceArea )  "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa or have greater area than that of any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  @.@ > min ( country.SurfaceArea )  "
    },
    {
        "input": "[struct _ sep0] How many different forms of governments are there in Africa and have greater area than that of any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Africa\"  and  @.@ > min ( country.SurfaceArea )  "
    },
    {
        "input": "[struct _ sep0] How many different forms of governments are there in Africa or have greater area than that of any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Africa\"  or  @.@ > min ( country.SurfaceArea )  "
    },
    {
        "input": "[struct _ sep0] How many continents speak Chinese and have greater area than that of any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Chinese ), isofficial, percentage",
        "gold_natsql": "select count (  distinct country.Continent )  from city  where  countrylanguage.Language = \"Chinese\"  and  @.@ > min ( country.SurfaceArea )  "
    },
    {
        "input": "[struct _ sep0] How many continents speak Chinese or have greater area than that of any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Chinese ), isofficial, percentage",
        "gold_natsql": "select count (  distinct country.Continent )  from city  where  countrylanguage.Language = \"Chinese\"  or  @.@ > min ( country.SurfaceArea )  "
    },
    {
        "input": "[struct _ sep0] how many countries are in Asia and have greater area than that of any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  and  @.@ > min ( country.SurfaceArea )  "
    },
    {
        "input": "[struct _ sep0] how many countries are in Asia or have greater area than that of any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  or  @.@ > min ( country.SurfaceArea )  "
    },
    {
        "input": "[struct _ sep0] Count the number of countries in Asia and have greater area than that of any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  and  @.@ > min ( country.SurfaceArea )  "
    },
    {
        "input": "[struct _ sep0] Count the number of countries in Asia or have greater area than that of any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  or  @.@ > min ( country.SurfaceArea )  "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government and in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government or in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic and in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic or in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region and in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  and  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region or in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil and in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  and  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil or in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa and in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa or in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Central Africa and in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Central Africa or in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country with the smallest population and in Europe ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Continent = \"Europe\"  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country with the largest area and in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Continent = \"Europe\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries with the top 5 largest area and in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  country.Continent = \"Europe\"  order by country.SurfaceArea desc limit 5"
    },
    {
        "input": "[struct _ sep0] What are names of countries with the top 3 largest population and in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  order by country.Population desc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the names of the nations with the 3 lowest populations and in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] Return the names of the 3 countries with the fewest people and in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries that became independent after 1950 and that have a population less than any country ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  and  @.@ < max ( country.Population )  "
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries that became independent after 1950 or that have a population less than any country ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  or  @.@ < max ( country.Population )  "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations that were founded after 1950 and that have a population less than any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  and  @.@ < max ( country.Population )  "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations that were founded after 1950 or that have a population less than any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  or  @.@ < max ( country.Population )  "
    },
    {
        "input": "[struct _ sep0] What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72 and that have a population less than any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , country.GovernmentForm from city  where  avg ( country.LifeExpectancy )  > 72  and  @.@ < max ( country.Population )   group by country.GovernmentForm "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government or in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic or in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region or in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil or in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa or in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Central Africa and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Central Africa or in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country with the smallest population and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Continent = \"Asia\"  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country with the largest area and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Continent = \"Asia\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries with the top 5 largest area and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  country.Continent = \"Asia\"  order by country.SurfaceArea desc limit 5"
    },
    {
        "input": "[struct _ sep0] What are names of countries with the top 3 largest population and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  order by country.Population desc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the names of the nations with the 3 lowest populations and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] Return the names of the 3 countries with the fewest people and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government and have a smaller population than that of any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  @.@ < min ( country.Population )  "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government or have a smaller population than that of any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  @.@ < min ( country.Population )  "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic and have a smaller population than that of any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  @.@ < min ( country.Population )  "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic or have a smaller population than that of any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  @.@ < min ( country.Population )  "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region and have a smaller population than that of any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  and  @.@ < min ( country.Population )  "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region or have a smaller population than that of any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  or  @.@ < min ( country.Population )  "
    },
    {
        "input": "[struct _ sep0] How much surface area do the countires in the Caribbean cover together and have a smaller population than that of any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  and  @.@ < min ( country.Population )  "
    },
    {
        "input": "[struct _ sep0] How much surface area do the countires in the Caribbean cover together or have a smaller population than that of any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  or  @.@ < min ( country.Population )  "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa and have a smaller population than that of any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  @.@ < min ( country.Population )  "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa or have a smaller population than that of any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  @.@ < min ( country.Population )  "
    },
    {
        "input": "[struct _ sep0] How many different forms of governments are there in Africa and have a smaller population than that of any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Africa\"  and  @.@ < min ( country.Population )  "
    },
    {
        "input": "[struct _ sep0] How many different forms of governments are there in Africa or have a smaller population than that of any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Africa\"  or  @.@ < min ( country.Population )  "
    },
    {
        "input": "[struct _ sep0] How many continents speak Chinese and have a smaller population than that of any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Chinese ), isofficial, percentage",
        "gold_natsql": "select count (  distinct country.Continent )  from city  where  countrylanguage.Language = \"Chinese\"  and  @.@ < min ( country.Population )  "
    },
    {
        "input": "[struct _ sep0] How many continents speak Chinese or have a smaller population than that of any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Chinese ), isofficial, percentage",
        "gold_natsql": "select count (  distinct country.Continent )  from city  where  countrylanguage.Language = \"Chinese\"  or  @.@ < min ( country.Population )  "
    },
    {
        "input": "[struct _ sep0] how many countries are in Asia and have a smaller population than that of any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  and  @.@ < min ( country.Population )  "
    },
    {
        "input": "[struct _ sep0] how many countries are in Asia or have a smaller population than that of any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  or  @.@ < min ( country.Population )  "
    },
    {
        "input": "[struct _ sep0] Count the number of countries in Asia and have a smaller population than that of any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  and  @.@ < min ( country.Population )  "
    },
    {
        "input": "[struct _ sep0] Count the number of countries in Asia or have a smaller population than that of any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  or  @.@ < min ( country.Population )  "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government or in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic or in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region or in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil or in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa or in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Central Africa and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Central Africa or in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country with the smallest population and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Continent = \"Asia\"  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country with the largest area and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Continent = \"Asia\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries with the top 5 largest area and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  country.Continent = \"Asia\"  order by country.SurfaceArea desc limit 5"
    },
    {
        "input": "[struct _ sep0] What are names of countries with the top 3 largest population and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  order by country.Population desc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the names of the nations with the 3 lowest populations and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] Return the names of the 3 countries with the fewest people and in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government and have a population that is larger than any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  @.@ > max ( country.Population )  "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government or have a population that is larger than any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  @.@ > max ( country.Population )  "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic and have a population that is larger than any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  @.@ > max ( country.Population )  "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic or have a population that is larger than any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  @.@ > max ( country.Population )  "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region and have a population that is larger than any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  and  @.@ > max ( country.Population )  "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region or have a population that is larger than any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  or  @.@ > max ( country.Population )  "
    },
    {
        "input": "[struct _ sep0] How much surface area do the countires in the Caribbean cover together and have a population that is larger than any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  and  @.@ > max ( country.Population )  "
    },
    {
        "input": "[struct _ sep0] How much surface area do the countires in the Caribbean cover together or have a population that is larger than any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  or  @.@ > max ( country.Population )  "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa and have a population that is larger than any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  @.@ > max ( country.Population )  "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa or have a population that is larger than any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  @.@ > max ( country.Population )  "
    },
    {
        "input": "[struct _ sep0] How many different forms of governments are there in Africa and have a population that is larger than any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Africa\"  and  @.@ > max ( country.Population )  "
    },
    {
        "input": "[struct _ sep0] How many different forms of governments are there in Africa or have a population that is larger than any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Africa\"  or  @.@ > max ( country.Population )  "
    },
    {
        "input": "[struct _ sep0] How many continents speak Chinese and have a population that is larger than any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Chinese ), isofficial, percentage",
        "gold_natsql": "select count (  distinct country.Continent )  from city  where  countrylanguage.Language = \"Chinese\"  and  @.@ > max ( country.Population )  "
    },
    {
        "input": "[struct _ sep0] How many continents speak Chinese or have a population that is larger than any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Chinese ), isofficial, percentage",
        "gold_natsql": "select count (  distinct country.Continent )  from city  where  countrylanguage.Language = \"Chinese\"  or  @.@ > max ( country.Population )  "
    },
    {
        "input": "[struct _ sep0] how many countries are in Asia and have a population that is larger than any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  and  @.@ > max ( country.Population )  "
    },
    {
        "input": "[struct _ sep0] how many countries are in Asia or have a population that is larger than any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  or  @.@ > max ( country.Population )  "
    },
    {
        "input": "[struct _ sep0] Count the number of countries in Asia and have a population that is larger than any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  and  @.@ > max ( country.Population )  "
    },
    {
        "input": "[struct _ sep0] Count the number of countries in Asia or have a population that is larger than any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  or  @.@ > max ( country.Population )  "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government or in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic or in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region or in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  or  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil or in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  or  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa or in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Central Africa and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Central Africa or in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country with the smallest population and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Continent = \"Africa\"  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country with the largest area and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Continent = \"Africa\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries with the top 5 largest area and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  country.Continent = \"Africa\"  order by country.SurfaceArea desc limit 5"
    },
    {
        "input": "[struct _ sep0] What are names of countries with the top 3 largest population and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Africa\"  order by country.Population desc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the names of the nations with the 3 lowest populations and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Africa\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] Return the names of the 3 countries with the fewest people and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Africa\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] What is the continent name which Anguilla belongs to and which have a population larger than that of any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Anguilla ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Anguilla ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  country.Name = \"Anguilla\"  and  @.@ > min ( country.Population )  "
    },
    {
        "input": "[struct _ sep0] What is the continent name which Anguilla belongs to or which have a population larger than that of any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Anguilla ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Anguilla ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  country.Name = \"Anguilla\"  or  @.@ > min ( country.Population )  "
    },
    {
        "input": "[struct _ sep0] Give the mean GNP and total population of nations which are considered US Territory and which have a population larger than that of any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( US Territory ), headofstate, capital, code2 ( US ) | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  country.GovernmentForm = \"US Territory\"  and  @.@ > min ( country.Population )  "
    },
    {
        "input": "[struct _ sep0] Give the mean GNP and total population of nations which are considered US Territory or which have a population larger than that of any country ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( US Territory ), headofstate, capital, code2 ( US ) | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  country.GovernmentForm = \"US Territory\"  or  @.@ > min ( country.Population )  "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government or in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic or in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region or in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  or  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil or in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  or  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa or in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Central Africa and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Central Africa or in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  country.Continent = \"Africa\" "
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country with the smallest population and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Continent = \"Africa\"  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country with the largest area and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Continent = \"Africa\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries with the top 5 largest area and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  country.Continent = \"Africa\"  order by country.SurfaceArea desc limit 5"
    },
    {
        "input": "[struct _ sep0] What are names of countries with the top 3 largest population and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Africa\"  order by country.Population desc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the names of the nations with the 3 lowest populations and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Africa\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] Return the names of the 3 countries with the fewest people and in Africa ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Africa\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries that became independent after 1950 and that do not speak English and ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  and  countrylanguage.Language != \"English\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries that became independent after 1950 or that do not speak English and ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  or  countrylanguage.Language != \"English\" "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations that were founded after 1950 and that do not speak English and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  and  countrylanguage.Language != \"English\" "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations that were founded after 1950 or that do not speak English and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  or  countrylanguage.Language != \"English\" "
    },
    {
        "input": "[struct _ sep0] What is the name of country that has the shortest life expectancy in Asia and that do not speak English and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  and  countrylanguage.Language != \"English\"  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the name of country that has the shortest life expectancy in Asia or that do not speak English and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  or  countrylanguage.Language != \"English\"  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is name of the country that speaks the largest number of languages and that do not speak English and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  countrylanguage.Language != \"English\"  group by country.Name  order by count ( countrylanguage.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the name of the nation that uses the greatest amount of languages and that do not speak English and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  countrylanguage.Language != \"English\"  group by country.Name  order by count ( countrylanguage.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the name , year of Independence , and surface area of the country that has the lowest population and that do not speak English and ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  countrylanguage.Language != \"English\"  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the name , population , and head of state for the country that has the largest area and that do not speak English and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  countrylanguage.Language != \"English\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries that became independent after 1950 and that do not speak English and ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  and  countrylanguage.Language != \"English\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries that became independent after 1950 or that do not speak English and ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  or  countrylanguage.Language != \"English\" "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations that were founded after 1950 and that do not speak English and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  and  countrylanguage.Language != \"English\" "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations that were founded after 1950 or that do not speak English and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  or  countrylanguage.Language != \"English\" "
    },
    {
        "input": "[struct _ sep0] What is the name of country that has the shortest life expectancy in Asia and that do not speak English and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  and  countrylanguage.Language != \"English\"  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the name of country that has the shortest life expectancy in Asia or that do not speak English and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  or  countrylanguage.Language != \"English\"  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is name of the country that speaks the largest number of languages and that do not speak English and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  countrylanguage.Language != \"English\"  group by country.Name  order by count ( countrylanguage.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the name of the nation that uses the greatest amount of languages and that do not speak English and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  countrylanguage.Language != \"English\"  group by country.Name  order by count ( countrylanguage.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the name , year of Independence , and surface area of the country that has the lowest population and that do not speak English and ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  countrylanguage.Language != \"English\"  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the name , population , and head of state for the country that has the largest area and that do not speak English and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  countrylanguage.Language != \"English\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] How much surface area do the countires in the Caribbean cover together and do not have Republic for governments . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  and  country.GovernmentForm != \"Republic\" "
    },
    {
        "input": "[struct _ sep0] How much surface area do the countires in the Caribbean cover together or do not have Republic for governments . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  or  country.GovernmentForm != \"Republic\" "
    },
    {
        "input": "[struct _ sep0] How many different forms of governments are there in Africa and do not have Republic for governments . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Africa\"  and  country.GovernmentForm != \"Republic\" "
    },
    {
        "input": "[struct _ sep0] How many different forms of governments are there in Africa or do not have Republic for governments . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Africa\"  or  country.GovernmentForm != \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of languages used in Aruba and do not have Republic for governments . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.Name = \"Aruba\"  and  country.GovernmentForm != \"Republic\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of languages used in Aruba or do not have Republic for governments . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.Name = \"Aruba\"  or  country.GovernmentForm != \"Republic\" "
    },
    {
        "input": "[struct _ sep0] How many languages are spoken in Aruba and do not have Republic for governments . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.Name = \"Aruba\"  and  country.GovernmentForm != \"Republic\" "
    },
    {
        "input": "[struct _ sep0] How many languages are spoken in Aruba or do not have Republic for governments . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.Name = \"Aruba\"  or  country.GovernmentForm != \"Republic\" "
    },
    {
        "input": "[struct _ sep0] Which continent has the most diverse languages and do not have Republic for governments . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  country.GovernmentForm != \"Republic\"  group by country.Continent  order by count ( countrylanguage.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Which continent speaks the most languages and do not have Republic for governments . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  country.GovernmentForm != \"Republic\"  group by country.Continent  order by count ( countrylanguage.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] How many continents speak Chinese and do not have Republic for governments . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language ( Chinese ), isofficial, percentage",
        "gold_natsql": "select count (  distinct country.Continent )  from city  where  countrylanguage.Language = \"Chinese\"  and  country.GovernmentForm != \"Republic\" "
    },
    {
        "input": "[struct _ sep0] How many continents speak Chinese or do not have Republic for governments . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language ( Chinese ), isofficial, percentage",
        "gold_natsql": "select count (  distinct country.Continent )  from city  where  countrylanguage.Language = \"Chinese\"  or  country.GovernmentForm != \"Republic\" "
    },
    {
        "input": "[struct _ sep0] how many countries are in Asia and do not have Republic for governments . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  and  country.GovernmentForm != \"Republic\" "
    },
    {
        "input": "[struct _ sep0] how many countries are in Asia or do not have Republic for governments . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  or  country.GovernmentForm != \"Republic\" "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government and are in Europe countries ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government or are in Europe countries ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic and are in Europe countries ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic or are in Europe countries ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] How much surface area do the countires in the Caribbean cover together and are in Europe countries ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  and  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] How much surface area do the countires in the Caribbean cover together or are in Europe countries ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] How many people live in Gelderland district and are in Europe countries ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Gelderland ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( city.Population )  from city  where  city.District = \"Gelderland\"  and  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of languages used in Aruba and are in Europe countries ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.Name = \"Aruba\"  and  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of languages used in Aruba or are in Europe countries ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.Name = \"Aruba\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] How many languages are spoken in Aruba and are in Europe countries ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.Name = \"Aruba\"  and  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] How many languages are spoken in Aruba or are in Europe countries ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.Name = \"Aruba\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] Find the city with the largest population that uses English and are in Europe countries ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select city.Name from city  where  countrylanguage.Language = \"English\"  and  country.Continent = \"Europe\"  order by city.Population desc limit 1"
    },
    {
        "input": "[struct _ sep0] Find the city with the largest population that uses English or are in Europe countries ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select city.Name from city  where  countrylanguage.Language = \"English\"  or  country.Continent = \"Europe\"  order by city.Population desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region and in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  and  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region or in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil and in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  and  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil or in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa and in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa or in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Central Africa and in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Central Africa or in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe, Africa ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] Find the city with the largest population that uses English and in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select city.Name from city  where  countrylanguage.Language = \"English\"  and  country.Continent = \"Europe\"  order by city.Population desc limit 1"
    },
    {
        "input": "[struct _ sep0] Find the city with the largest population that uses English or in Europe ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select city.Name from city  where  countrylanguage.Language = \"English\"  or  country.Continent = \"Europe\"  order by city.Population desc limit 1"
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government and are in Asia countries ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government or are in Asia countries ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic and are in Asia countries ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic or are in Asia countries ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How much surface area do the countires in the Caribbean cover together and are in Asia countries ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How much surface area do the countires in the Caribbean cover together or are in Asia countries ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many people live in Gelderland district and are in Asia countries ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Gelderland ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( city.Population )  from city  where  city.District = \"Gelderland\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of languages used in Aruba and are in Asia countries ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.Name = \"Aruba\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of languages used in Aruba or are in Asia countries ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.Name = \"Aruba\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many languages are spoken in Aruba and are in Asia countries ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.Name = \"Aruba\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many languages are spoken in Aruba or are in Asia countries ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.Name = \"Aruba\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Find the city with the largest population that uses English and are in Asia countries ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select city.Name from city  where  countrylanguage.Language = \"English\"  and  country.Continent = \"Asia\"  order by city.Population desc limit 1"
    },
    {
        "input": "[struct _ sep0] Find the city with the largest population that uses English or are in Asia countries ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select city.Name from city  where  countrylanguage.Language = \"English\"  or  country.Continent = \"Asia\"  order by city.Population desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries that became independent after 1950 and that are in Asia and ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries that became independent after 1950 or that are in Asia and ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations that were founded after 1950 and that are in Asia and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations that were founded after 1950 or that are in Asia and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the most populace city that speaks English and that are in Asia and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select city.Name from city  where  countrylanguage.Language = \"English\"  and  country.Continent = \"Asia\"  order by city.Population desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the most populace city that speaks English or that are in Asia and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select city.Name from city  where  countrylanguage.Language = \"English\"  or  country.Continent = \"Asia\"  order by city.Population desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72 and that are in Asia and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , country.GovernmentForm from city  where  avg ( country.LifeExpectancy )  > 72  and  country.Continent = \"Asia\"  group by country.GovernmentForm "
    },
    {
        "input": "[struct _ sep0] Return the names of cities that have a population between 160000 and 900000 and that are in Asia and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select city.Name from city  where  city.Population between 160000 and 900000  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Return the names of cities that have a population between 160000 and 900000 or that are in Asia and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select city.Name from city  where  city.Population between 160000 and 900000  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil and with the smallest population ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries that became independent after 1950 and that has the lowest population . [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the names of the nations that were founded after 1950 and that has the lowest population . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the names of nations that speak both English and French and that has the lowest population . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, French ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.Language = \"French\"  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the regions that use English or Dutch and that has the lowest population . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, Dutch ), isofficial, percentage",
        "gold_natsql": "select  distinct country.Region from city  where  countrylanguage.Language = \"English\"  or  countrylanguage.Language = \"Dutch\"  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the codes of the countries that do not speak English and whose government forms are not Republic and that has the lowest population . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Code from city  where  countrylanguage.Language != \"English\"  and  country.GovernmentForm != \"Republic\"  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] Return the codes of countries that do not speak English and do not have Republic for governments and that has the lowest population . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Code from city  where  countrylanguage.Language != \"English\"  and  country.GovernmentForm != \"Republic\"  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil and with the largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries that became independent after 1950 and that has the largest area . [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the names of the nations that were founded after 1950 and that has the largest area . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the names of nations that speak both English and French and that has the largest area . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, French ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.Language = \"French\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the regions that use English or Dutch and that has the largest area . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, Dutch ), isofficial, percentage",
        "gold_natsql": "select  distinct country.Region from city  where  countrylanguage.Language = \"English\"  or  countrylanguage.Language = \"Dutch\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the codes of the countries that do not speak English and whose government forms are not Republic and that has the largest area . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Code from city  where  countrylanguage.Language != \"English\"  and  country.GovernmentForm != \"Republic\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] Return the codes of countries that do not speak English and do not have Republic for governments and that has the largest area . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language ( English ), isofficial, percentage",
        "gold_natsql": "select country.Code from city  where  countrylanguage.Language != \"English\"  and  country.GovernmentForm != \"Republic\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names of the countries that are in the continent of Europe and have a population of 80000 and that has the largest area . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  and  country.Population = \"80000\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the names of countries that are in Europe and have a population equal to 80000 and that has the largest area . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  and  country.Population = \"80000\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the cities whose population is between 160000 and 900000 and whose population is greater than the average population of cities ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select city.Name from city  where  city.Population between 160000 and 900000  and  @.@ > avg ( city.Population )  "
    },
    {
        "input": "[struct _ sep0] What are the cities whose population is between 160000 and 900000 or whose population is greater than the average population of cities ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select city.Name from city  where  city.Population between 160000 and 900000  or  @.@ > avg ( city.Population )  "
    },
    {
        "input": "[struct _ sep0] How many people live in Gelderland district and have a population that is above the average population across all cities ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Gelderland ), population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( city.Population )  from city  where  city.District = \"Gelderland\"  and  @.@ > avg ( city.Population )  "
    },
    {
        "input": "[struct _ sep0] How many people live in Gelderland district or have a population that is above the average population across all cities ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Gelderland ), population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( city.Population )  from city  where  city.District = \"Gelderland\"  or  @.@ > avg ( city.Population )  "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil and with the top 5 largest area ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  order by country.SurfaceArea desc limit 5"
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil and with the top 3 largest population ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  order by country.Population desc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil and with the 3 lowest populations ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the names of nations speak both English and French and with the 3 lowest populations ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( English, French ), isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  countrylanguage.Language = \"English\"  and  countrylanguage.Language = \"French\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil and with the fewest people . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government and are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government or are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic and are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic or are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region and are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region or are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How much surface area do the countires in the Caribbean cover together and are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How much surface area do the countires in the Caribbean cover together or are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa and are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa or are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of languages used in Aruba and are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.Name = \"Aruba\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of languages used in Aruba or are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.Name = \"Aruba\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many languages are spoken in Aruba and are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.Name = \"Aruba\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many languages are spoken in Aruba or are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.Name = \"Aruba\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] Which continent has the most diverse languages and are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  country.Continent = \"Asia\"  group by country.Continent  order by count ( countrylanguage.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Which continent speaks the most languages and are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  country.Continent = \"Asia\"  group by country.Continent  order by count ( countrylanguage.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] How many continents speak Chinese and are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Chinese ), isofficial, percentage",
        "gold_natsql": "select count (  distinct country.Continent )  from city  where  countrylanguage.Language = \"Chinese\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many continents speak Chinese or are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Chinese ), isofficial, percentage",
        "gold_natsql": "select count (  distinct country.Continent )  from city  where  countrylanguage.Language = \"Chinese\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country with the smallest population and are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Continent = \"Asia\"  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country with the largest area and are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Continent = \"Asia\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries with the top 5 largest area and are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  country.Continent = \"Asia\"  order by country.SurfaceArea desc limit 5"
    },
    {
        "input": "[struct _ sep0] What are names of countries with the top 3 largest population and are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  order by country.Population desc limit 3"
    },
    {
        "input": "[struct _ sep0] Return the names of the 3 countries with the fewest people and are in Asia ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government and in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government or in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic and in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic or in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region and in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region or in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil and in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil or in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa and in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa or in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Central Africa and in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Central Africa or in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa, Asia ), region ( Central Africa ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  country.Continent = \"Asia\" "
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country with the smallest population and in Asia . [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Continent = \"Asia\"  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country with the largest area and in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Continent = \"Asia\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries with the top 5 largest area and in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  country.Continent = \"Asia\"  order by country.SurfaceArea desc limit 5"
    },
    {
        "input": "[struct _ sep0] What are names of countries with the top 3 largest population and in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  order by country.Population desc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the names of the nations with the 3 lowest populations and in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] Return the names of the 3 countries with the fewest people and in Asia . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries that became independent after 1950 and that are in the continent of Europe and ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  and  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries that became independent after 1950 or that are in the continent of Europe and ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations that were founded after 1950 and that are in the continent of Europe and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  and  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations that were founded after 1950 or that are in the continent of Europe and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What is name of the country that speaks the largest number of languages and that are in the continent of Europe and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  group by country.Name  order by count ( countrylanguage.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the name of the nation that uses the greatest amount of languages and that are in the continent of Europe and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  group by country.Name  order by count ( countrylanguage.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the name , year of Independence , and surface area of the country that has the lowest population and that are in the continent of Europe and ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Continent = \"Europe\"  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the name , population , and head of state for the country that has the largest area and that are in the continent of Europe and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Continent = \"Europe\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72 and that are in the continent of Europe and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , country.GovernmentForm from city  where  avg ( country.LifeExpectancy )  > 72  and  country.Continent = \"Europe\"  group by country.GovernmentForm "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government and have a population of 80000 ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government or have a population of 80000 ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic and have a population of 80000 ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic or have a population of 80000 ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] How much surface area do the countires in the Caribbean cover together and have a population of 80000 ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  and  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] How much surface area do the countires in the Caribbean cover together or have a population of 80000 ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  or  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] How many different forms of governments are there in Africa and have a population of 80000 ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Africa\"  and  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] How many different forms of governments are there in Africa or have a population of 80000 ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Africa\"  or  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of languages used in Aruba and have a population of 80000 ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.Name = \"Aruba\"  and  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of languages used in Aruba or have a population of 80000 ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.Name = \"Aruba\"  or  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] How many languages are spoken in Aruba and have a population of 80000 ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.Name = \"Aruba\"  and  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] How many languages are spoken in Aruba or have a population of 80000 ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.Name = \"Aruba\"  or  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] Which continent has the most diverse languages and have a population of 80000 ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  country.Population = \"80000\"  group by country.Continent  order by count ( countrylanguage.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Which continent speaks the most languages and have a population of 80000 ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  country.Population = \"80000\"  group by country.Continent  order by count ( countrylanguage.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] How many continents speak Chinese and have a population of 80000 ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Chinese ), isofficial, percentage",
        "gold_natsql": "select count (  distinct country.Continent )  from city  where  countrylanguage.Language = \"Chinese\"  and  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] How many continents speak Chinese or have a population of 80000 ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Chinese ), isofficial, percentage",
        "gold_natsql": "select count (  distinct country.Continent )  from city  where  countrylanguage.Language = \"Chinese\"  or  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] how many countries are in Asia and have a population of 80000 ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  and  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] how many countries are in Asia or have a population of 80000 ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  or  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries that became independent after 1950 and that are in Europe and ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  and  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries that became independent after 1950 or that are in Europe and ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations that were founded after 1950 and that are in Europe and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  and  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations that were founded after 1950 or that are in Europe and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  or  country.Continent = \"Europe\" "
    },
    {
        "input": "[struct _ sep0] What is name of the country that speaks the largest number of languages and that are in Europe and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  group by country.Name  order by count ( countrylanguage.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the name of the nation that uses the greatest amount of languages and that are in Europe and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Europe\"  group by country.Name  order by count ( countrylanguage.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the name , year of Independence , and surface area of the country that has the lowest population and that are in Europe and ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Continent = \"Europe\"  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the name , population , and head of state for the country that has the largest area and that are in Europe and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Continent = \"Europe\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72 and that are in Europe and ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Europe ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , country.GovernmentForm from city  where  avg ( country.LifeExpectancy )  > 72  and  country.Continent = \"Europe\"  group by country.GovernmentForm "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government and have a population equal to 80000 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government or have a population equal to 80000 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic and have a population equal to 80000 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic or have a population equal to 80000 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] How much surface area do the countires in the Caribbean cover together and have a population equal to 80000 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  and  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] How much surface area do the countires in the Caribbean cover together or have a population equal to 80000 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region ( Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  or  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] How many different forms of governments are there in Africa and have a population equal to 80000 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Africa\"  and  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] How many different forms of governments are there in Africa or have a population equal to 80000 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Africa ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count (  distinct country.GovernmentForm )  from city  where  country.Continent = \"Africa\"  or  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of languages used in Aruba and have a population equal to 80000 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.Name = \"Aruba\"  and  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] What is the total number of languages used in Aruba or have a population equal to 80000 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.Name = \"Aruba\"  or  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] How many languages are spoken in Aruba and have a population equal to 80000 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.Name = \"Aruba\"  and  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] How many languages are spoken in Aruba or have a population equal to 80000 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Aruba ), continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname ( Aruba ), governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( countrylanguage.Language )  from city  where  country.Name = \"Aruba\"  or  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] Which continent has the most diverse languages and have a population equal to 80000 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  country.Population = \"80000\"  group by country.Continent  order by count ( countrylanguage.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Which continent speaks the most languages and have a population equal to 80000 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Continent from city  where  country.Population = \"80000\"  group by country.Continent  order by count ( countrylanguage.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] How many continents speak Chinese and have a population equal to 80000 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Chinese ), isofficial, percentage",
        "gold_natsql": "select count (  distinct country.Continent )  from city  where  countrylanguage.Language = \"Chinese\"  and  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] How many continents speak Chinese or have a population equal to 80000 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Chinese ), isofficial, percentage",
        "gold_natsql": "select count (  distinct country.Continent )  from city  where  countrylanguage.Language = \"Chinese\"  or  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] how many countries are in Asia and have a population equal to 80000 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  and  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] how many countries are in Asia or have a population equal to 80000 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.Continent = \"Asia\"  or  country.Population = \"80000\" "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government and in the continent of North America ? [/struct _ sep0]| world _ 1 | city : id, name ( Americana ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( North America ), region ( North America ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Continent = \"North America\" "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government or in the continent of North America ? [/struct _ sep0]| world _ 1 | city : id, name ( Americana ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( North America ), region ( North America ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Continent = \"North America\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic and in the continent of North America ? [/struct _ sep0]| world _ 1 | city : id, name ( Americana ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( North America ), region ( North America ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Continent = \"North America\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic or in the continent of North America ? [/struct _ sep0]| world _ 1 | city : id, name ( Americana ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( North America ), region ( North America ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Continent = \"North America\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region and in the continent of North America ? [/struct _ sep0]| world _ 1 | city : id, name ( Americana ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( North America ), region ( North America, Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  and  country.Continent = \"North America\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region or in the continent of North America ? [/struct _ sep0]| world _ 1 | city : id, name ( Americana ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( North America ), region ( North America, Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  or  country.Continent = \"North America\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil and in the continent of North America ? [/struct _ sep0]| world _ 1 | city : id, name ( Americana ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( North America ), region ( North America ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  and  country.Continent = \"North America\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil or in the continent of North America ? [/struct _ sep0]| world _ 1 | city : id, name ( Americana ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( North America ), region ( North America ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  or  country.Continent = \"North America\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa and in the continent of North America ? [/struct _ sep0]| world _ 1 | city : id, name ( Americana ), countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( North America, Africa ), region ( Central Africa, North America ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  country.Continent = \"North America\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa or in the continent of North America ? [/struct _ sep0]| world _ 1 | city : id, name ( Americana ), countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( North America, Africa ), region ( Central Africa, North America ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  country.Continent = \"North America\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Central Africa and in the continent of North America ? [/struct _ sep0]| world _ 1 | city : id, name ( Americana ), countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( North America, Africa ), region ( Central Africa, North America ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  country.Continent = \"North America\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Central Africa or in the continent of North America ? [/struct _ sep0]| world _ 1 | city : id, name ( Americana ), countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( North America, Africa ), region ( Central Africa, North America ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  country.Continent = \"North America\" "
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country with the smallest population and in the continent of North America ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence, Americana ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( North America ), region ( North America ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Continent = \"North America\"  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country with the largest area and in the continent of North America ? [/struct _ sep0]| world _ 1 | city : id, name ( Americana ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( North America ), region ( North America ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Continent = \"North America\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries with the top 5 largest area and in the continent of North America ? [/struct _ sep0]| world _ 1 | city : id, name ( Americana ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( North America ), region ( North America ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  country.Continent = \"North America\"  order by country.SurfaceArea desc limit 5"
    },
    {
        "input": "[struct _ sep0] What are names of countries with the top 3 largest population and in the continent of North America ? [/struct _ sep0]| world _ 1 | city : id, name ( Americana ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( North America ), region ( North America ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"North America\"  order by country.Population desc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the names of the nations with the 3 lowest populations and in the continent of North America ? [/struct _ sep0]| world _ 1 | city : id, name ( Americana ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( North America ), region ( North America ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"North America\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] Return the names of the 3 countries with the fewest people and in the continent of North America ? [/struct _ sep0]| world _ 1 | city : id, name ( Americana ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( North America ), region ( North America ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"North America\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] What is the average GNP and total population in all nations whose government is US Territory and whose area is bigger than 3000 ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( US Territory ), headofstate, capital, code2 ( US ) | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  country.GovernmentForm = \"US Territory\"  and  country.SurfaceArea > 3000 "
    },
    {
        "input": "[struct _ sep0] What is the average GNP and total population in all nations whose government is US Territory or whose area is bigger than 3000 ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( US Territory ), headofstate, capital, code2 ( US ) | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.GNP )  , sum ( country.Population )  from city  where  country.GovernmentForm = \"US Territory\"  or  country.SurfaceArea > 3000 "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government and in North America ? [/struct _ sep0]| world _ 1 | city : id, name ( Americana ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( North America ), region ( North America ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Continent = \"North America\" "
    },
    {
        "input": "[struct _ sep0] How many countries have a Republic as their form of government or in North America ? [/struct _ sep0]| world _ 1 | city : id, name ( Americana ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( North America ), region ( North America ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Continent = \"North America\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic and in North America ? [/struct _ sep0]| world _ 1 | city : id, name ( Americana ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( North America ), region ( North America ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  and  country.Continent = \"North America\" "
    },
    {
        "input": "[struct _ sep0] How many countries have governments that are Republic or in North America ? [/struct _ sep0]| world _ 1 | city : id, name ( Americana ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( North America ), region ( North America ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform ( Republic ), headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select count ( country.* )  from city  where  country.GovernmentForm = \"Republic\"  or  country.Continent = \"North America\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region and in North America ? [/struct _ sep0]| world _ 1 | city : id, name ( Americana ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( North America ), region ( North America, Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  and  country.Continent = \"North America\" "
    },
    {
        "input": "[struct _ sep0] What is the total surface area of the countries in the Caribbean region or in North America ? [/struct _ sep0]| world _ 1 | city : id, name ( Americana ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( North America ), region ( North America, Caribbean ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language ( Caribbean ), isofficial, percentage",
        "gold_natsql": "select sum ( country.SurfaceArea )  from city  where  country.Region = \"Caribbean\"  or  country.Continent = \"North America\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil and in North America ? [/struct _ sep0]| world _ 1 | city : id, name ( Americana ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( North America ), region ( North America ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  and  country.Continent = \"North America\" "
    },
    {
        "input": "[struct _ sep0] What are the population and life expectancies in Brazil or in North America ? [/struct _ sep0]| world _ 1 | city : id, name ( Americana ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name ( Brazil ), continent ( North America ), region ( North America ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Population , country.LifeExpectancy from city  where  country.Name = \"Brazil\"  or  country.Continent = \"North America\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa and in North America ? [/struct _ sep0]| world _ 1 | city : id, name ( Americana ), countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( North America, Africa ), region ( Central Africa, North America ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  country.Continent = \"North America\" "
    },
    {
        "input": "[struct _ sep0] What is the average expected life expectancy for countries in the region of Central Africa or in North America ? [/struct _ sep0]| world _ 1 | city : id, name ( Americana ), countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( North America, Africa ), region ( Central Africa, North America ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  country.Continent = \"North America\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Central Africa and in North America ? [/struct _ sep0]| world _ 1 | city : id, name ( Americana ), countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( North America, Africa ), region ( Central Africa, North America ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  and  country.Continent = \"North America\" "
    },
    {
        "input": "[struct _ sep0] How long is the people 's average life expectancy in Central Africa or in North America ? [/struct _ sep0]| world _ 1 | city : id, name ( Americana ), countrycode, district ( Central ), population | sqlite _ sequence : name, seq | country : code, name, continent ( North America, Africa ), region ( Central Africa, North America ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select avg ( country.LifeExpectancy )  from city  where  country.Region = \"Central Africa\"  or  country.Continent = \"North America\" "
    },
    {
        "input": "[struct _ sep0] What are the name , Independence year , and surface area of the country with the smallest population and in North America ? [/struct _ sep0]| world _ 1 | city : id, name ( Independence, Americana ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( North America ), region ( North America ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.Continent = \"North America\"  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the population , name and leader of the country with the largest area and in North America ? [/struct _ sep0]| world _ 1 | city : id, name ( Americana ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( North America ), region ( North America ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.Population , country.HeadOfState from city  where  country.Continent = \"North America\"  order by country.SurfaceArea desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names and areas of countries with the top 5 largest area and in North America ? [/struct _ sep0]| world _ 1 | city : id, name ( Americana ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( North America ), region ( North America ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea from city  where  country.Continent = \"North America\"  order by country.SurfaceArea desc limit 5"
    },
    {
        "input": "[struct _ sep0] What are names of countries with the top 3 largest population and in North America ? [/struct _ sep0]| world _ 1 | city : id, name ( Americana ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( North America ), region ( North America ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"North America\"  order by country.Population desc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the names of the nations with the 3 lowest populations and in North America ? [/struct _ sep0]| world _ 1 | city : id, name ( Americana ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( North America ), region ( North America ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"North America\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] Return the names of the 3 countries with the fewest people and in North America ? [/struct _ sep0]| world _ 1 | city : id, name ( Americana ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( North America ), region ( North America ), surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"North America\"  order by country.Population asc limit 3"
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries that became independent after 1950 and that have a surface area greater than 3000 . [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  and  country.SurfaceArea > 3000 "
    },
    {
        "input": "[struct _ sep0] What are the names of all the countries that became independent after 1950 or that have a surface area greater than 3000 . [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  or  country.SurfaceArea > 3000 "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations that were founded after 1950 and that have a surface area greater than 3000 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  and  country.SurfaceArea > 3000 "
    },
    {
        "input": "[struct _ sep0] Give the names of the nations that were founded after 1950 or that have a surface area greater than 3000 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.IndepYear > 1950  or  country.SurfaceArea > 3000 "
    },
    {
        "input": "[struct _ sep0] What is the name of country that has the shortest life expectancy in Asia and that have a surface area greater than 3000 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  and  country.SurfaceArea > 3000  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the name of country that has the shortest life expectancy in Asia or that have a surface area greater than 3000 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.Continent = \"Asia\"  or  country.SurfaceArea > 3000  order by country.LifeExpectancy asc limit 1"
    },
    {
        "input": "[struct _ sep0] What is name of the country that speaks the largest number of languages and that have a surface area greater than 3000 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.SurfaceArea > 3000  group by country.Name  order by count ( countrylanguage.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the name of the nation that uses the greatest amount of languages and that have a surface area greater than 3000 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name from city  where  country.SurfaceArea > 3000  group by country.Name  order by count ( countrylanguage.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the language that is used by the largest number of Asia nations and that have a surface area greater than 3000 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  country.Continent = \"Asia\"  and  country.SurfaceArea > 3000  group by countrylanguage.Language  order by count ( country.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the language that is used by the largest number of Asia nations or that have a surface area greater than 3000 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent ( Asia ), region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  country.Continent = \"Asia\"  or  country.SurfaceArea > 3000  group by countrylanguage.Language  order by count ( country.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the name , year of Independence , and surface area of the country that has the lowest population and that have a surface area greater than 3000 . [/struct _ sep0]| world _ 1 | city : id, name ( Independence ), countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select country.Name , country.SurfaceArea , country.IndepYear from city  where  country.SurfaceArea > 3000  order by country.Population asc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72 and that have a surface area greater than 3000 . [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate, capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select sum ( country.Population )  , country.GovernmentForm from city  where  avg ( country.LifeExpectancy )  > 72  and  country.SurfaceArea > 3000  group by country.GovernmentForm "
    },
    {
        "input": "[struct _ sep0] What is the official language used in the country the name of whose head of state is Beatrix and spoken by the largest percentage of people ? [/struct _ sep0]| world _ 1 | city : id, name, countrycode, district, population | sqlite _ sequence : name, seq | country : code, name, continent, region, surfacearea, indepyear, population, lifeexpectancy, gnp, gnpold, localname, governmentform, headofstate ( Beatrix ), capital, code2 | countrylanguage : countrycode, language, isofficial, percentage",
        "gold_natsql": "select countrylanguage.Language from city  where  countrylanguage.IsOfficial = \"T\"  and  country.HeadOfState = \"Beatrix\"  order by countrylanguage.Percentage desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names of conductors whose nationalities are not ' USA ' , in ascending order of age . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality ( USA ), year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  conductor.Nationality != \"USA\"  order by conductor.Age asc"
    },
    {
        "input": "[struct _ sep0] Return the names of conductors that do not have the nationality ' USA ' , in ascending order of age . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality ( USA ), year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  conductor.Nationality != \"USA\"  order by conductor.Age asc"
    },
    {
        "input": "[struct _ sep0] What are the names of conductors whose nationalities are not ' USA ' , ordered by age ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality ( USA ), year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  conductor.Nationality != \"USA\"  order by conductor.Age asc"
    },
    {
        "input": "[struct _ sep0] Return the names of conductors that do not have the nationality ' USA ' , ordered by age ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality ( USA ), year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  conductor.Nationality != \"USA\"  order by conductor.Age asc"
    },
    {
        "input": "[struct _ sep0] Count the number of conductors , whose nationalities are not ' USA ' ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality ( USA ), year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select count ( conductor.* )  from conductor  where  conductor.Nationality != \"USA\" "
    },
    {
        "input": "[struct _ sep0] Count the number of different nationalities of conductors , whose nationalities are not ' USA ' ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality ( USA ), year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select count (  distinct conductor.Nationality )  from conductor  where  conductor.Nationality != \"USA\" "
    },
    {
        "input": "[struct _ sep0] Count the number of conductors , that do not have the nationality ' USA ' . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality ( USA ), year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select count ( conductor.* )  from conductor  where  conductor.Nationality != \"USA\" "
    },
    {
        "input": "[struct _ sep0] Count the number of different nationalities of conductors , that do not have the nationality ' USA ' . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality ( USA ), year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select count (  distinct conductor.Nationality )  from conductor  where  conductor.Nationality != \"USA\" "
    },
    {
        "input": "[struct _ sep0] Show the names of conductors that have conducted more than one orchestras and that do not have the nationality ' USA ' . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality ( USA ), year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  count ( orchestra.* )  > 1  and  conductor.Nationality != \"USA\"  group by orchestra.Conductor_ID "
    },
    {
        "input": "[struct _ sep0] Show the names of conductors that have conducted more than one orchestras or that do not have the nationality ' USA ' . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality ( USA ), year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  count ( orchestra.* )  > 1  or  conductor.Nationality != \"USA\"  group by orchestra.Conductor_ID "
    },
    {
        "input": "[struct _ sep0] Show the name of the conductor that has conducted the most number of orchestras and that do not have the nationality ' USA ' . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality ( USA ), year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  conductor.Nationality != \"USA\"  group by orchestra.Conductor_ID  order by count ( orchestra.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Please show the name of the conductor that has conducted orchestras founded after 2008 and that do not have the nationality ' USA ' . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality ( USA ), year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  orchestra.Year_of_Founded > 2008  and  conductor.Nationality != \"USA\" "
    },
    {
        "input": "[struct _ sep0] Please show the name of the conductor that has conducted orchestras founded after 2008 or that do not have the nationality ' USA ' . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality ( USA ), year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  orchestra.Year_of_Founded > 2008  or  conductor.Nationality != \"USA\" "
    },
    {
        "input": "[struct _ sep0] Show the record companies shared by orchestras founded before 2003 and after 2003 , in descending order of years ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select orchestra.Record_Company from conductor  where  orchestra.Year_of_Founded < 2003  and  orchestra.Year_of_Founded > 2003  order by orchestra.Year_of_Founded desc"
    },
    {
        "input": "[struct _ sep0] What are the record companies that are used by both orchestras founded before 2003 and those founded after 2003 , in descending order of years ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select orchestra.Record_Company from conductor  where  orchestra.Year_of_Founded < 2003  and  orchestra.Year_of_Founded > 2003  order by orchestra.Year_of_Founded desc"
    },
    {
        "input": "[struct _ sep0] Show the record companies shared by orchestras founded before 2003 and after 2003 , sorted descending by the years in which they were founded . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select orchestra.Record_Company from conductor  where  orchestra.Year_of_Founded < 2003  and  orchestra.Year_of_Founded > 2003  order by orchestra.Year_of_Founded desc"
    },
    {
        "input": "[struct _ sep0] What are the record companies that are used by both orchestras founded before 2003 and those founded after 2003 , sorted descending by the years in which they were founded . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select orchestra.Record_Company from conductor  where  orchestra.Year_of_Founded < 2003  and  orchestra.Year_of_Founded > 2003  order by orchestra.Year_of_Founded desc"
    },
    {
        "input": "[struct _ sep0] Show the years in which orchestras that have given more than one performance are founded and that do not have the type ' Live final ' . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type ( Live final ), date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select orchestra.Year_of_Founded from conductor  where  count ( performance.* )  > 1  and  performance.Type != \"Live final\"  group by performance.Orchestra_ID "
    },
    {
        "input": "[struct _ sep0] Show the years in which orchestras that have given more than one performance are founded or that do not have the type ' Live final ' . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type ( Live final ), date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select orchestra.Year_of_Founded from conductor  where  count ( performance.* )  > 1  or  performance.Type != \"Live final\"  group by performance.Orchestra_ID "
    },
    {
        "input": "[struct _ sep0] What are years of founding for orchestras that have had more than a single performance and that do not have the type ' Live final ' . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type ( Live final ), date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select orchestra.Year_of_Founded from conductor  where  count ( performance.* )  > 1  and  performance.Type != \"Live final\"  group by performance.Orchestra_ID "
    },
    {
        "input": "[struct _ sep0] What are years of founding for orchestras that have had more than a single performance or that do not have the type ' Live final ' . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type ( Live final ), date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select orchestra.Year_of_Founded from conductor  where  count ( performance.* )  > 1  or  performance.Type != \"Live final\"  group by performance.Orchestra_ID "
    },
    {
        "input": "[struct _ sep0] What are the names of conductors whose nationalities are not ' USA ' , in descending order of years of work . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality ( USA ), year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  conductor.Nationality != \"USA\"  order by conductor.Year_of_Work desc"
    },
    {
        "input": "[struct _ sep0] Return the names of conductors that do not have the nationality ' USA ' , in descending order of years of work . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality ( USA ), year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  conductor.Nationality != \"USA\"  order by conductor.Year_of_Work desc"
    },
    {
        "input": "[struct _ sep0] What are the names of conductors whose nationalities are not ' USA ' , sorted descending by the number of years they have worked ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality ( USA ), year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  conductor.Nationality != \"USA\"  order by conductor.Year_of_Work desc"
    },
    {
        "input": "[struct _ sep0] Return the names of conductors that do not have the nationality ' USA ' , sorted descending by the number of years they have worked ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality ( USA ), year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  conductor.Nationality != \"USA\"  order by conductor.Year_of_Work desc"
    },
    {
        "input": "[struct _ sep0] What are the names of conductors who have conducted orchestras founded after the year 2008 and who has worked the greatest number of years ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  orchestra.Year_of_Founded > 2008  order by conductor.Year_of_Work desc limit 1"
    },
    {
        "input": "[struct _ sep0] Count the number of conductors , that has conducted orchestras founded after 2008 . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select count ( conductor.* )  from conductor  where  orchestra.Year_of_Founded > 2008 "
    },
    {
        "input": "[struct _ sep0] Return the names of conductors that do not have the nationality ' USA ' and that has conducted orchestras founded after 2008 . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality ( USA ), year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  conductor.Nationality != \"USA\"  and  orchestra.Year_of_Founded > 2008 "
    },
    {
        "input": "[struct _ sep0] Count the number of different nationalities of conductors , that has conducted orchestras founded after 2008 . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select count (  distinct conductor.Nationality )  from conductor  where  orchestra.Year_of_Founded > 2008 "
    },
    {
        "input": "[struct _ sep0] Show the names of conductors that have conducted more than one orchestras and that has conducted orchestras founded after 2008 . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  count ( orchestra.* )  > 1  and  orchestra.Year_of_Founded > 2008  group by orchestra.Conductor_ID "
    },
    {
        "input": "[struct _ sep0] Count the number of conductors , who have conducted orchestras founded after the year 2008 ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select count ( conductor.* )  from conductor  where  orchestra.Year_of_Founded > 2008 "
    },
    {
        "input": "[struct _ sep0] Count the number of different nationalities of conductors , who have conducted orchestras founded after the year 2008 ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select count (  distinct conductor.Nationality )  from conductor  where  orchestra.Year_of_Founded > 2008 "
    },
    {
        "input": "[struct _ sep0] What are the names of conductors who have conducted at more than one orchestra and who have conducted orchestras founded after the year 2008 ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select conductor.Name from conductor  where  count ( orchestra.* )  > 1  and  orchestra.Year_of_Founded > 2008  group by orchestra.Conductor_ID "
    },
    {
        "input": "[struct _ sep0] Please show the different record companies and the corresponding number of orchestras , that have no performance . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select orchestra.Record_Company , count ( orchestra.* )  from conductor  where  @.@ not in performance.* "
    },
    {
        "input": "[struct _ sep0] Please show the different record companies and the corresponding number of orchestras , that do not have any performances ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select orchestra.Record_Company , count ( orchestra.* )  from conductor  where  @.@ not in performance.* "
    },
    {
        "input": "[struct _ sep0] Please show the different record companies and the corresponding number of orchestras that founded before 2003 and ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select orchestra.Record_Company , count ( orchestra.* )  from conductor  where  orchestra.Year_of_Founded < 2003 "
    },
    {
        "input": "[struct _ sep0] List the record company shared by the most number of orchestras and founded before 2003 and ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select orchestra.Record_Company from conductor  where  orchestra.Year_of_Founded < 2003  group by orchestra.Record_Company  order by count ( orchestra.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the record company used by the greatest number of orchestras and founded before 2003 and ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select orchestra.Record_Company from conductor  where  orchestra.Year_of_Founded < 2003  group by orchestra.Record_Company  order by count ( orchestra.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Please show the different record companies and the corresponding number of orchestras that founded before 2003 and ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select orchestra.Record_Company , count ( orchestra.* )  from conductor  where  orchestra.Year_of_Founded < 2003 "
    },
    {
        "input": "[struct _ sep0] List the record company shared by the most number of orchestras and founded before 2003 and ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select orchestra.Record_Company from conductor  where  orchestra.Year_of_Founded < 2003  group by orchestra.Record_Company  order by count ( orchestra.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the record company used by the greatest number of orchestras and founded before 2003 and ? [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select orchestra.Record_Company from conductor  where  orchestra.Year_of_Founded < 2003  group by orchestra.Record_Company  order by count ( orchestra.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Please show the different record companies and the corresponding number of orchestras , whose record format is ' CD ' or ' DVD ' . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format ( DVD, CD ) | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select orchestra.Record_Company , count ( orchestra.* )  from conductor  where  orchestra.Major_Record_Format = \"CD\"  or  orchestra.Major_Record_Format = \"DVD\" "
    },
    {
        "input": "[struct _ sep0] Please show the different record companies and the corresponding number of orchestras , that have CD or DVD as their record format . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format ( DVD, CD ) | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select orchestra.Record_Company , count ( orchestra.* )  from conductor  where  orchestra.Major_Record_Format = \"CD\"  or  orchestra.Major_Record_Format = \"DVD\" "
    },
    {
        "input": "[struct _ sep0] Show the years in which orchestras that have given more than one performance are founded and that have CD or DVD as their record format . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format ( DVD, CD ) | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select orchestra.Year_of_Founded from conductor  where  count ( performance.* )  > 1  and  orchestra.Major_Record_Format = \"CD\"  or  orchestra.Major_Record_Format = \"DVD\"  group by performance.Orchestra_ID "
    },
    {
        "input": "[struct _ sep0] What are years of founding for orchestras that have had more than a single performance and that have CD or DVD as their record format . [/struct _ sep0]| orchestra | conductor : conductor _ id, name, age, nationality, year _ of _ work | orchestra : orchestra _ id, orchestra, conductor _ id, record _ company, year _ of _ founded, major _ record _ format ( DVD, CD ) | performance : performance _ id, orchestra _ id, type, date, official _ ratings _ (millions), weekly _ rank, share | show : show _ id, performance _ id, if _ first _ show, result, attendance",
        "gold_natsql": "select orchestra.Year_of_Founded from conductor  where  count ( performance.* )  > 1  and  orchestra.Major_Record_Format = \"CD\"  or  orchestra.Major_Record_Format = \"DVD\"  group by performance.Orchestra_ID "
    },
    {
        "input": "[struct _ sep0] Count the number of high schoolers that named Kyle . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select count ( highschooler.* )  from highschooler  where  highschooler.name = \"Kyle\" "
    },
    {
        "input": "[struct _ sep0] Show the names and grades of each high schooler that named Kyle . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name , highschooler.grade from highschooler  where  highschooler.name = \"Kyle\" "
    },
    {
        "input": "[struct _ sep0] What are the names and grades for each high schooler that named Kyle . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name , highschooler.grade from highschooler  where  highschooler.name = \"Kyle\" "
    },
    {
        "input": "[struct _ sep0] Show all the grades of the high schoolers that named Kyle . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  highschooler.name = \"Kyle\" "
    },
    {
        "input": "[struct _ sep0] What is the grade of each high schooler that named Kyle . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  highschooler.name = \"Kyle\" "
    },
    {
        "input": "[struct _ sep0] Show the names of all high schoolers in grade 10 and named Kyle . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  highschooler.grade = 10  and  highschooler.name = \"Kyle\" "
    },
    {
        "input": "[struct _ sep0] Show the names of all high schoolers in grade 10 or named Kyle . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  highschooler.grade = 10  or  highschooler.name = \"Kyle\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all high schoolers in grade 10 and named Kyle . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  highschooler.grade = 10  and  highschooler.name = \"Kyle\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all high schoolers in grade 10 or named Kyle . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  highschooler.grade = 10  or  highschooler.name = \"Kyle\" "
    },
    {
        "input": "[struct _ sep0] Which grade has the most high schoolers and named Kyle . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  highschooler.name = \"Kyle\"  group by highschooler.grade  order by count ( highschooler.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Which grades have 4 or more high schoolers and named Kyle . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  count ( highschooler.* )  >= 4  and  highschooler.name = \"Kyle\"  group by highschooler.grade "
    },
    {
        "input": "[struct _ sep0] Which grades have 4 or more high schoolers or named Kyle . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  count ( highschooler.* )  >= 4  or  highschooler.name = \"Kyle\"  group by highschooler.grade "
    },
    {
        "input": "[struct _ sep0] Count the number of high schoolers , in grade 10 . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select count ( highschooler.* )  from highschooler  where  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Show the names and grades of each high schooler , in grade 10 . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name , highschooler.grade from highschooler  where  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] What are the names and grades for each high schooler , in grade 10 . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name , highschooler.grade from highschooler  where  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Show all the grades of the high schoolers , in grade 10 . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] What is the grade of each high schooler , in grade 10 . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Return the grade for the high schooler named Kyle and in grade 10 . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  highschooler.name = \"Kyle\"  and  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Return the grade for the high schooler named Kyle or in grade 10 . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  highschooler.name = \"Kyle\"  or  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Show the ID of the high schooler named Kyle and in grade 10 . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.ID from highschooler  where  highschooler.name = \"Kyle\"  and  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Show the ID of the high schooler named Kyle or in grade 10 . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.ID from highschooler  where  highschooler.name = \"Kyle\"  or  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Return the name of the high school student with the most friends and in grade 10 . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  highschooler.grade = 10  group by friend.student_id  order by count ( friend.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the name of the student with the most likes and in grade 10 . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  highschooler.grade = 10  group by likes.student_id  order by count ( likes.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Count the number of high schoolers , in grade 10 ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select count ( highschooler.* )  from highschooler  where  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Show the names and grades of each high schooler , in grade 10 ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name , highschooler.grade from highschooler  where  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] What are the names and grades for each high schooler , in grade 10 ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name , highschooler.grade from highschooler  where  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Show all the grades of the high schoolers , in grade 10 ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] What is the grade of each high schooler , in grade 10 ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Return the grade for the high schooler named Kyle and in grade 10 ? [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  highschooler.name = \"Kyle\"  and  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Return the grade for the high schooler named Kyle or in grade 10 ? [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  highschooler.name = \"Kyle\"  or  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Show the ID of the high schooler named Kyle and in grade 10 ? [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.ID from highschooler  where  highschooler.name = \"Kyle\"  and  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Show the ID of the high schooler named Kyle or in grade 10 ? [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.ID from highschooler  where  highschooler.name = \"Kyle\"  or  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Return the name of the high school student with the most friends and in grade 10 ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  highschooler.grade = 10  group by friend.student_id  order by count ( friend.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Give the name of the student with the most likes and in grade 10 ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  highschooler.grade = 10  group by likes.student_id  order by count ( likes.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Count the number of high schoolers that named Kyle . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select count ( highschooler.* )  from highschooler  where  highschooler.name = \"Kyle\" "
    },
    {
        "input": "[struct _ sep0] Show the names and grades of each high schooler that named Kyle . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name , highschooler.grade from highschooler  where  highschooler.name = \"Kyle\" "
    },
    {
        "input": "[struct _ sep0] What are the names and grades for each high schooler that named Kyle . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name , highschooler.grade from highschooler  where  highschooler.name = \"Kyle\" "
    },
    {
        "input": "[struct _ sep0] Show all the grades of the high schoolers that named Kyle . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  highschooler.name = \"Kyle\" "
    },
    {
        "input": "[struct _ sep0] What is the grade of each high schooler that named Kyle . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  highschooler.name = \"Kyle\" "
    },
    {
        "input": "[struct _ sep0] Show the names of all high schoolers in grade 10 and named Kyle . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  highschooler.grade = 10  and  highschooler.name = \"Kyle\" "
    },
    {
        "input": "[struct _ sep0] Show the names of all high schoolers in grade 10 or named Kyle . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  highschooler.grade = 10  or  highschooler.name = \"Kyle\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all high schoolers in grade 10 and named Kyle . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  highschooler.grade = 10  and  highschooler.name = \"Kyle\" "
    },
    {
        "input": "[struct _ sep0] What are the names of all high schoolers in grade 10 or named Kyle . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  highschooler.grade = 10  or  highschooler.name = \"Kyle\" "
    },
    {
        "input": "[struct _ sep0] Which grade has the most high schoolers and named Kyle . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  highschooler.name = \"Kyle\"  group by highschooler.grade  order by count ( highschooler.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Which grades have 4 or more high schoolers and named Kyle . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  count ( highschooler.* )  >= 4  and  highschooler.name = \"Kyle\"  group by highschooler.grade "
    },
    {
        "input": "[struct _ sep0] Which grades have 4 or more high schoolers or named Kyle . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  count ( highschooler.* )  >= 4  or  highschooler.name = \"Kyle\"  group by highschooler.grade "
    },
    {
        "input": "[struct _ sep0] Count the number of high schoolers that are there in grade 9 or 10 ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select count ( highschooler.* )  from highschooler  where  highschooler.grade = 9  or  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Show the names and grades of each high schooler that are there in grade 9 or 10 ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name , highschooler.grade from highschooler  where  highschooler.grade = 9  or  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] What are the names and grades for each high schooler that are there in grade 9 or 10 ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name , highschooler.grade from highschooler  where  highschooler.grade = 9  or  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Show all the grades of the high schoolers that are there in grade 9 or 10 ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  highschooler.grade = 9  or  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] What is the grade of each high schooler that are there in grade 9 or 10 ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  highschooler.grade = 9  or  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Return the grade for the high schooler named Kyle and are there in grade 9 or 10 ? [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  highschooler.name = \"Kyle\"  and  highschooler.grade = 9  or  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Show the ID of the high schooler named Kyle and are there in grade 9 or 10 ? [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.ID from highschooler  where  highschooler.name = \"Kyle\"  and  highschooler.grade = 9  or  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Which grades have 4 or more high schoolers and are there in grade 9 or 10 ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  count ( highschooler.* )  >= 4  and  highschooler.grade = 9  or  highschooler.grade = 10  group by highschooler.grade "
    },
    {
        "input": "[struct _ sep0] Count the number of high schoolers , in grades 9 or 10 . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select count ( highschooler.* )  from highschooler  where  highschooler.grade = 9  or  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Show the names and grades of each high schooler , in grades 9 or 10 . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name , highschooler.grade from highschooler  where  highschooler.grade = 9  or  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] What are the names and grades for each high schooler , in grades 9 or 10 . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name , highschooler.grade from highschooler  where  highschooler.grade = 9  or  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Show all the grades of the high schoolers , in grades 9 or 10 . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  highschooler.grade = 9  or  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] What is the grade of each high schooler , in grades 9 or 10 . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  highschooler.grade = 9  or  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Return the grade for the high schooler named Kyle and in grades 9 or 10 . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  highschooler.name = \"Kyle\"  and  highschooler.grade = 9  or  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Show the ID of the high schooler named Kyle and in grades 9 or 10 . [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.ID from highschooler  where  highschooler.name = \"Kyle\"  and  highschooler.grade = 9  or  highschooler.grade = 10 "
    },
    {
        "input": "[struct _ sep0] Show the number of high schoolers for each grade , that have at least 4 students . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select count ( highschooler.* )  , highschooler.grade from highschooler  where  count ( highschooler.* )  >= 4  group by highschooler.grade "
    },
    {
        "input": "[struct _ sep0] How many high schoolers are in each grade , that have at least 4 students . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select count ( highschooler.* )  , highschooler.grade from highschooler  where  count ( highschooler.* )  >= 4  group by highschooler.grade "
    },
    {
        "input": "[struct _ sep0] Return the grade for the high schooler named Kyle and have 4 or more high schoolers ? [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  highschooler.name = \"Kyle\"  and  count ( highschooler.* )  >= 4  group by highschooler.grade "
    },
    {
        "input": "[struct _ sep0] Return the grade for the high schooler named Kyle or have 4 or more high schoolers ? [/struct _ sep0]| network _ 1 | highschooler : id, name ( Kyle ), grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  highschooler.name = \"Kyle\"  or  count ( highschooler.* )  >= 4  group by highschooler.grade "
    },
    {
        "input": "[struct _ sep0] Show the number of high schoolers for each grade that have 4 or more high schoolers ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select count ( highschooler.* )  , highschooler.grade from highschooler  where  count ( highschooler.* )  >= 4  group by highschooler.grade "
    },
    {
        "input": "[struct _ sep0] How many high schoolers are in each grade that have 4 or more high schoolers ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select count ( highschooler.* )  , highschooler.grade from highschooler  where  count ( highschooler.* )  >= 4  group by highschooler.grade "
    },
    {
        "input": "[struct _ sep0] Show the names of students who have at least 2 likes and who do not have any friends . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  count ( likes.* )  >= 2  except_  @.@ join friend.*  group by likes.student_id "
    },
    {
        "input": "[struct _ sep0] Show the names of students who have at least 2 likes or who do not have any friends . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  count ( likes.* )  >= 2  except_  @.@ join friend.*  group by likes.student_id "
    },
    {
        "input": "[struct _ sep0] What are the names of students who have 2 or more likes and who do not have any friends . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  count ( likes.* )  >= 2  except_  @.@ join friend.*  group by likes.student_id "
    },
    {
        "input": "[struct _ sep0] What are the names of students who have 2 or more likes or who do not have any friends . [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  count ( likes.* )  >= 2  except_  @.@ join friend.*  group by likes.student_id "
    },
    {
        "input": "[struct _ sep0] Show the names of students who have at least 2 likes and who do not have friends ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  count ( likes.* )  >= 2  except_  @.@ join friend.*  group by likes.student_id "
    },
    {
        "input": "[struct _ sep0] Show the names of students who have at least 2 likes or who do not have friends ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  count ( likes.* )  >= 2  except_  @.@ join friend.*  group by likes.student_id "
    },
    {
        "input": "[struct _ sep0] What are the names of students who have 2 or more likes and who do not have friends ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  count ( likes.* )  >= 2  except_  @.@ join friend.*  group by likes.student_id "
    },
    {
        "input": "[struct _ sep0] What are the names of students who have 2 or more likes or who do not have friends ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  count ( likes.* )  >= 2  except_  @.@ join friend.*  group by likes.student_id "
    },
    {
        "input": "[struct _ sep0] What is the name of the high schooler who has the greatest number of friends and who have a grade higher than 5 and ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  highschooler.grade > 5  group by friend.student_id  order by count ( friend.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Show the names of high schoolers who have at least 3 friends and who have a grade higher than 5 and ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  count ( friend.* )  >= 3  and  highschooler.grade > 5  group by friend.student_id "
    },
    {
        "input": "[struct _ sep0] Show the names of high schoolers who have at least 3 friends or who have a grade higher than 5 and ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  count ( friend.* )  >= 3  or  highschooler.grade > 5  group by friend.student_id "
    },
    {
        "input": "[struct _ sep0] What are the names of high schoolers who have 3 or more friends and who have a grade higher than 5 and ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  count ( friend.* )  >= 3  and  highschooler.grade > 5  group by friend.student_id "
    },
    {
        "input": "[struct _ sep0] What are the names of high schoolers who have 3 or more friends or who have a grade higher than 5 and ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  count ( friend.* )  >= 3  or  highschooler.grade > 5  group by friend.student_id "
    },
    {
        "input": "[struct _ sep0] What is the name of the high schooler who has the greatest number of likes and who have a grade higher than 5 and ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  highschooler.grade > 5  group by likes.student_id  order by count ( likes.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Show the names of students who have at least 2 likes and who have a grade higher than 5 and ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  count ( likes.* )  >= 2  and  highschooler.grade > 5  group by likes.student_id "
    },
    {
        "input": "[struct _ sep0] Show the names of students who have at least 2 likes or who have a grade higher than 5 and ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  count ( likes.* )  >= 2  or  highschooler.grade > 5  group by likes.student_id "
    },
    {
        "input": "[struct _ sep0] What are the names of students who have 2 or more likes and who have a grade higher than 5 and ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  count ( likes.* )  >= 2  and  highschooler.grade > 5  group by likes.student_id "
    },
    {
        "input": "[struct _ sep0] What are the names of students who have 2 or more likes or who have a grade higher than 5 and ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  count ( likes.* )  >= 2  or  highschooler.grade > 5  group by likes.student_id "
    },
    {
        "input": "[struct _ sep0] Count the number of high schoolers , who have a grade of over 5 and ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select count ( highschooler.* )  from highschooler  where  highschooler.grade > 5 "
    },
    {
        "input": "[struct _ sep0] Show the names and grades of each high schooler , who have a grade of over 5 and ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name , highschooler.grade from highschooler  where  highschooler.grade > 5 "
    },
    {
        "input": "[struct _ sep0] What are the names and grades for each high schooler , who have a grade of over 5 and ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name , highschooler.grade from highschooler  where  highschooler.grade > 5 "
    },
    {
        "input": "[struct _ sep0] Show all the grades of the high schoolers , who have a grade of over 5 and ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  highschooler.grade > 5 "
    },
    {
        "input": "[struct _ sep0] What is the grade of each high schooler , who have a grade of over 5 and ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.grade from highschooler  where  highschooler.grade > 5 "
    },
    {
        "input": "[struct _ sep0] What is the name of the high schooler who has the greatest number of friends and who have a grade of over 5 and ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  highschooler.grade > 5  group by friend.student_id  order by count ( friend.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Show the names of high schoolers who have at least 3 friends and who have a grade of over 5 and ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  count ( friend.* )  >= 3  and  highschooler.grade > 5  group by friend.student_id "
    },
    {
        "input": "[struct _ sep0] Show the names of high schoolers who have at least 3 friends or who have a grade of over 5 and ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  count ( friend.* )  >= 3  or  highschooler.grade > 5  group by friend.student_id "
    },
    {
        "input": "[struct _ sep0] What are the names of high schoolers who have 3 or more friends and who have a grade of over 5 and ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  count ( friend.* )  >= 3  and  highschooler.grade > 5  group by friend.student_id "
    },
    {
        "input": "[struct _ sep0] What are the names of high schoolers who have 3 or more friends or who have a grade of over 5 and ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  count ( friend.* )  >= 3  or  highschooler.grade > 5  group by friend.student_id "
    },
    {
        "input": "[struct _ sep0] What is the name of the high schooler who has the greatest number of likes and who have a grade of over 5 and ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  highschooler.grade > 5  group by likes.student_id  order by count ( likes.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Show the names of students who have at least 2 likes and who have a grade of over 5 and ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  count ( likes.* )  >= 2  and  highschooler.grade > 5  group by likes.student_id "
    },
    {
        "input": "[struct _ sep0] Show the names of students who have at least 2 likes or who have a grade of over 5 and ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  count ( likes.* )  >= 2  or  highschooler.grade > 5  group by likes.student_id "
    },
    {
        "input": "[struct _ sep0] What are the names of students who have 2 or more likes and who have a grade of over 5 and ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  count ( likes.* )  >= 2  and  highschooler.grade > 5  group by likes.student_id "
    },
    {
        "input": "[struct _ sep0] What are the names of students who have 2 or more likes or who have a grade of over 5 and ? [/struct _ sep0]| network _ 1 | highschooler : id, name, grade | friend : student _ id, friend _ id | likes : student _ id, liked _ id",
        "gold_natsql": "select highschooler.name from highschooler  where  count ( likes.* )  >= 2  or  highschooler.grade > 5  group by likes.student_id "
    },
    {
        "input": "[struct _ sep0] Find the role , street , city and state of the professionals living in a city that contains the substring ' West ' and have done treatment on more than 2 treatments ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.role_code , professionals.street , professionals.city , professionals.state from breeds  where  professionals.city like \"%West%\"  and  count ( treatments.* )  > 2 "
    },
    {
        "input": "[struct _ sep0] Find the role , street , city and state of the professionals living in a city that contains the substring ' West ' or have done treatment on more than 2 treatments ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.role_code , professionals.street , professionals.city , professionals.state from breeds  where  professionals.city like \"%West%\"  or  count ( treatments.* )  > 2 "
    },
    {
        "input": "[struct _ sep0] What are the id , role , and first name of the professionals who have performed two or more treatments and who live in the state of Indiana or ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state ( Indiana ), zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state ( Indiana ), zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.professional_id , professionals.role_code , professionals.first_name from breeds  where  count ( treatments.* )  >= 2  and  professionals.state = \"Indiana\"  group by professionals.professional_id "
    },
    {
        "input": "[struct _ sep0] What are the id , role , and first name of the professionals who have performed two or more treatments or who live in the state of Indiana or ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state ( Indiana ), zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state ( Indiana ), zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.professional_id , professionals.role_code , professionals.first_name from breeds  where  count ( treatments.* )  >= 2  or  professionals.state = \"Indiana\"  group by professionals.professional_id "
    },
    {
        "input": "[struct _ sep0] Find the id and cell phone of the professionals who operate two or more types of treatments and who live in the state of Indiana or ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state ( Indiana ), zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state ( Indiana ), zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.professional_id , professionals.cell_number from breeds  where  count ( treatments.* )  >= 2  and  professionals.state = \"Indiana\"  group by professionals.professional_id "
    },
    {
        "input": "[struct _ sep0] Find the id and cell phone of the professionals who operate two or more types of treatments or who live in the state of Indiana or ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state ( Indiana ), zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state ( Indiana ), zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.professional_id , professionals.cell_number from breeds  where  count ( treatments.* )  >= 2  or  professionals.state = \"Indiana\"  group by professionals.professional_id "
    },
    {
        "input": "[struct _ sep0] List the email , cell phone and home phone of all the professionals , who live in the state of Indiana or ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state ( Indiana ), zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state ( Indiana ), zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.email_address , professionals.cell_number , professionals.home_phone from breeds  where  professionals.state = \"Indiana\" "
    },
    {
        "input": "[struct _ sep0] What are the email , cell phone and home phone of each professional , who live in the state of Indiana or ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state ( Indiana ), zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state ( Indiana ), zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.email_address , professionals.cell_number , professionals.home_phone from breeds  where  professionals.state = \"Indiana\" "
    },
    {
        "input": "[struct _ sep0] Find the role , street , city and state of the professionals living in a city that contains the substring ' West ' and have performed more than two treatments . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.role_code , professionals.street , professionals.city , professionals.state from breeds  where  professionals.city like \"%West%\"  and  count ( treatments.* )  > 2 "
    },
    {
        "input": "[struct _ sep0] Find the role , street , city and state of the professionals living in a city that contains the substring ' West ' or have performed more than two treatments . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.role_code , professionals.street , professionals.city , professionals.state from breeds  where  professionals.city like \"%West%\"  or  count ( treatments.* )  > 2 "
    },
    {
        "input": "[struct _ sep0] Which dogs have not cost their owner more than 1000 for treatment ? List the arrival date and the departure date for all the dogs . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select dogs.date_arrived , dogs.date_departed from breeds  where  @.@ not in treatments.*  and  sum ( treatments.cost_of_treatment )  > 1000 "
    },
    {
        "input": "[struct _ sep0] Which dogs have not cost their owner more than 1000 for treatment ? Tell me the age of the oldest dog . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select max ( dogs.age )  from breeds  where  @.@ not in treatments.*  and  sum ( treatments.cost_of_treatment )  > 1000 "
    },
    {
        "input": "[struct _ sep0] Which dogs have not cost their owner more than 1000 for treatment ? Find the distinct breed type and size type combinations for dogs . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select  distinct dogs.breed_code , dogs.size_code from breeds  where  @.@ not in treatments.*  and  sum ( treatments.cost_of_treatment )  > 1000 "
    },
    {
        "input": "[struct _ sep0] What are the arriving date and the departing date of all the dogs , for which the owner has not spend more than 1000 for treatment ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select dogs.date_arrived , dogs.date_departed from breeds  where  @.@ not in treatments.*  and  sum ( treatments.cost_of_treatment )  > 1000 "
    },
    {
        "input": "[struct _ sep0] List the arrival date and the departure date for all the dogs , for which the owner has not spend more than 1000 for treatment ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select dogs.date_arrived , dogs.date_departed from breeds  where  @.@ not in treatments.*  and  sum ( treatments.cost_of_treatment )  > 1000 "
    },
    {
        "input": "[struct _ sep0] What is the average age of all the dogs , for which the owner has not spend more than 1000 for treatment ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select avg ( dogs.age )  from breeds  where  @.@ not in treatments.*  and  sum ( treatments.cost_of_treatment )  > 1000 "
    },
    {
        "input": "[struct _ sep0] Compute the average age of all the dogs , for which the owner has not spend more than 1000 for treatment ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select avg ( dogs.age )  from breeds  where  @.@ not in treatments.*  and  sum ( treatments.cost_of_treatment )  > 1000 "
    },
    {
        "input": "[struct _ sep0] What is the age of the oldest dog , for which the owner has not spend more than 1000 for treatment ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select max ( dogs.age )  from breeds  where  @.@ not in treatments.*  and  sum ( treatments.cost_of_treatment )  > 1000 "
    },
    {
        "input": "[struct _ sep0] Tell me the age of the oldest dog , for which the owner has not spend more than 1000 for treatment ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select max ( dogs.age )  from breeds  where  @.@ not in treatments.*  and  sum ( treatments.cost_of_treatment )  > 1000 "
    },
    {
        "input": "[struct _ sep0] Find the distinct breed type and size type combinations for dogs , for which the owner has not spend more than 1000 for treatment ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select  distinct dogs.breed_code , dogs.size_code from breeds  where  @.@ not in treatments.*  and  sum ( treatments.cost_of_treatment )  > 1000 "
    },
    {
        "input": "[struct _ sep0] Find the role , street , city and state of the professionals living in a city that contains the substring ' West ' and or owners but are not used as dog names ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.role_code , professionals.street , professionals.city , professionals.state from breeds  where  professionals.city like \"%West%\"  except_  @.@ join dogs.* "
    },
    {
        "input": "[struct _ sep0] Find the role , street , city and state of the professionals living in a city that contains the substring ' West ' or or owners but are not used as dog names ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.role_code , professionals.street , professionals.city , professionals.state from breeds  where  professionals.city like \"%West%\"  except_  @.@ join dogs.* "
    },
    {
        "input": "[struct _ sep0] List the email , cell phone and home phone of all the professionals , or owners but are not used as dog names ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.email_address , professionals.cell_number , professionals.home_phone from breeds  where  except_  @.@ is dogs.* "
    },
    {
        "input": "[struct _ sep0] What are the email , cell phone and home phone of each professional , or owners but are not used as dog names ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.email_address , professionals.cell_number , professionals.home_phone from breeds  where  except_  @.@ is dogs.* "
    },
    {
        "input": "[struct _ sep0] Which professional did not operate any treatment on dogs ? Find the role , street , city and state of the professionals living in a city that contains the substring ' West ' . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.role_code , professionals.street , professionals.city , professionals.state from breeds  where  except_  @.@ is treatments.*  and  professionals.city like \"%West%\" "
    },
    {
        "input": "[struct _ sep0] Which professional did not operate any treatment on dogs ? List the email , cell phone and home phone of all the professionals . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.email_address , professionals.cell_number , professionals.home_phone from breeds  where  except_  @.@ is treatments.* "
    },
    {
        "input": "[struct _ sep0] List the email , cell phone and home phone of all the professionals , who did not perform any treatment on dogs . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.email_address , professionals.cell_number , professionals.home_phone from breeds  where  except_  @.@ is treatments.* "
    },
    {
        "input": "[struct _ sep0] What are the email , cell phone and home phone of each professional , who did not perform any treatment on dogs . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.email_address , professionals.cell_number , professionals.home_phone from breeds  where  except_  @.@ is treatments.* "
    },
    {
        "input": "[struct _ sep0] What are the id , role , and first name of the professionals who have performed two or more treatments and who have done treatment with cost below average ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.professional_id , professionals.role_code , professionals.first_name from breeds  where  count ( treatments.* )  >= 2  and  @.@ < avg ( treatments.cost_of_treatment )   group by professionals.professional_id "
    },
    {
        "input": "[struct _ sep0] What are the id , role , and first name of the professionals who have performed two or more treatments or who have done treatment with cost below average ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.professional_id , professionals.role_code , professionals.first_name from breeds  where  count ( treatments.* )  >= 2  or  @.@ < avg ( treatments.cost_of_treatment )   group by professionals.professional_id "
    },
    {
        "input": "[struct _ sep0] Find the id and cell phone of the professionals who operate two or more types of treatments and who have done treatment with cost below average ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.professional_id , professionals.cell_number from breeds  where  count ( treatments.* )  >= 2  and  @.@ < avg ( treatments.cost_of_treatment )   group by professionals.professional_id "
    },
    {
        "input": "[struct _ sep0] Find the id and cell phone of the professionals who operate two or more types of treatments or who have done treatment with cost below average ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.professional_id , professionals.cell_number from breeds  where  count ( treatments.* )  >= 2  or  @.@ < avg ( treatments.cost_of_treatment )   group by professionals.professional_id "
    },
    {
        "input": "[struct _ sep0] List the email , cell phone and home phone of all the professionals , who have done treatment with cost below average ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.email_address , professionals.cell_number , professionals.home_phone from breeds  where  @.@ < avg ( treatments.cost_of_treatment )  "
    },
    {
        "input": "[struct _ sep0] What are the email , cell phone and home phone of each professional , who have done treatment with cost below average ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.email_address , professionals.cell_number , professionals.home_phone from breeds  where  @.@ < avg ( treatments.cost_of_treatment )  "
    },
    {
        "input": "[struct _ sep0] Which professionals have operated a treatment that costs less than the average ? Find the id and cell phone of the professionals who operate two or more types of treatments . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.professional_id , professionals.cell_number from breeds  where  @ join treatments.*  and  @.@ < avg ( treatments.cost_of_treatment )   and  count ( treatments.* )  >= 2 "
    },
    {
        "input": "[struct _ sep0] Which professionals have operated a treatment that costs less than the average ? Find the role , street , city and state of the professionals living in a city that contains the substring ' West ' . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.role_code , professionals.street , professionals.city , professionals.state from breeds  where  @ join treatments.*  and  @.@ < avg ( treatments.cost_of_treatment )   and  professionals.city like \"%West%\" "
    },
    {
        "input": "[struct _ sep0] Which professionals have operated a treatment that costs less than the average ? List the email , cell phone and home phone of all the professionals . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.email_address , professionals.cell_number , professionals.home_phone from breeds  where  @ join treatments.*  and  @.@ < avg ( treatments.cost_of_treatment )  "
    },
    {
        "input": "[struct _ sep0] Which dogs are owned by someone who lives in Virginia ? List each owner 's first name , last name , and the size of his for her dog . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state ( Virginia ), zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select owners.first_name , owners.last_name , dogs.size_code from breeds  where  owners.state = \"Virginia\" "
    },
    {
        "input": "[struct _ sep0] Which dogs are owned by someone who lives in Virginia ? List pairs of the owner 's first name and the dogs 's name . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state ( Virginia ), zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select owners.first_name , dogs.name from breeds  where  owners.state = \"Virginia\" "
    },
    {
        "input": "[struct _ sep0] What are the id , role , and first name of the professionals who have performed two or more treatments and who live in the state of Hawaii or ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state ( Hawaii ), zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.professional_id , professionals.role_code , professionals.first_name from breeds  where  count ( treatments.* )  >= 2  and  professionals.state = \"Hawaii\"  group by professionals.professional_id "
    },
    {
        "input": "[struct _ sep0] What are the id , role , and first name of the professionals who have performed two or more treatments or who live in the state of Hawaii or ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state ( Hawaii ), zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.professional_id , professionals.role_code , professionals.first_name from breeds  where  count ( treatments.* )  >= 2  or  professionals.state = \"Hawaii\"  group by professionals.professional_id "
    },
    {
        "input": "[struct _ sep0] Find the id and cell phone of the professionals who operate two or more types of treatments and who live in the state of Hawaii or ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state ( Hawaii ), zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.professional_id , professionals.cell_number from breeds  where  count ( treatments.* )  >= 2  and  professionals.state = \"Hawaii\"  group by professionals.professional_id "
    },
    {
        "input": "[struct _ sep0] Find the id and cell phone of the professionals who operate two or more types of treatments or who live in the state of Hawaii or ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state ( Hawaii ), zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.professional_id , professionals.cell_number from breeds  where  count ( treatments.* )  >= 2  or  professionals.state = \"Hawaii\"  group by professionals.professional_id "
    },
    {
        "input": "[struct _ sep0] List the email , cell phone and home phone of all the professionals , who live in the state of Hawaii or ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state ( Hawaii ), zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.email_address , professionals.cell_number , professionals.home_phone from breeds  where  professionals.state = \"Hawaii\" "
    },
    {
        "input": "[struct _ sep0] What are the email , cell phone and home phone of each professional , who live in the state of Hawaii or ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state ( Hawaii ), zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.email_address , professionals.cell_number , professionals.home_phone from breeds  where  professionals.state = \"Hawaii\" "
    },
    {
        "input": "[struct _ sep0] What are the id , role , and first name of the professionals who have performed two or more treatments and who live in the state of Hawaii or the state of Wisconsin . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state ( Wisconsin ), zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state ( Wisconsin, Hawaii ), zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.professional_id , professionals.role_code , professionals.first_name from breeds  where  count ( treatments.* )  >= 2  and  professionals.state = \"Hawaii\"  or  professionals.state = \"Wisconsin\"  group by professionals.professional_id "
    },
    {
        "input": "[struct _ sep0] Find the id and cell phone of the professionals who operate two or more types of treatments and who live in the state of Hawaii or the state of Wisconsin . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state ( Wisconsin ), zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state ( Wisconsin, Hawaii ), zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.professional_id , professionals.cell_number from breeds  where  count ( treatments.* )  >= 2  and  professionals.state = \"Hawaii\"  or  professionals.state = \"Wisconsin\"  group by professionals.professional_id "
    },
    {
        "input": "[struct _ sep0] List the email , cell phone and home phone of all the professionals , who live in the state of Hawaii or the state of Wisconsin . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state ( Wisconsin ), zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state ( Wisconsin, Hawaii ), zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.email_address , professionals.cell_number , professionals.home_phone from breeds  where  professionals.state = \"Hawaii\"  or  professionals.state = \"Wisconsin\" "
    },
    {
        "input": "[struct _ sep0] What are the email , cell phone and home phone of each professional , who live in the state of Hawaii or the state of Wisconsin . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state ( Wisconsin ), zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state ( Wisconsin, Hawaii ), zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.email_address , professionals.cell_number , professionals.home_phone from breeds  where  professionals.state = \"Hawaii\"  or  professionals.state = \"Wisconsin\" "
    },
    {
        "input": "[struct _ sep0] Find the role , street , city and state of the professionals living in a city that contains the substring ' West ' and living in either the state of Hawaii or ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state ( Hawaii ), zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.role_code , professionals.street , professionals.city , professionals.state from breeds  where  professionals.city like \"%West%\"  and  professionals.state = \"Hawaii\" "
    },
    {
        "input": "[struct _ sep0] Find the role , street , city and state of the professionals living in a city that contains the substring ' West ' or living in either the state of Hawaii or ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state ( Hawaii ), zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.role_code , professionals.street , professionals.city , professionals.state from breeds  where  professionals.city like \"%West%\"  or  professionals.state = \"Hawaii\" "
    },
    {
        "input": "[struct _ sep0] List the email , cell phone and home phone of all the professionals that living in either the state of Hawaii or ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state ( Hawaii ), zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.email_address , professionals.cell_number , professionals.home_phone from breeds  where  professionals.state = \"Hawaii\" "
    },
    {
        "input": "[struct _ sep0] What are the email , cell phone and home phone of each professional that living in either the state of Hawaii or ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state ( Hawaii ), zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.email_address , professionals.cell_number , professionals.home_phone from breeds  where  professionals.state = \"Hawaii\" "
    },
    {
        "input": "[struct _ sep0] Find the role , street , city and state of the professionals living in a city that contains the substring ' West ' and living in either the state of Hawaii or the state of Wisconsin ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state ( Wisconsin ), zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state ( Wisconsin, Hawaii ), zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.role_code , professionals.street , professionals.city , professionals.state from breeds  where  professionals.city like \"%West%\"  and  professionals.state = \"Hawaii\"  or  professionals.state = \"Wisconsin\" "
    },
    {
        "input": "[struct _ sep0] List the email , cell phone and home phone of all the professionals that living in either the state of Hawaii or the state of Wisconsin ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state ( Wisconsin ), zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state ( Wisconsin, Hawaii ), zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.email_address , professionals.cell_number , professionals.home_phone from breeds  where  professionals.state = \"Hawaii\"  or  professionals.state = \"Wisconsin\" "
    },
    {
        "input": "[struct _ sep0] What are the email , cell phone and home phone of each professional that living in either the state of Hawaii or the state of Wisconsin ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state ( Wisconsin ), zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state ( Wisconsin, Hawaii ), zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.email_address , professionals.cell_number , professionals.home_phone from breeds  where  professionals.state = \"Hawaii\"  or  professionals.state = \"Wisconsin\" "
    },
    {
        "input": "[struct _ sep0] Which professionals live in a city containing the substring ' West ' ? Find the id and cell phone of the professionals who operate two or more types of treatments . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.professional_id , professionals.cell_number from breeds  where  professionals.city like \"%West%\"  and  count ( treatments.* )  >= 2  group by professionals.professional_id "
    },
    {
        "input": "[struct _ sep0] Which professionals live in a city containing the substring ' West ' ? List the email , cell phone and home phone of all the professionals . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.email_address , professionals.cell_number , professionals.home_phone from breeds  where  professionals.city like \"%West%\" "
    },
    {
        "input": "[struct _ sep0] List the email , cell phone and home phone of all the professionals that living in a city that contains the substring ' West ' . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.email_address , professionals.cell_number , professionals.home_phone from breeds  where  professionals.city like \"%West%\" "
    },
    {
        "input": "[struct _ sep0] What are the email , cell phone and home phone of each professional that living in a city that contains the substring ' West ' . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.email_address , professionals.cell_number , professionals.home_phone from breeds  where  professionals.city like \"%West%\" "
    },
    {
        "input": "[struct _ sep0] Which owners live in the state whose name contains the substring ' North ' ? Return the owner id , first name and last name of the owner who has the most dogs . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select owners.owner_id , owners.first_name , owners.last_name from breeds  where  owners.state like \"%North%\"  group by dogs.owner_id  order by count ( dogs.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Which owners live in the state whose name contains the substring ' North ' ? Tell me the owner id and last name of the owner who spent the most on treatments of his or her dogs . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select owners.owner_id , owners.last_name from breeds  where  owners.state like \"%North%\"  group by owners.owner_id  order by count ( treatments.* )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] Which owners live in the state whose name contains the substring ' North ' ? Find the owner id and zip code of the owner who spent the most money in total for his or her dogs . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select owners.owner_id , owners.zip_code from breeds  where  owners.state like \"%North%\"  group by owners.owner_id  order by sum ( treatments.cost_of_treatment )  desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the arriving date and the departing date of all the dogs that have an age below the average ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select dogs.date_arrived , dogs.date_departed from breeds  where  @.@ < avg ( dogs.age )  "
    },
    {
        "input": "[struct _ sep0] List the arrival date and the departure date for all the dogs that have an age below the average ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select dogs.date_arrived , dogs.date_departed from breeds  where  @.@ < avg ( dogs.age )  "
    },
    {
        "input": "[struct _ sep0] What is the average age of all the dogs that have an age below the average ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select avg ( dogs.age )  from breeds  where  @.@ < avg ( dogs.age )  "
    },
    {
        "input": "[struct _ sep0] Compute the average age of all the dogs that have an age below the average ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select avg ( dogs.age )  from breeds  where  @.@ < avg ( dogs.age )  "
    },
    {
        "input": "[struct _ sep0] What is the age of the oldest dog that have an age below the average ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select max ( dogs.age )  from breeds  where  @.@ < avg ( dogs.age )  "
    },
    {
        "input": "[struct _ sep0] Tell me the age of the oldest dog that have an age below the average ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select max ( dogs.age )  from breeds  where  @.@ < avg ( dogs.age )  "
    },
    {
        "input": "[struct _ sep0] Find the distinct breed type and size type combinations for dogs that have an age below the average ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select  distinct dogs.breed_code , dogs.size_code from breeds  where  @.@ < avg ( dogs.age )  "
    },
    {
        "input": "[struct _ sep0] What are the arriving date and the departing date of all the dogs that have not gone through any treatment ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select dogs.date_arrived , dogs.date_departed from breeds  where  @.@ not in treatments.* "
    },
    {
        "input": "[struct _ sep0] List the arrival date and the departure date for all the dogs that have not gone through any treatment ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select dogs.date_arrived , dogs.date_departed from breeds  where  @.@ not in treatments.* "
    },
    {
        "input": "[struct _ sep0] What is the average age of all the dogs that have not gone through any treatment ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select avg ( dogs.age )  from breeds  where  @.@ not in treatments.* "
    },
    {
        "input": "[struct _ sep0] Compute the average age of all the dogs that have not gone through any treatment ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select avg ( dogs.age )  from breeds  where  @.@ not in treatments.* "
    },
    {
        "input": "[struct _ sep0] What is the age of the oldest dog that have not gone through any treatment ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select max ( dogs.age )  from breeds  where  @.@ not in treatments.* "
    },
    {
        "input": "[struct _ sep0] Tell me the age of the oldest dog that have not gone through any treatment ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select max ( dogs.age )  from breeds  where  @.@ not in treatments.* "
    },
    {
        "input": "[struct _ sep0] Find the distinct breed type and size type combinations for dogs that have not gone through any treatment ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select  distinct dogs.breed_code , dogs.size_code from breeds  where  @.@ not in treatments.* "
    },
    {
        "input": "[struct _ sep0] What are the arriving date and the departing date of all the dogs , that have not received any treatment . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select dogs.date_arrived , dogs.date_departed from breeds  where  @.@ not in treatments.* "
    },
    {
        "input": "[struct _ sep0] List the arrival date and the departure date for all the dogs , that have not received any treatment . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select dogs.date_arrived , dogs.date_departed from breeds  where  @.@ not in treatments.* "
    },
    {
        "input": "[struct _ sep0] What is the average age of all the dogs , that have not received any treatment . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select avg ( dogs.age )  from breeds  where  @.@ not in treatments.* "
    },
    {
        "input": "[struct _ sep0] Compute the average age of all the dogs , that have not received any treatment . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select avg ( dogs.age )  from breeds  where  @.@ not in treatments.* "
    },
    {
        "input": "[struct _ sep0] What is the age of the oldest dog , that have not received any treatment . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select max ( dogs.age )  from breeds  where  @.@ not in treatments.* "
    },
    {
        "input": "[struct _ sep0] Tell me the age of the oldest dog , that have not received any treatment . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select max ( dogs.age )  from breeds  where  @.@ not in treatments.* "
    },
    {
        "input": "[struct _ sep0] Find the distinct breed type and size type combinations for dogs , that have not received any treatment . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select  distinct dogs.breed_code , dogs.size_code from breeds  where  @.@ not in treatments.* "
    },
    {
        "input": "[struct _ sep0] Return the first name , last name and email of the owners living in a state whose name contains the substring ' North ' and temporarily do not have any dogs ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select owners.first_name , owners.last_name , owners.email_address from breeds  where  owners.state like \"%North%\"  and  @.@ not in dogs.* "
    },
    {
        "input": "[struct _ sep0] Return the first name , last name and email of the owners living in a state whose name contains the substring ' North ' or temporarily do not have any dogs ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select owners.first_name , owners.last_name , owners.email_address from breeds  where  owners.state like \"%North%\"  or  @.@ not in dogs.* "
    },
    {
        "input": "[struct _ sep0] Find the role , street , city and state of the professionals living in a city that contains the substring ' West ' and did not operate any treatment on dogs ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.role_code , professionals.street , professionals.city , professionals.state from breeds  where  professionals.city like \"%West%\"  and  @.@ not in treatments.* "
    },
    {
        "input": "[struct _ sep0] Find the role , street , city and state of the professionals living in a city that contains the substring ' West ' or did not operate any treatment on dogs ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.role_code , professionals.street , professionals.city , professionals.state from breeds  where  professionals.city like \"%West%\"  or  @.@ not in treatments.* "
    },
    {
        "input": "[struct _ sep0] List the email , cell phone and home phone of all the professionals that did not operate any treatment on dogs ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.email_address , professionals.cell_number , professionals.home_phone from breeds  where  @.@ not in treatments.* "
    },
    {
        "input": "[struct _ sep0] What are the email , cell phone and home phone of each professional that did not operate any treatment on dogs ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.email_address , professionals.cell_number , professionals.home_phone from breeds  where  @.@ not in treatments.* "
    },
    {
        "input": "[struct _ sep0] List the email , cell phone and home phone of all the professionals , who have not treated any dogs . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.email_address , professionals.cell_number , professionals.home_phone from breeds  where  @.@ not in treatments.* "
    },
    {
        "input": "[struct _ sep0] What are the email , cell phone and home phone of each professional , who have not treated any dogs . [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select professionals.email_address , professionals.cell_number , professionals.home_phone from breeds  where  @.@ not in treatments.* "
    },
    {
        "input": "[struct _ sep0] What are the arriving date and the departing date of all the dogs , who have been abandoned ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select dogs.date_arrived , dogs.date_departed from breeds  where  dogs.abandoned_yn = 1 "
    },
    {
        "input": "[struct _ sep0] List the arrival date and the departure date for all the dogs , who have been abandoned ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select dogs.date_arrived , dogs.date_departed from breeds  where  dogs.abandoned_yn = 1 "
    },
    {
        "input": "[struct _ sep0] What is the average age of all the dogs , who have been abandoned ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select avg ( dogs.age )  from breeds  where  dogs.abandoned_yn = 1 "
    },
    {
        "input": "[struct _ sep0] Compute the average age of all the dogs , who have been abandoned ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select avg ( dogs.age )  from breeds  where  dogs.abandoned_yn = 1 "
    },
    {
        "input": "[struct _ sep0] What is the age of the oldest dog , who have been abandoned ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select max ( dogs.age )  from breeds  where  dogs.abandoned_yn = 1 "
    },
    {
        "input": "[struct _ sep0] Tell me the age of the oldest dog , who have been abandoned ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select max ( dogs.age )  from breeds  where  dogs.abandoned_yn = 1 "
    },
    {
        "input": "[struct _ sep0] Find the distinct breed type and size type combinations for dogs , who have been abandoned ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select  distinct dogs.breed_code , dogs.size_code from breeds  where  dogs.abandoned_yn = 1 "
    },
    {
        "input": "[struct _ sep0] What are the arriving date and the departing date of all the dogs , that were abandoned ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select dogs.date_arrived , dogs.date_departed from breeds  where  dogs.abandoned_yn = 1 "
    },
    {
        "input": "[struct _ sep0] List the arrival date and the departure date for all the dogs , that were abandoned ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select dogs.date_arrived , dogs.date_departed from breeds  where  dogs.abandoned_yn = 1 "
    },
    {
        "input": "[struct _ sep0] What is the average age of all the dogs , that were abandoned ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select avg ( dogs.age )  from breeds  where  dogs.abandoned_yn = 1 "
    },
    {
        "input": "[struct _ sep0] Compute the average age of all the dogs , that were abandoned ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select avg ( dogs.age )  from breeds  where  dogs.abandoned_yn = 1 "
    },
    {
        "input": "[struct _ sep0] What is the age of the oldest dog , that were abandoned ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select max ( dogs.age )  from breeds  where  dogs.abandoned_yn = 1 "
    },
    {
        "input": "[struct _ sep0] Tell me the age of the oldest dog , that were abandoned ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select max ( dogs.age )  from breeds  where  dogs.abandoned_yn = 1 "
    },
    {
        "input": "[struct _ sep0] Find the distinct breed type and size type combinations for dogs , that were abandoned ? [/struct _ sep0]| dog _ kennels | breeds : breed _ code, breed _ name | charges : charge _ id, charge _ type, charge _ amount | sizes : size _ code, size _ description | treatment _ types : treatment _ type _ code, treatment _ type _ description | owners : owner _ id, first _ name, last _ name, street, city, state, zip _ code, email _ address, home _ phone, cell _ number | dogs : dog _ id, owner _ id, abandoned _ yn, breed _ code, size _ code, name, age, date _ of _ birth, gender, weight, date _ arrived, date _ adopted, date _ departed | professionals : professional _ id, role _ code, first _ name, street, city, state, zip _ code, last _ name, email _ address, home _ phone, cell _ number | treatments : treatment _ id, dog _ id, professional _ id, treatment _ type _ code, date _ of _ treatment, cost _ of _ treatment",
        "gold_natsql": "select  distinct dogs.breed_code , dogs.size_code from breeds  where  dogs.abandoned_yn = 1 "
    },
    {
        "input": "[struct _ sep0] What are the birth year and citizenship of singers , in ascending order of net worth . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Birth_Year , singer.Citizenship from singer  order by singer.Net_Worth_Millions asc"
    },
    {
        "input": "[struct _ sep0] What are the birth years and citizenships of the singers , in ascending order of net worth . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Birth_Year , singer.Citizenship from singer  order by singer.Net_Worth_Millions asc"
    },
    {
        "input": "[struct _ sep0] List the name of singers whose citizenship is not ' France ' , in ascending order of net worth . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship ( France ) | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Citizenship != \"France\"  order by singer.Net_Worth_Millions asc"
    },
    {
        "input": "[struct _ sep0] What are the names of the singers who are not France citizens , in ascending order of net worth . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship ( France ) | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Citizenship != \"France\"  order by singer.Net_Worth_Millions asc"
    },
    {
        "input": "[struct _ sep0] Show the name of singers whose birth year is either 1948 or 1949 , in ascending order of net worth . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Birth_Year = 1948  or  singer.Birth_Year = 1949  order by singer.Net_Worth_Millions asc"
    },
    {
        "input": "[struct _ sep0] What are the names of the singers whose birth years are either 1948 or 1949 , in ascending order of net worth . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Birth_Year = 1948  or  singer.Birth_Year = 1949  order by singer.Net_Worth_Millions asc"
    },
    {
        "input": "[struct _ sep0] Show the citizenship shared by singers with birth year before 1945 and after 1955 , in ascending order of net worth . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Citizenship from singer  where  singer.Birth_Year < 1945  and  singer.Birth_Year > 1955  order by singer.Net_Worth_Millions asc"
    },
    {
        "input": "[struct _ sep0] What are the citizenships that are shared by singers with a birth year before 1945 and after 1955 , in ascending order of net worth . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Citizenship from singer  where  singer.Birth_Year < 1945  and  singer.Birth_Year > 1955  order by singer.Net_Worth_Millions asc"
    },
    {
        "input": "[struct _ sep0] What are the birth year and citizenship of singers , ordered by ascending net worth ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Birth_Year , singer.Citizenship from singer  order by singer.Net_Worth_Millions asc"
    },
    {
        "input": "[struct _ sep0] What are the birth years and citizenships of the singers , ordered by ascending net worth ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Birth_Year , singer.Citizenship from singer  order by singer.Net_Worth_Millions asc"
    },
    {
        "input": "[struct _ sep0] List the name of singers whose citizenship is not ' France ' , ordered by ascending net worth ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship ( France ) | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Citizenship != \"France\"  order by singer.Net_Worth_Millions asc"
    },
    {
        "input": "[struct _ sep0] What are the names of the singers who are not France citizens , ordered by ascending net worth ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship ( France ) | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Citizenship != \"France\"  order by singer.Net_Worth_Millions asc"
    },
    {
        "input": "[struct _ sep0] Show the name of singers whose birth year is either 1948 or 1949 , ordered by ascending net worth ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Birth_Year = 1948  or  singer.Birth_Year = 1949  order by singer.Net_Worth_Millions asc"
    },
    {
        "input": "[struct _ sep0] What are the names of the singers whose birth years are either 1948 or 1949 , ordered by ascending net worth ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Birth_Year = 1948  or  singer.Birth_Year = 1949  order by singer.Net_Worth_Millions asc"
    },
    {
        "input": "[struct _ sep0] Show the citizenship shared by singers with birth year before 1945 and after 1955 , ordered by ascending net worth ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Citizenship from singer  where  singer.Birth_Year < 1945  and  singer.Birth_Year > 1955  order by singer.Net_Worth_Millions asc"
    },
    {
        "input": "[struct _ sep0] What are the citizenships that are shared by singers with a birth year before 1945 and after 1955 , ordered by ascending net worth ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Citizenship from singer  where  singer.Birth_Year < 1945  and  singer.Birth_Year > 1955  order by singer.Net_Worth_Millions asc"
    },
    {
        "input": "[struct _ sep0] What is the count of singers , whose citizenship is not ' France ' . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship ( France ) | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select count ( singer.* )  from singer  where  singer.Citizenship != \"France\" "
    },
    {
        "input": "[struct _ sep0] What are the birth year and citizenship of singers , whose citizenship is not ' France ' . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship ( France ) | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Birth_Year , singer.Citizenship from singer  where  singer.Citizenship != \"France\" "
    },
    {
        "input": "[struct _ sep0] What are the birth years and citizenships of the singers , whose citizenship is not ' France ' . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship ( France ) | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Birth_Year , singer.Citizenship from singer  where  singer.Citizenship != \"France\" "
    },
    {
        "input": "[struct _ sep0] What is the count of singers , who are not France citizens ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship ( France ) | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select count ( singer.* )  from singer  where  singer.Citizenship != \"France\" "
    },
    {
        "input": "[struct _ sep0] What are the birth year and citizenship of singers , who are not France citizens ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship ( France ) | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Birth_Year , singer.Citizenship from singer  where  singer.Citizenship != \"France\" "
    },
    {
        "input": "[struct _ sep0] What are the birth years and citizenships of the singers , who are not France citizens ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship ( France ) | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Birth_Year , singer.Citizenship from singer  where  singer.Citizenship != \"France\" "
    },
    {
        "input": "[struct _ sep0] What is the name of the singer who is worth the most and who are not France citizens ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship ( France ) | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Citizenship != \"France\"  order by singer.Net_Worth_Millions desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the count of singers , whose birth year is either 1948 or 1949 ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select count ( singer.* )  from singer  where  singer.Birth_Year = 1948  or  singer.Birth_Year = 1949 "
    },
    {
        "input": "[struct _ sep0] What are the birth year and citizenship of singers , whose birth year is either 1948 or 1949 ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Birth_Year , singer.Citizenship from singer  where  singer.Birth_Year = 1948  or  singer.Birth_Year = 1949 "
    },
    {
        "input": "[struct _ sep0] What are the birth years and citizenships of the singers , whose birth year is either 1948 or 1949 ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Birth_Year , singer.Citizenship from singer  where  singer.Birth_Year = 1948  or  singer.Birth_Year = 1949 "
    },
    {
        "input": "[struct _ sep0] List the name of singers whose citizenship is not ' France ' and whose birth year is either 1948 or 1949 ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship ( France ) | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Citizenship != \"France\"  and  singer.Birth_Year = 1948  or  singer.Birth_Year = 1949 "
    },
    {
        "input": "[struct _ sep0] What is the count of singers , whose birth years are either 1948 or 1949 ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select count ( singer.* )  from singer  where  singer.Birth_Year = 1948  or  singer.Birth_Year = 1949 "
    },
    {
        "input": "[struct _ sep0] What are the birth year and citizenship of singers , whose birth years are either 1948 or 1949 ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Birth_Year , singer.Citizenship from singer  where  singer.Birth_Year = 1948  or  singer.Birth_Year = 1949 "
    },
    {
        "input": "[struct _ sep0] What are the birth years and citizenships of the singers , whose birth years are either 1948 or 1949 ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Birth_Year , singer.Citizenship from singer  where  singer.Birth_Year = 1948  or  singer.Birth_Year = 1949 "
    },
    {
        "input": "[struct _ sep0] List the name of singers whose citizenship is not ' France ' and whose birth years are either 1948 or 1949 ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship ( France ) | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Citizenship != \"France\"  and  singer.Birth_Year = 1948  or  singer.Birth_Year = 1949 "
    },
    {
        "input": "[struct _ sep0] What are the birth year and citizenship of singers , with the largest net worth ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Birth_Year , singer.Citizenship from singer  order by singer.Net_Worth_Millions desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the birth years and citizenships of the singers , with the largest net worth ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Birth_Year , singer.Citizenship from singer  order by singer.Net_Worth_Millions desc limit 1"
    },
    {
        "input": "[struct _ sep0] Show the citizenship shared by singers with birth year before 1945 and after 1955 and with the largest net worth ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Citizenship from singer  where  singer.Birth_Year < 1945  and  singer.Birth_Year > 1955  order by singer.Net_Worth_Millions desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the birth year and citizenship of singers , who is worth the most ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Birth_Year , singer.Citizenship from singer  order by singer.Net_Worth_Millions desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the birth years and citizenships of the singers , who is worth the most ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Birth_Year , singer.Citizenship from singer  order by singer.Net_Worth_Millions desc limit 1"
    },
    {
        "input": "[struct _ sep0] What are the names of the singers who are not France citizens and who is worth the most ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship ( France ) | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Citizenship != \"France\"  order by singer.Net_Worth_Millions desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the count of singers , that have songs with sales more than 300000 . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select count ( singer.* )  from singer  where  song.Sales > 300000 "
    },
    {
        "input": "[struct _ sep0] What are the birth year and citizenship of singers , that have songs with sales more than 300000 . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Birth_Year , singer.Citizenship from singer  where  song.Sales > 300000 "
    },
    {
        "input": "[struct _ sep0] What are the birth years and citizenships of the singers , that have songs with sales more than 300000 . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Birth_Year , singer.Citizenship from singer  where  song.Sales > 300000 "
    },
    {
        "input": "[struct _ sep0] Show the names of singers that have more than one song and that have songs with sales more than 300000 . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  count ( song.* )  > 1  and  song.Sales > 300000  group by singer.Name "
    },
    {
        "input": "[struct _ sep0] Show the names of singers that have more than one song or that have songs with sales more than 300000 . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  count ( song.* )  > 1  or  song.Sales > 300000  group by singer.Name "
    },
    {
        "input": "[struct _ sep0] What are the names of the singers that have more than one songs and that have songs with sales more than 300000 . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  count ( song.* )  > 1  and  song.Sales > 300000  group by singer.Name "
    },
    {
        "input": "[struct _ sep0] What are the names of the singers that have more than one songs or that have songs with sales more than 300000 . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  count ( song.* )  > 1  or  song.Sales > 300000  group by singer.Name "
    },
    {
        "input": "[struct _ sep0] What is the count of singers , that have sales more than 300000 ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select count ( singer.* )  from singer  where  song.Sales > 300000 "
    },
    {
        "input": "[struct _ sep0] What are the birth year and citizenship of singers , that have sales more than 300000 ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Birth_Year , singer.Citizenship from singer  where  song.Sales > 300000 "
    },
    {
        "input": "[struct _ sep0] What are the birth years and citizenships of the singers , that have sales more than 300000 ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Birth_Year , singer.Citizenship from singer  where  song.Sales > 300000 "
    },
    {
        "input": "[struct _ sep0] Show the names of singers that have more than one song and that have sales more than 300000 ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  count ( song.* )  > 1  and  song.Sales > 300000  group by singer.Name "
    },
    {
        "input": "[struct _ sep0] Show the names of singers that have more than one song or that have sales more than 300000 ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  count ( song.* )  > 1  or  song.Sales > 300000  group by singer.Name "
    },
    {
        "input": "[struct _ sep0] What are the names of the singers that have more than one songs and that have sales more than 300000 ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  count ( song.* )  > 1  and  song.Sales > 300000  group by singer.Name "
    },
    {
        "input": "[struct _ sep0] What are the names of the singers that have more than one songs or that have sales more than 300000 ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  count ( song.* )  > 1  or  song.Sales > 300000  group by singer.Name "
    },
    {
        "input": "[struct _ sep0] What is the count of singers , that do not have any song . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select count ( singer.* )  from singer  where  @.@ not in song.* "
    },
    {
        "input": "[struct _ sep0] What are the birth year and citizenship of singers , that do not have any song . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Birth_Year , singer.Citizenship from singer  where  @.@ not in song.* "
    },
    {
        "input": "[struct _ sep0] What are the birth years and citizenships of the singers , that do not have any song . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Birth_Year , singer.Citizenship from singer  where  @.@ not in song.* "
    },
    {
        "input": "[struct _ sep0] What is the count of singers , with birth year before 1945 and ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select count ( singer.* )  from singer  where  singer.Birth_Year < 1945 "
    },
    {
        "input": "[struct _ sep0] What are the birth year and citizenship of singers , with birth year before 1945 and ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Birth_Year , singer.Citizenship from singer  where  singer.Birth_Year < 1945 "
    },
    {
        "input": "[struct _ sep0] What are the birth years and citizenships of the singers , with birth year before 1945 and ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Birth_Year , singer.Citizenship from singer  where  singer.Birth_Year < 1945 "
    },
    {
        "input": "[struct _ sep0] What is the name of the singer with the largest net worth and with birth year before 1945 and ? [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Birth_Year < 1945  order by singer.Net_Worth_Millions desc limit 1"
    },
    {
        "input": "[struct _ sep0] What is the name of the singer with the largest net worth and after 1955 . [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  singer.Birth_Year > 1955  order by singer.Net_Worth_Millions desc limit 1"
    },
    {
        "input": "[struct _ sep0] Show different citizenship of singers and the number of singers of each citizenship , that are shared by singers with a birth year before 1945 [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Citizenship , count ( singer.* )  from singer  where  singer.Birth_Year < 1945  group by singer.Citizenship "
    },
    {
        "input": "[struct _ sep0] Show different citizenships and the maximum net worth of singers of each citizenship , that are shared by singers with a birth year before 1945 [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Citizenship , max ( singer.Net_Worth_Millions )  from singer  where  singer.Birth_Year < 1945  group by singer.Citizenship "
    },
    {
        "input": "[struct _ sep0] Show distinct names of singers that have songs with sales more than 300000 and that are shared by singers with a birth year before 1945 [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select  distinct singer.Name from singer  where  song.Sales > 300000  and  singer.Birth_Year < 1945 "
    },
    {
        "input": "[struct _ sep0] Show distinct names of singers that have songs with sales more than 300000 or that are shared by singers with a birth year before 1945 [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select  distinct singer.Name from singer  where  song.Sales > 300000  or  singer.Birth_Year < 1945 "
    },
    {
        "input": "[struct _ sep0] what are the different names of the singers that have sales more than 300000 and that are shared by singers with a birth year before 1945 [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select  distinct singer.Name from singer  where  song.Sales > 300000  and  singer.Birth_Year < 1945 "
    },
    {
        "input": "[struct _ sep0] what are the different names of the singers that have sales more than 300000 or that are shared by singers with a birth year before 1945 [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select  distinct singer.Name from singer  where  song.Sales > 300000  or  singer.Birth_Year < 1945 "
    },
    {
        "input": "[struct _ sep0] Show the names of singers that have more than one song and that are shared by singers with a birth year before 1945 [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  count ( song.* )  > 1  and  singer.Birth_Year < 1945  group by singer.Name "
    },
    {
        "input": "[struct _ sep0] Show the names of singers that have more than one song or that are shared by singers with a birth year before 1945 [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  count ( song.* )  > 1  or  singer.Birth_Year < 1945  group by singer.Name "
    },
    {
        "input": "[struct _ sep0] What are the names of the singers that have more than one songs and that are shared by singers with a birth year before 1945 [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  count ( song.* )  > 1  and  singer.Birth_Year < 1945  group by singer.Name "
    },
    {
        "input": "[struct _ sep0] What are the names of the singers that have more than one songs or that are shared by singers with a birth year before 1945 [/struct _ sep0]| singer | singer : singer _ id, name, birth _ year, net _ worth _ millions, citizenship | song : song _ id, title, singer _ id, sales, highest _ position",
        "gold_natsql": "select singer.Name from singer  where  count ( song.* )  > 1  or  singer.Birth_Year < 1945  group by singer.Name "
    }
]